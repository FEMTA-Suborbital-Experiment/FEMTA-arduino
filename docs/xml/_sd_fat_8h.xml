<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="_sd_fat_8h" kind="file" language="C++">
    <compoundname>SdFat.h</compoundname>
    <includes refid="_sd2_card_8h" local="yes">Sd2Card.h</includes>
    <includes refid="_fat_structs_8h" local="yes">FatStructs.h</includes>
    <includes local="no">Print.h</includes>
    <includedby refid="_s_d_8h" local="yes">libraries/SD-1.2.4/src/SD.h</includedby>
    <includedby refid="_sd_file_8cpp" local="yes">libraries/SD-1.2.4/src/utility/SdFile.cpp</includedby>
    <includedby refid="_sd_volume_8cpp" local="yes">libraries/SD-1.2.4/src/utility/SdVolume.cpp</includedby>
    <incdepgraph>
      <node id="6">
        <label>Arduino.h</label>
      </node>
      <node id="7">
        <label>FatStructs.h</label>
        <link refid="_fat_structs_8h"/>
      </node>
      <node id="2">
        <label>Sd2Card.h</label>
        <link refid="_sd2_card_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>Sd2PinMap.h</label>
        <link refid="_sd2_pin_map_8h_source"/>
      </node>
      <node id="1">
        <label>libraries/SD-1.2.4/src/utility/SdFat.h</label>
        <link refid="_sd_fat_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>SdInfo.h</label>
        <link refid="_sd_info_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>Print.h</label>
      </node>
      <node id="5">
        <label>stdint.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="4">
        <label>examples/logger_test/src/Writer.cpp</label>
        <link refid="examples_2logger__test_2src_2_writer_8cpp"/>
      </node>
      <node id="3">
        <label>examples/logger_test/src/Writer.h</label>
        <link refid="examples_2logger__test_2src_2_writer_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>examples/read_struct_from_binary/src/Reader.cpp</label>
        <link refid="examples_2read__struct__from__binary_2src_2_reader_8cpp"/>
      </node>
      <node id="5">
        <label>examples/read_struct_from_binary/src/Reader.h</label>
        <link refid="examples_2read__struct__from__binary_2src_2_reader_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>libraries/SD-1.2.4/src/SD.h</label>
        <link refid="_s_d_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>libraries/SD-1.2.4/src/utility/SdFat.h</label>
        <link refid="_sd_fat_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>main/pme/src/Reader.cpp</label>
        <link refid="main_2pme_2src_2_reader_8cpp"/>
      </node>
      <node id="7">
        <label>main/pme/src/Reader.h</label>
        <link refid="main_2pme_2src_2_reader_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>main/pme/src/Writer.cpp</label>
        <link refid="main_2pme_2src_2_writer_8cpp"/>
      </node>
      <node id="9">
        <label>main/pme/src/Writer.h</label>
        <link refid="main_2pme_2src_2_writer_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="class_sd_file" prot="public">SdFile</innerclass>
    <innerclass refid="unioncache__t" prot="public">cache_t</innerclass>
    <innerclass refid="class_sd_volume" prot="public">SdVolume</innerclass>
    <sectiondef kind="define">
      <memberdef kind="define" id="_sd_fat_8h_1af8ef36dfd023f41169baa17d05f55c56" prot="public" static="no">
        <name>ALLOW_DEPRECATED_FUNCTIONS</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Allow use of deprecated functions if non-zero </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/SD-1.2.4/src/utility/SdFat.h" line="36" column="9" bodyfile="libraries/SD-1.2.4/src/utility/SdFat.h" bodystart="36" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="var">
      <memberdef kind="variable" id="_sd_fat_8h_1ac78cfe032599ef1f5723c62106017fcd" prot="public" static="no" mutable="no">
        <type>uint8_t const</type>
        <definition>uint8_t const LS_DATE</definition>
        <argsstring></argsstring>
        <name>LS_DATE</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>ls() flag to print modify date </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/SD-1.2.4/src/utility/SdFat.h" line="59" column="15" bodyfile="libraries/SD-1.2.4/src/utility/SdFat.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_sd_fat_8h_1a8170e56f2df0139f3acd73c35636fa7f" prot="public" static="no" mutable="no">
        <type>uint8_t const</type>
        <definition>uint8_t const LS_SIZE</definition>
        <argsstring></argsstring>
        <name>LS_SIZE</name>
        <initializer>= 2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>ls() flag to print file size </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/SD-1.2.4/src/utility/SdFat.h" line="61" column="15" bodyfile="libraries/SD-1.2.4/src/utility/SdFat.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_sd_fat_8h_1af90ecd4124f4c2563b37174be91e76f9" prot="public" static="no" mutable="no">
        <type>uint8_t const</type>
        <definition>uint8_t const LS_R</definition>
        <argsstring></argsstring>
        <name>LS_R</name>
        <initializer>= 4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>ls() flag for recursive list of subdirectories </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/SD-1.2.4/src/utility/SdFat.h" line="63" column="15" bodyfile="libraries/SD-1.2.4/src/utility/SdFat.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_sd_fat_8h_1ac5a1c3e543273b0374ba114c496e662e" prot="public" static="no" mutable="no">
        <type>uint8_t const</type>
        <definition>uint8_t const O_READ</definition>
        <argsstring></argsstring>
        <name>O_READ</name>
        <initializer>= 0X01</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>open() oflag for reading </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/SD-1.2.4/src/utility/SdFat.h" line="67" column="15" bodyfile="libraries/SD-1.2.4/src/utility/SdFat.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_sd_fat_8h_1ac13ca62d7e6f8f6d657d4607474652bf" prot="public" static="no" mutable="no">
        <type>uint8_t const</type>
        <definition>uint8_t const O_RDONLY</definition>
        <argsstring></argsstring>
        <name>O_RDONLY</name>
        <initializer>= <ref refid="_sd_fat_8h_1ac5a1c3e543273b0374ba114c496e662e" kindref="member">O_READ</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>open() oflag - same as O_READ </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/SD-1.2.4/src/utility/SdFat.h" line="69" column="15" bodyfile="libraries/SD-1.2.4/src/utility/SdFat.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_sd_fat_8h_1a44c1620ada13f6318ab39b9fa38ef55a" prot="public" static="no" mutable="no">
        <type>uint8_t const</type>
        <definition>uint8_t const O_WRITE</definition>
        <argsstring></argsstring>
        <name>O_WRITE</name>
        <initializer>= 0X02</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>open() oflag for write </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/SD-1.2.4/src/utility/SdFat.h" line="71" column="15" bodyfile="libraries/SD-1.2.4/src/utility/SdFat.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_sd_fat_8h_1a782767ee2580bb1566048017b254281d" prot="public" static="no" mutable="no">
        <type>uint8_t const</type>
        <definition>uint8_t const O_WRONLY</definition>
        <argsstring></argsstring>
        <name>O_WRONLY</name>
        <initializer>= <ref refid="_sd_fat_8h_1a44c1620ada13f6318ab39b9fa38ef55a" kindref="member">O_WRITE</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>open() oflag - same as O_WRITE </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/SD-1.2.4/src/utility/SdFat.h" line="73" column="15" bodyfile="libraries/SD-1.2.4/src/utility/SdFat.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_sd_fat_8h_1ad79c5a45cb5e4855b771629fc15d78f6" prot="public" static="no" mutable="no">
        <type>uint8_t const</type>
        <definition>uint8_t const O_RDWR</definition>
        <argsstring></argsstring>
        <name>O_RDWR</name>
        <initializer>= (<ref refid="_sd_fat_8h_1ac5a1c3e543273b0374ba114c496e662e" kindref="member">O_READ</ref> | <ref refid="_sd_fat_8h_1a44c1620ada13f6318ab39b9fa38ef55a" kindref="member">O_WRITE</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>open() oflag for reading and writing </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/SD-1.2.4/src/utility/SdFat.h" line="75" column="15" bodyfile="libraries/SD-1.2.4/src/utility/SdFat.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_sd_fat_8h_1a4efda39151f5ef2dc7fbd138be51336a" prot="public" static="no" mutable="no">
        <type>uint8_t const</type>
        <definition>uint8_t const O_ACCMODE</definition>
        <argsstring></argsstring>
        <name>O_ACCMODE</name>
        <initializer>= (<ref refid="_sd_fat_8h_1ac5a1c3e543273b0374ba114c496e662e" kindref="member">O_READ</ref> | <ref refid="_sd_fat_8h_1a44c1620ada13f6318ab39b9fa38ef55a" kindref="member">O_WRITE</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>open() oflag mask for access modes </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/SD-1.2.4/src/utility/SdFat.h" line="77" column="15" bodyfile="libraries/SD-1.2.4/src/utility/SdFat.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_sd_fat_8h_1a4242b37e810af3a6485adda0e08a9a2b" prot="public" static="no" mutable="no">
        <type>uint8_t const</type>
        <definition>uint8_t const O_APPEND</definition>
        <argsstring></argsstring>
        <name>O_APPEND</name>
        <initializer>= 0X04</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The file offset shall be set to the end of the file prior to each write. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/SD-1.2.4/src/utility/SdFat.h" line="79" column="15" bodyfile="libraries/SD-1.2.4/src/utility/SdFat.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_sd_fat_8h_1a3066c471d52b056dec13fa567f7bbd9d" prot="public" static="no" mutable="no">
        <type>uint8_t const</type>
        <definition>uint8_t const O_SYNC</definition>
        <argsstring></argsstring>
        <name>O_SYNC</name>
        <initializer>= 0X08</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>synchronous writes - call sync() after each write </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/SD-1.2.4/src/utility/SdFat.h" line="81" column="15" bodyfile="libraries/SD-1.2.4/src/utility/SdFat.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_sd_fat_8h_1a20d0ef801486dd02de6ee482de731193" prot="public" static="no" mutable="no">
        <type>uint8_t const</type>
        <definition>uint8_t const O_CREAT</definition>
        <argsstring></argsstring>
        <name>O_CREAT</name>
        <initializer>= 0X10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>create the file if nonexistent </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/SD-1.2.4/src/utility/SdFat.h" line="83" column="15" bodyfile="libraries/SD-1.2.4/src/utility/SdFat.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_sd_fat_8h_1ab5635d4288cb294c1ed000fa183e072b" prot="public" static="no" mutable="no">
        <type>uint8_t const</type>
        <definition>uint8_t const O_EXCL</definition>
        <argsstring></argsstring>
        <name>O_EXCL</name>
        <initializer>= 0X20</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>If O_CREAT and O_EXCL are set, open() shall fail if the file exists </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/SD-1.2.4/src/utility/SdFat.h" line="85" column="15" bodyfile="libraries/SD-1.2.4/src/utility/SdFat.h" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_sd_fat_8h_1a9dc438ff90d0c8af452331c339dbc08e" prot="public" static="no" mutable="no">
        <type>uint8_t const</type>
        <definition>uint8_t const O_TRUNC</definition>
        <argsstring></argsstring>
        <name>O_TRUNC</name>
        <initializer>= 0X40</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>truncate the file to zero length </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/SD-1.2.4/src/utility/SdFat.h" line="87" column="15" bodyfile="libraries/SD-1.2.4/src/utility/SdFat.h" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_sd_fat_8h_1a5f34ce6e95713d872ca6a640c8783462" prot="public" static="no" mutable="no">
        <type>uint8_t const</type>
        <definition>uint8_t const T_ACCESS</definition>
        <argsstring></argsstring>
        <name>T_ACCESS</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>set the file&apos;s last access date </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/SD-1.2.4/src/utility/SdFat.h" line="91" column="15" bodyfile="libraries/SD-1.2.4/src/utility/SdFat.h" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_sd_fat_8h_1a533dc316f5a59209ac5e9c630d2df4c4" prot="public" static="no" mutable="no">
        <type>uint8_t const</type>
        <definition>uint8_t const T_CREATE</definition>
        <argsstring></argsstring>
        <name>T_CREATE</name>
        <initializer>= 2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>set the file&apos;s creation date and time </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/SD-1.2.4/src/utility/SdFat.h" line="93" column="15" bodyfile="libraries/SD-1.2.4/src/utility/SdFat.h" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_sd_fat_8h_1a2a6192fd0f5847783868deed6de53d1e" prot="public" static="no" mutable="no">
        <type>uint8_t const</type>
        <definition>uint8_t const T_WRITE</definition>
        <argsstring></argsstring>
        <name>T_WRITE</name>
        <initializer>= 4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the file&apos;s write date and time </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/SD-1.2.4/src/utility/SdFat.h" line="95" column="15" bodyfile="libraries/SD-1.2.4/src/utility/SdFat.h" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_sd_fat_8h_1a4da8c96e256b06356321e81705494010" prot="public" static="no" mutable="no">
        <type>uint8_t const</type>
        <definition>uint8_t const FAT_FILE_TYPE_CLOSED</definition>
        <argsstring></argsstring>
        <name>FAT_FILE_TYPE_CLOSED</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This <ref refid="class_sd_file" kindref="compound">SdFile</ref> has not been opened. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/SD-1.2.4/src/utility/SdFat.h" line="98" column="15" bodyfile="libraries/SD-1.2.4/src/utility/SdFat.h" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_sd_fat_8h_1a666774999b9afd627fdad75471101581" prot="public" static="no" mutable="no">
        <type>uint8_t const</type>
        <definition>uint8_t const FAT_FILE_TYPE_NORMAL</definition>
        <argsstring></argsstring>
        <name>FAT_FILE_TYPE_NORMAL</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_sd_file" kindref="compound">SdFile</ref> for a file </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/SD-1.2.4/src/utility/SdFat.h" line="100" column="15" bodyfile="libraries/SD-1.2.4/src/utility/SdFat.h" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_sd_fat_8h_1a4c02ced3c57420e2a1997f51bd87d150" prot="public" static="no" mutable="no">
        <type>uint8_t const</type>
        <definition>uint8_t const FAT_FILE_TYPE_ROOT16</definition>
        <argsstring></argsstring>
        <name>FAT_FILE_TYPE_ROOT16</name>
        <initializer>= 2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_sd_file" kindref="compound">SdFile</ref> for a FAT16 root directory </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/SD-1.2.4/src/utility/SdFat.h" line="102" column="15" bodyfile="libraries/SD-1.2.4/src/utility/SdFat.h" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_sd_fat_8h_1a9a1a07cb1d09cfdb3cc53183c6e5dc57" prot="public" static="no" mutable="no">
        <type>uint8_t const</type>
        <definition>uint8_t const FAT_FILE_TYPE_ROOT32</definition>
        <argsstring></argsstring>
        <name>FAT_FILE_TYPE_ROOT32</name>
        <initializer>= 3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_sd_file" kindref="compound">SdFile</ref> for a FAT32 root directory </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/SD-1.2.4/src/utility/SdFat.h" line="104" column="15" bodyfile="libraries/SD-1.2.4/src/utility/SdFat.h" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_sd_fat_8h_1ac301b0465fdd7953c6e110b9896cc9fd" prot="public" static="no" mutable="no">
        <type>uint8_t const</type>
        <definition>uint8_t const FAT_FILE_TYPE_SUBDIR</definition>
        <argsstring></argsstring>
        <name>FAT_FILE_TYPE_SUBDIR</name>
        <initializer>= 4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_sd_file" kindref="compound">SdFile</ref> for a subdirectory </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/SD-1.2.4/src/utility/SdFat.h" line="106" column="15" bodyfile="libraries/SD-1.2.4/src/utility/SdFat.h" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_sd_fat_8h_1abc9b0906aeeedfe122b0ca629bac889b" prot="public" static="no" mutable="no">
        <type>uint8_t const</type>
        <definition>uint8_t const FAT_FILE_TYPE_MIN_DIR</definition>
        <argsstring></argsstring>
        <name>FAT_FILE_TYPE_MIN_DIR</name>
        <initializer>= <ref refid="_sd_fat_8h_1a4c02ced3c57420e2a1997f51bd87d150" kindref="member">FAT_FILE_TYPE_ROOT16</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Test value for directory type </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/SD-1.2.4/src/utility/SdFat.h" line="108" column="15" bodyfile="libraries/SD-1.2.4/src/utility/SdFat.h" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_sd_fat_8h_1a441bb1bc5f52d512656de3b86a279948" prot="public" static="no" mutable="no">
        <type>uint16_t const</type>
        <definition>uint16_t const FAT_DEFAULT_DATE</definition>
        <argsstring></argsstring>
        <name>FAT_DEFAULT_DATE</name>
        <initializer>= ((2000 - 1980) &lt;&lt; 9) | (1 &lt;&lt; 5) | 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Default date for file timestamps is 1 Jan 2000 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/SD-1.2.4/src/utility/SdFat.h" line="143" column="16" bodyfile="libraries/SD-1.2.4/src/utility/SdFat.h" bodystart="143" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_sd_fat_8h_1a00451fc2d3563a2255797bd1f40507fb" prot="public" static="no" mutable="no">
        <type>uint16_t const</type>
        <definition>uint16_t const FAT_DEFAULT_TIME</definition>
        <argsstring></argsstring>
        <name>FAT_DEFAULT_TIME</name>
        <initializer>= (1 &lt;&lt; 11)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Default time for file timestamp is 1 am </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/SD-1.2.4/src/utility/SdFat.h" line="145" column="16" bodyfile="libraries/SD-1.2.4/src/utility/SdFat.h" bodystart="145" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="_sd_fat_8h_1a44899ad42ddf32ff1c1a73b5251b304a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint16_t</type>
        <definition>static uint16_t FAT_DATE</definition>
        <argsstring>(uint16_t year, uint8_t month, uint8_t day)</argsstring>
        <name>FAT_DATE</name>
        <param>
          <type>uint16_t</type>
          <declname>year</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>month</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>day</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>date field for FAT directory entry </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/SD-1.2.4/src/utility/SdFat.h" line="111" column="24" bodyfile="libraries/SD-1.2.4/src/utility/SdFat.h" bodystart="111" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="_sd_fat_8h_1a279a75f907dd2603543c7bdad00ff603" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint16_t</type>
        <definition>static uint16_t FAT_YEAR</definition>
        <argsstring>(uint16_t fatDate)</argsstring>
        <name>FAT_YEAR</name>
        <param>
          <type>uint16_t</type>
          <declname>fatDate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>year part of FAT directory date field </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/SD-1.2.4/src/utility/SdFat.h" line="115" column="24" bodyfile="libraries/SD-1.2.4/src/utility/SdFat.h" bodystart="115" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="_sd_fat_8h_1a429bc2d96f5bc26dc3bd6cc2bd535b84" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint8_t</type>
        <definition>static uint8_t FAT_MONTH</definition>
        <argsstring>(uint16_t fatDate)</argsstring>
        <name>FAT_MONTH</name>
        <param>
          <type>uint16_t</type>
          <declname>fatDate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>month part of FAT directory date field </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/SD-1.2.4/src/utility/SdFat.h" line="119" column="23" bodyfile="libraries/SD-1.2.4/src/utility/SdFat.h" bodystart="119" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="_sd_fat_8h_1a4cc8bc105529bf9e9c11e8ef099d68b0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint8_t</type>
        <definition>static uint8_t FAT_DAY</definition>
        <argsstring>(uint16_t fatDate)</argsstring>
        <name>FAT_DAY</name>
        <param>
          <type>uint16_t</type>
          <declname>fatDate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>day part of FAT directory date field </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/SD-1.2.4/src/utility/SdFat.h" line="123" column="23" bodyfile="libraries/SD-1.2.4/src/utility/SdFat.h" bodystart="123" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="_sd_fat_8h_1a375720927be5a39475d48b2d75dae29a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint16_t</type>
        <definition>static uint16_t FAT_TIME</definition>
        <argsstring>(uint8_t hour, uint8_t minute, uint8_t second)</argsstring>
        <name>FAT_TIME</name>
        <param>
          <type>uint8_t</type>
          <declname>hour</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>minute</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>second</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>time field for FAT directory entry </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/SD-1.2.4/src/utility/SdFat.h" line="127" column="24" bodyfile="libraries/SD-1.2.4/src/utility/SdFat.h" bodystart="127" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="_sd_fat_8h_1ae7c733d49a5570054f6db3bd53332ba1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint8_t</type>
        <definition>static uint8_t FAT_HOUR</definition>
        <argsstring>(uint16_t fatTime)</argsstring>
        <name>FAT_HOUR</name>
        <param>
          <type>uint16_t</type>
          <declname>fatTime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>hour part of FAT directory time field </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/SD-1.2.4/src/utility/SdFat.h" line="131" column="23" bodyfile="libraries/SD-1.2.4/src/utility/SdFat.h" bodystart="131" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="_sd_fat_8h_1a1b09676a41ae6c9e19664bdcd5b1d34e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint8_t</type>
        <definition>static uint8_t FAT_MINUTE</definition>
        <argsstring>(uint16_t fatTime)</argsstring>
        <name>FAT_MINUTE</name>
        <param>
          <type>uint16_t</type>
          <declname>fatTime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>minute part of FAT directory time field </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/SD-1.2.4/src/utility/SdFat.h" line="135" column="23" bodyfile="libraries/SD-1.2.4/src/utility/SdFat.h" bodystart="135" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="_sd_fat_8h_1a4d553e2088d42e01d6c08ee84e611b00" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint8_t</type>
        <definition>static uint8_t FAT_SECOND</definition>
        <argsstring>(uint16_t fatTime)</argsstring>
        <name>FAT_SECOND</name>
        <param>
          <type>uint16_t</type>
          <declname>fatTime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>second part of FAT directory time field </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/SD-1.2.4/src/utility/SdFat.h" line="139" column="23" bodyfile="libraries/SD-1.2.4/src/utility/SdFat.h" bodystart="139" bodyend="141"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><ref refid="class_sd_file" kindref="compound">SdFile</ref> and <ref refid="class_sd_volume" kindref="compound">SdVolume</ref> classes </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>Arduino<sp/>SdFat<sp/>Library</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/>Copyright<sp/>(C)<sp/>2009<sp/>by<sp/>William<sp/>Greiman</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>Arduino<sp/>SdFat<sp/>Library</highlight></codeline>
<codeline lineno="5"><highlight class="comment"></highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/><sp/>This<sp/>Library<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/><sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/><sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>3<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/><sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="10"><highlight class="comment"></highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/><sp/><sp/>This<sp/>Library<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/><sp/><sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/><sp/><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/><sp/><sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"></highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/><sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/><sp/><sp/>along<sp/>with<sp/>the<sp/>Arduino<sp/>SdFat<sp/>Library.<sp/><sp/>If<sp/>not,<sp/>see</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/><sp/><sp/>&lt;http://www.gnu.org/licenses/&gt;.</highlight></codeline>
<codeline lineno="19"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SdFat_h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SdFat_h</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>(__AVR__)<sp/>||<sp/>defined<sp/>(__CPU_ARC__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#include<sp/>&lt;avr/pgmspace.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_sd2_card_8h" kindref="compound">Sd2Card.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_fat_structs_8h" kindref="compound">FatStructs.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;Print.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="36" refid="_sd_fat_8h_1af8ef36dfd023f41169baa17d05f55c56" refkind="member"><highlight class="preprocessor">#define<sp/>ALLOW_DEPRECATED_FUNCTIONS<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">//<sp/>forward<sp/>declaration<sp/>since<sp/>SdVolume<sp/>is<sp/>used<sp/>in<sp/>SdFile</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_sd_volume" kindref="compound">SdVolume</ref>;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">//==============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SdFile<sp/>class</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>O_RDONLY<sp/></highlight><highlight class="comment">//ARDUINO_ARCH_MBED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>O_READ</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>O_RDONLY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>O_WRITE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>O_WRONLY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>O_RDWR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>O_ACCMODE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>O_APPEND</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>O_SYNC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>O_CREAT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>O_EXCL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>O_TRUNC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">//<sp/>flags<sp/>for<sp/>ls()</highlight></codeline>
<codeline lineno="59" refid="_sd_fat_8h_1ac78cfe032599ef1f5723c62106017fcd" refkind="member"><highlight class="normal">uint8_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="_sd_fat_8h_1ac78cfe032599ef1f5723c62106017fcd" kindref="member">LS_DATE</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="61" refid="_sd_fat_8h_1a8170e56f2df0139f3acd73c35636fa7f" refkind="member"><highlight class="normal">uint8_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="_sd_fat_8h_1a8170e56f2df0139f3acd73c35636fa7f" kindref="member">LS_SIZE</ref><sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="63" refid="_sd_fat_8h_1af90ecd4124f4c2563b37174be91e76f9" refkind="member"><highlight class="normal">uint8_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="_sd_fat_8h_1af90ecd4124f4c2563b37174be91e76f9" kindref="member">LS_R</ref><sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="comment">//<sp/>use<sp/>the<sp/>gnu<sp/>style<sp/>oflag<sp/>in<sp/>open()</highlight></codeline>
<codeline lineno="67" refid="_sd_fat_8h_1ac5a1c3e543273b0374ba114c496e662e" refkind="member"><highlight class="normal">uint8_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="_sd_fat_8h_1ac5a1c3e543273b0374ba114c496e662e" kindref="member">O_READ</ref><sp/>=<sp/>0X01;</highlight></codeline>
<codeline lineno="69" refid="_sd_fat_8h_1ac13ca62d7e6f8f6d657d4607474652bf" refkind="member"><highlight class="normal">uint8_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="_sd_fat_8h_1ac13ca62d7e6f8f6d657d4607474652bf" kindref="member">O_RDONLY</ref><sp/>=<sp/><ref refid="_sd_fat_8h_1ac5a1c3e543273b0374ba114c496e662e" kindref="member">O_READ</ref>;</highlight></codeline>
<codeline lineno="71" refid="_sd_fat_8h_1a44c1620ada13f6318ab39b9fa38ef55a" refkind="member"><highlight class="normal">uint8_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="_sd_fat_8h_1a44c1620ada13f6318ab39b9fa38ef55a" kindref="member">O_WRITE</ref><sp/>=<sp/>0X02;</highlight></codeline>
<codeline lineno="73" refid="_sd_fat_8h_1a782767ee2580bb1566048017b254281d" refkind="member"><highlight class="normal">uint8_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="_sd_fat_8h_1a782767ee2580bb1566048017b254281d" kindref="member">O_WRONLY</ref><sp/>=<sp/><ref refid="_sd_fat_8h_1a44c1620ada13f6318ab39b9fa38ef55a" kindref="member">O_WRITE</ref>;</highlight></codeline>
<codeline lineno="75" refid="_sd_fat_8h_1ad79c5a45cb5e4855b771629fc15d78f6" refkind="member"><highlight class="normal">uint8_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="_sd_fat_8h_1ad79c5a45cb5e4855b771629fc15d78f6" kindref="member">O_RDWR</ref><sp/>=<sp/>(<ref refid="_sd_fat_8h_1ac5a1c3e543273b0374ba114c496e662e" kindref="member">O_READ</ref><sp/>|<sp/><ref refid="_sd_fat_8h_1a44c1620ada13f6318ab39b9fa38ef55a" kindref="member">O_WRITE</ref>);</highlight></codeline>
<codeline lineno="77" refid="_sd_fat_8h_1a4efda39151f5ef2dc7fbd138be51336a" refkind="member"><highlight class="normal">uint8_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="_sd_fat_8h_1a4efda39151f5ef2dc7fbd138be51336a" kindref="member">O_ACCMODE</ref><sp/>=<sp/>(<ref refid="_sd_fat_8h_1ac5a1c3e543273b0374ba114c496e662e" kindref="member">O_READ</ref><sp/>|<sp/><ref refid="_sd_fat_8h_1a44c1620ada13f6318ab39b9fa38ef55a" kindref="member">O_WRITE</ref>);</highlight></codeline>
<codeline lineno="79" refid="_sd_fat_8h_1a4242b37e810af3a6485adda0e08a9a2b" refkind="member"><highlight class="normal">uint8_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="_sd_fat_8h_1a4242b37e810af3a6485adda0e08a9a2b" kindref="member">O_APPEND</ref><sp/>=<sp/>0X04;</highlight></codeline>
<codeline lineno="81" refid="_sd_fat_8h_1a3066c471d52b056dec13fa567f7bbd9d" refkind="member"><highlight class="normal">uint8_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="_sd_fat_8h_1a3066c471d52b056dec13fa567f7bbd9d" kindref="member">O_SYNC</ref><sp/>=<sp/>0X08;</highlight></codeline>
<codeline lineno="83" refid="_sd_fat_8h_1a20d0ef801486dd02de6ee482de731193" refkind="member"><highlight class="normal">uint8_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="_sd_fat_8h_1a20d0ef801486dd02de6ee482de731193" kindref="member">O_CREAT</ref><sp/>=<sp/>0X10;</highlight></codeline>
<codeline lineno="85" refid="_sd_fat_8h_1ab5635d4288cb294c1ed000fa183e072b" refkind="member"><highlight class="normal">uint8_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="_sd_fat_8h_1ab5635d4288cb294c1ed000fa183e072b" kindref="member">O_EXCL</ref><sp/>=<sp/>0X20;</highlight></codeline>
<codeline lineno="87" refid="_sd_fat_8h_1a9dc438ff90d0c8af452331c339dbc08e" refkind="member"><highlight class="normal">uint8_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="_sd_fat_8h_1a9dc438ff90d0c8af452331c339dbc08e" kindref="member">O_TRUNC</ref><sp/>=<sp/>0X40;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="comment">//<sp/>flags<sp/>for<sp/>timestamp</highlight></codeline>
<codeline lineno="91" refid="_sd_fat_8h_1a5f34ce6e95713d872ca6a640c8783462" refkind="member"><highlight class="normal">uint8_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="_sd_fat_8h_1a5f34ce6e95713d872ca6a640c8783462" kindref="member">T_ACCESS</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="93" refid="_sd_fat_8h_1a533dc316f5a59209ac5e9c630d2df4c4" refkind="member"><highlight class="normal">uint8_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="_sd_fat_8h_1a533dc316f5a59209ac5e9c630d2df4c4" kindref="member">T_CREATE</ref><sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="95" refid="_sd_fat_8h_1a2a6192fd0f5847783868deed6de53d1e" refkind="member"><highlight class="normal">uint8_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="_sd_fat_8h_1a2a6192fd0f5847783868deed6de53d1e" kindref="member">T_WRITE</ref><sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="comment">//<sp/>values<sp/>for<sp/>type_</highlight></codeline>
<codeline lineno="98" refid="_sd_fat_8h_1a4da8c96e256b06356321e81705494010" refkind="member"><highlight class="normal">uint8_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="_sd_fat_8h_1a4da8c96e256b06356321e81705494010" kindref="member">FAT_FILE_TYPE_CLOSED</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="100" refid="_sd_fat_8h_1a666774999b9afd627fdad75471101581" refkind="member"><highlight class="normal">uint8_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="_sd_fat_8h_1a666774999b9afd627fdad75471101581" kindref="member">FAT_FILE_TYPE_NORMAL</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="102" refid="_sd_fat_8h_1a4c02ced3c57420e2a1997f51bd87d150" refkind="member"><highlight class="normal">uint8_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="_sd_fat_8h_1a4c02ced3c57420e2a1997f51bd87d150" kindref="member">FAT_FILE_TYPE_ROOT16</ref><sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="104" refid="_sd_fat_8h_1a9a1a07cb1d09cfdb3cc53183c6e5dc57" refkind="member"><highlight class="normal">uint8_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="_sd_fat_8h_1a9a1a07cb1d09cfdb3cc53183c6e5dc57" kindref="member">FAT_FILE_TYPE_ROOT32</ref><sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="106" refid="_sd_fat_8h_1ac301b0465fdd7953c6e110b9896cc9fd" refkind="member"><highlight class="normal">uint8_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="_sd_fat_8h_1ac301b0465fdd7953c6e110b9896cc9fd" kindref="member">FAT_FILE_TYPE_SUBDIR</ref><sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="108" refid="_sd_fat_8h_1abc9b0906aeeedfe122b0ca629bac889b" refkind="member"><highlight class="normal">uint8_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="_sd_fat_8h_1abc9b0906aeeedfe122b0ca629bac889b" kindref="member">FAT_FILE_TYPE_MIN_DIR</ref><sp/>=<sp/><ref refid="_sd_fat_8h_1a4c02ced3c57420e2a1997f51bd87d150" kindref="member">FAT_FILE_TYPE_ROOT16</ref>;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint16_t<sp/>FAT_DATE(uint16_t<sp/>year,<sp/>uint8_t<sp/>month,<sp/>uint8_t<sp/>day)<sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(year<sp/>-<sp/>1980)<sp/>&lt;&lt;<sp/>9<sp/>|<sp/>month<sp/>&lt;&lt;<sp/>5<sp/>|<sp/>day;</highlight></codeline>
<codeline lineno="113"><highlight class="normal">}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint16_t<sp/>FAT_YEAR(uint16_t<sp/>fatDate)<sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1980<sp/>+<sp/>(fatDate<sp/>&gt;&gt;<sp/>9);</highlight></codeline>
<codeline lineno="117"><highlight class="normal">}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint8_t<sp/>FAT_MONTH(uint16_t<sp/>fatDate)<sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(fatDate<sp/>&gt;&gt;<sp/>5)<sp/>&amp;<sp/>0XF;</highlight></codeline>
<codeline lineno="121"><highlight class="normal">}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint8_t<sp/>FAT_DAY(uint16_t<sp/>fatDate)<sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fatDate<sp/>&amp;<sp/>0X1F;</highlight></codeline>
<codeline lineno="125"><highlight class="normal">}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint16_t<sp/>FAT_TIME(uint8_t<sp/>hour,<sp/>uint8_t<sp/>minute,<sp/>uint8_t<sp/>second)<sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hour<sp/>&lt;&lt;<sp/>11<sp/>|<sp/>minute<sp/>&lt;&lt;<sp/>5<sp/>|<sp/>second<sp/>&gt;&gt;<sp/>1;</highlight></codeline>
<codeline lineno="129"><highlight class="normal">}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint8_t<sp/>FAT_HOUR(uint16_t<sp/>fatTime)<sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fatTime<sp/>&gt;&gt;<sp/>11;</highlight></codeline>
<codeline lineno="133"><highlight class="normal">}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint8_t<sp/>FAT_MINUTE(uint16_t<sp/>fatTime)<sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(fatTime<sp/>&gt;&gt;<sp/>5)<sp/>&amp;<sp/>0X3F;</highlight></codeline>
<codeline lineno="137"><highlight class="normal">}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint8_t<sp/>FAT_SECOND(uint16_t<sp/>fatTime)<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>2<sp/>*<sp/>(fatTime<sp/>&amp;<sp/>0X1F);</highlight></codeline>
<codeline lineno="141"><highlight class="normal">}</highlight></codeline>
<codeline lineno="143" refid="_sd_fat_8h_1a441bb1bc5f52d512656de3b86a279948" refkind="member"><highlight class="normal">uint16_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="_sd_fat_8h_1a441bb1bc5f52d512656de3b86a279948" kindref="member">FAT_DEFAULT_DATE</ref><sp/>=<sp/>((2000<sp/>-<sp/>1980)<sp/>&lt;&lt;<sp/>9)<sp/>|<sp/>(1<sp/>&lt;&lt;<sp/>5)<sp/>|<sp/>1;</highlight></codeline>
<codeline lineno="145" refid="_sd_fat_8h_1a00451fc2d3563a2255797bd1f40507fb" refkind="member"><highlight class="normal">uint16_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="_sd_fat_8h_1a00451fc2d3563a2255797bd1f40507fb" kindref="member">FAT_DEFAULT_TIME</ref><sp/>=<sp/>(1<sp/>&lt;&lt;<sp/>11);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="151" refid="class_sd_file" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_sd_file" kindref="compound">SdFile</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Print<sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="154" refid="class_sd_file_1a9e08675e64a4ef847700876d4291bbef" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_sd_file_1a9e08675e64a4ef847700876d4291bbef" kindref="member">SdFile</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>:<sp/>type_(<ref refid="_sd_fat_8h_1a4da8c96e256b06356321e81705494010" kindref="member">FAT_FILE_TYPE_CLOSED</ref>)<sp/>{}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//bool<sp/>writeError;</highlight></codeline>
<codeline lineno="165" refid="class_sd_file_1a44c3d6ef602e84b8160a4d215faef7d4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_sd_file_1a44c3d6ef602e84b8160a4d215faef7d4" kindref="member">clearUnbufferedRead</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>flags_<sp/>&amp;=<sp/>~F_FILE_UNBUFFERED_READ;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="class_sd_file_1a6b24350c89cc41ff644a343231a3983c" kindref="member">close</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="class_sd_file_1a3b07fc09dbcb28ae7c89c060af6a1810" kindref="member">contiguousRange</ref>(uint32_t*<sp/>bgnBlock,<sp/>uint32_t*<sp/>endBlock);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="class_sd_file_1a07fc5c82318f073848e706f95830e5b5" kindref="member">createContiguous</ref>(<ref refid="class_sd_file" kindref="compound">SdFile</ref>*<sp/>dirFile,</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>fileName,<sp/>uint32_t<sp/>size);</highlight></codeline>
<codeline lineno="173" refid="class_sd_file_1a970ef8d6cbb09ccb104fe1156d4a0a9e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="class_sd_file_1a970ef8d6cbb09ccb104fe1156d4a0a9e" kindref="member">curCluster</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>curCluster_;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="177" refid="class_sd_file_1a6105ae2f1c23e99fdea17bc64571ea8c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="class_sd_file_1a6105ae2f1c23e99fdea17bc64571ea8c" kindref="member">curPosition</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>curPosition_;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="208" refid="class_sd_file_1a2d78e6a8cedbf8ce545af68457b43bf1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_sd_file_1a2d78e6a8cedbf8ce545af68457b43bf1" kindref="member">dateTimeCallback</ref>(</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*dateTime)(uint16_t*<sp/>date,<sp/>uint16_t*<sp/>time))<sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dateTime_<sp/>=<sp/>dateTime;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="215" refid="class_sd_file_1adaec83fdbd8473a8e336e27b8622f673" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_sd_file_1adaec83fdbd8473a8e336e27b8622f673" kindref="member">dateTimeCallbackCancel</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>use<sp/>explicit<sp/>zero<sp/>since<sp/>NULL<sp/>is<sp/>not<sp/>defined<sp/>for<sp/>Sanguino</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dateTime_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="220" refid="class_sd_file_1af62898865cfe9a97ce75468efc0d2409" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="class_sd_file_1af62898865cfe9a97ce75468efc0d2409" kindref="member">dirBlock</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dirBlock_;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="class_sd_file_1abaf9b1dc12d53cdeb937065edf68927d" kindref="member">dirEntry</ref>(<ref refid="structdirectory_entry" kindref="compound">dir_t</ref>*<sp/>dir);</highlight></codeline>
<codeline lineno="225" refid="class_sd_file_1ad4381e541a53a7e5cf51a866c1c8f79e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="class_sd_file_1ad4381e541a53a7e5cf51a866c1c8f79e" kindref="member">dirIndex</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dirIndex_;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_sd_file_1ad7bbb106aa4c96c795c88b33def677bc" kindref="member">dirName</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structdirectory_entry" kindref="compound">dir_t</ref>&amp;<sp/>dir,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="_fat_structs_8h_1a30308c9b983377042fd2cc8900454fb1" kindref="member">name</ref>);</highlight></codeline>
<codeline lineno="230" refid="class_sd_file_1add58372b89c922511bc425d84b07dc5f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="class_sd_file_1add58372b89c922511bc425d84b07dc5f" kindref="member">fileSize</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fileSize_;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="234" refid="class_sd_file_1a854b7555bd774ff668558bf919636edd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="class_sd_file_1a854b7555bd774ff668558bf919636edd" kindref="member">firstCluster</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>firstCluster_;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="238" refid="class_sd_file_1a564e69a08c11f20e66eb18c38e24b748" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="class_sd_file_1a564e69a08c11f20e66eb18c38e24b748" kindref="member">isDir</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>type_<sp/>&gt;=<sp/><ref refid="_sd_fat_8h_1abc9b0906aeeedfe122b0ca629bac889b" kindref="member">FAT_FILE_TYPE_MIN_DIR</ref>;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="242" refid="class_sd_file_1ad9ca9b2b519a933c25e8f893ee0201b6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="class_sd_file_1ad9ca9b2b519a933c25e8f893ee0201b6" kindref="member">isFile</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>type_<sp/>==<sp/><ref refid="_sd_fat_8h_1a666774999b9afd627fdad75471101581" kindref="member">FAT_FILE_TYPE_NORMAL</ref>;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="246" refid="class_sd_file_1a54e1b9385c43c33dc83eaad6de0d33be" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="class_sd_file_1a54e1b9385c43c33dc83eaad6de0d33be" kindref="member">isOpen</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>type_<sp/>!=<sp/><ref refid="_sd_fat_8h_1a4da8c96e256b06356321e81705494010" kindref="member">FAT_FILE_TYPE_CLOSED</ref>;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="250" refid="class_sd_file_1a22fb79f645f5a92baf699d547395667b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="class_sd_file_1a22fb79f645f5a92baf699d547395667b" kindref="member">isSubDir</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>type_<sp/>==<sp/><ref refid="_sd_fat_8h_1ac301b0465fdd7953c6e110b9896cc9fd" kindref="member">FAT_FILE_TYPE_SUBDIR</ref>;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="254" refid="class_sd_file_1a29fd6e80e6cbd3c67724988f9fe02290" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="class_sd_file_1a29fd6e80e6cbd3c67724988f9fe02290" kindref="member">isRoot</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>type_<sp/>==<sp/><ref refid="_sd_fat_8h_1a4c02ced3c57420e2a1997f51bd87d150" kindref="member">FAT_FILE_TYPE_ROOT16</ref><sp/>||<sp/>type_<sp/>==<sp/><ref refid="_sd_fat_8h_1a9a1a07cb1d09cfdb3cc53183c6e5dc57" kindref="member">FAT_FILE_TYPE_ROOT32</ref>;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_sd_file_1afd9965ed8dee8bdd4d86dd14032edbc0" kindref="member">ls</ref>(uint8_t<sp/>flags<sp/>=<sp/>0,<sp/>uint8_t<sp/>indent<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="class_sd_file_1a62984bedf614a8de96b48bf9c5e7159f" kindref="member">makeDir</ref>(<ref refid="class_sd_file" kindref="compound">SdFile</ref>*<sp/>dir,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="class_sd_file_1ad7bbb106aa4c96c795c88b33def677bc" kindref="member">dirName</ref>);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="class_sd_file_1a9e211ac14784f48aebb213194336f8cc" kindref="member">open</ref>(<ref refid="class_sd_file" kindref="compound">SdFile</ref>*<sp/>dirFile,<sp/>uint16_t<sp/>index,<sp/>uint8_t<sp/>oflag);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="class_sd_file_1a9e211ac14784f48aebb213194336f8cc" kindref="member">open</ref>(<ref refid="class_sd_file" kindref="compound">SdFile</ref>*<sp/>dirFile,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>fileName,<sp/>uint8_t<sp/>oflag);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="class_sd_file_1ac3612bc27eaf52a23d8cb85c8d96ad38" kindref="member">openRoot</ref>(<ref refid="class_sd_volume" kindref="compound">SdVolume</ref>*<sp/>vol);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_sd_file_1a7267e3def5cba51149ff98baf5d3f2c8" kindref="member">printDirName</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structdirectory_entry" kindref="compound">dir_t</ref>&amp;<sp/>dir,<sp/>uint8_t<sp/>width);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_sd_file_1a77022a204f3e5148e78e1b7ae7b6865a" kindref="member">printFatDate</ref>(uint16_t<sp/>fatDate);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_sd_file_1ab981ea789ec76d1a44e4b3c8a84ccd35" kindref="member">printFatTime</ref>(uint16_t<sp/>fatTime);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_sd_file_1a0af47048953a2d1526db9336c39a8919" kindref="member">printTwoDigits</ref>(uint8_t<sp/>v);</highlight></codeline>
<codeline lineno="273" refid="class_sd_file_1a6c389f0180b4a86fb6d7464f50d3b0dd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>int16_t<sp/><ref refid="class_sd_file_1a6c389f0180b4a86fb6d7464f50d3b0dd" kindref="member">read</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>b;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_sd_file_1a6c389f0180b4a86fb6d7464f50d3b0dd" kindref="member">read</ref>(&amp;b,<sp/>1)<sp/>==<sp/>1<sp/>?<sp/>b<sp/>:<sp/>-1;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>int16_t<sp/><ref refid="class_sd_file_1a6c389f0180b4a86fb6d7464f50d3b0dd" kindref="member">read</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>buf,<sp/>uint16_t<sp/>nbyte);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>int8_t<sp/><ref refid="class_sd_file_1ab240540b099cedcfe8b93b5e853d0628" kindref="member">readDir</ref>(<ref refid="structdirectory_entry" kindref="compound">dir_t</ref>*<sp/>dir);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint8_t<sp/><ref refid="class_sd_file_1a66c5fb5f651a1ac319bab68fda1d3cc2" kindref="member">remove</ref>(<ref refid="class_sd_file" kindref="compound">SdFile</ref>*<sp/>dirFile,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>fileName);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="class_sd_file_1a66c5fb5f651a1ac319bab68fda1d3cc2" kindref="member">remove</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="282" refid="class_sd_file_1afa8aaa7bdeb97b4e691ea01adf99f654" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_sd_file_1afa8aaa7bdeb97b4e691ea01adf99f654" kindref="member">rewind</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>curPosition_<sp/>=<sp/>curCluster_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="class_sd_file_1a0d9e0c280b3469bb15e7258f6339746b" kindref="member">rmDir</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="class_sd_file_1a44c26fddfe2b42e7db3bc80290c77503" kindref="member">rmRfStar</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="288" refid="class_sd_file_1aa95121ff038538e671f125160b280e9a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="class_sd_file_1aa95121ff038538e671f125160b280e9a" kindref="member">seekCur</ref>(uint32_t<sp/>pos)<sp/>{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_sd_file_1a5b8ea0ba6a9fec1ee8f1b11e90edb0c6" kindref="member">seekSet</ref>(curPosition_<sp/>+<sp/>pos);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="295" refid="class_sd_file_1afa70bc7ba5eb789aee1b62fc5fafaa5b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="class_sd_file_1afa70bc7ba5eb789aee1b62fc5fafaa5b" kindref="member">seekEnd</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_sd_file_1a5b8ea0ba6a9fec1ee8f1b11e90edb0c6" kindref="member">seekSet</ref>(fileSize_);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="class_sd_file_1a5b8ea0ba6a9fec1ee8f1b11e90edb0c6" kindref="member">seekSet</ref>(uint32_t<sp/>pos);</highlight></codeline>
<codeline lineno="305" refid="class_sd_file_1a08c9e76a4a7bb43fccf1dd5c72c66a16" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_sd_file_1a08c9e76a4a7bb43fccf1dd5c72c66a16" kindref="member">setUnbufferedRead</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_sd_file_1ad9ca9b2b519a933c25e8f893ee0201b6" kindref="member">isFile</ref>())<sp/>{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flags_<sp/>|=<sp/>F_FILE_UNBUFFERED_READ;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="class_sd_file_1a249632ba9580c556c0b041d6b2aaf224" kindref="member">timestamp</ref>(uint8_t<sp/>flag,<sp/>uint16_t<sp/>year,<sp/>uint8_t<sp/>month,<sp/>uint8_t<sp/>day,</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>hour,<sp/>uint8_t<sp/>minute,<sp/>uint8_t<sp/>second);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="class_sd_file_1a42f006b16e686ee164e6d7df41fc94cd" kindref="member">sync</ref>(uint8_t<sp/>blocking<sp/>=<sp/>1);</highlight></codeline>
<codeline lineno="318" refid="class_sd_file_1a2da736b480e64ec2142687fb49871ada" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="class_sd_file_1a2da736b480e64ec2142687fb49871ada" kindref="member">type</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>type_;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="class_sd_file_1ade1e2b72f89b24f500502518fd678abd" kindref="member">truncate</ref>(uint32_t<sp/>size);</highlight></codeline>
<codeline lineno="323" refid="class_sd_file_1a151bbc9fa7787b67f3d4a3574f9bc9e3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="class_sd_file_1a151bbc9fa7787b67f3d4a3574f9bc9e3" kindref="member">unbufferedRead</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>flags_<sp/>&amp;<sp/>F_FILE_UNBUFFERED_READ;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="327" refid="class_sd_file_1ae1b1b91b5fd3603a36af20a3e2ea09f1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_sd_volume" kindref="compound">SdVolume</ref>*<sp/><ref refid="class_sd_file_1ae1b1b91b5fd3603a36af20a3e2ea09f1" kindref="member">volume</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vol_;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_sd_file_1a67267a4b63d03a16e099195935613006" kindref="member">write</ref>(uint8_t<sp/>b);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_sd_file_1a67267a4b63d03a16e099195935613006" kindref="member">write</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>buf,<sp/>uint16_t<sp/>nbyte);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_sd_file_1a67267a4b63d03a16e099195935613006" kindref="member">write</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>str);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#ifdef<sp/>__AVR__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>write_P(PGM_P<sp/>str);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>writeln_P(PGM_P<sp/>str);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_sd_file_1a477e29153291a129529274eb9d74cdf6" kindref="member">availableForWrite</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#if<sp/>ALLOW_DEPRECATED_FUNCTIONS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Deprecated<sp/>functions<sp/><sp/>-<sp/>suppress<sp/>cpplint<sp/>warnings<sp/>with<sp/>NOLINT<sp/>comment</highlight></codeline>
<codeline lineno="344" refid="class_sd_file_1a872927812be6c48a894bdfc72f1701a1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="class_sd_file_1a872927812be6c48a894bdfc72f1701a1" kindref="member">contiguousRange</ref>(uint32_t&amp;<sp/>bgnBlock,<sp/>uint32_t&amp;<sp/>endBlock)<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>NOLINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_sd_file_1a3b07fc09dbcb28ae7c89c060af6a1810" kindref="member">contiguousRange</ref>(&amp;bgnBlock,<sp/>&amp;endBlock);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="351" refid="class_sd_file_1a231dd495e5c5997aea2a842481a68f40" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="class_sd_file_1a231dd495e5c5997aea2a842481a68f40" kindref="member">createContiguous</ref>(<ref refid="class_sd_file" kindref="compound">SdFile</ref>&amp;<sp/>dirFile,<sp/><sp/></highlight><highlight class="comment">//<sp/>NOLINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>fileName,<sp/>uint32_t<sp/>size)<sp/>{</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_sd_file_1a07fc5c82318f073848e706f95830e5b5" kindref="member">createContiguous</ref>(&amp;dirFile,<sp/>fileName,<sp/>size);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="361" refid="class_sd_file_1a88a9b32bfec07c8c5cfdf8a36b7faf26" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_sd_file_1a88a9b32bfec07c8c5cfdf8a36b7faf26" kindref="member">dateTimeCallback</ref>(</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*dateTime)(uint16_t&amp;<sp/>date,<sp/>uint16_t&amp;<sp/>time))<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>NOLINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>oldDateTime_<sp/>=<sp/>dateTime;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dateTime_<sp/>=<sp/>dateTime<sp/>?<sp/>oldToNew<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="367" refid="class_sd_file_1ae7b4b1057a1ee17f673c116771636156" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="class_sd_file_1ae7b4b1057a1ee17f673c116771636156" kindref="member">dirEntry</ref>(<ref refid="structdirectory_entry" kindref="compound">dir_t</ref>&amp;<sp/>dir)<sp/>{</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_sd_file_1abaf9b1dc12d53cdeb937065edf68927d" kindref="member">dirEntry</ref>(&amp;dir);<sp/></highlight><highlight class="comment">//<sp/>NOLINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="373" refid="class_sd_file_1af87e166d0059d392d7038f68fca68529" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="class_sd_file_1af87e166d0059d392d7038f68fca68529" kindref="member">makeDir</ref>(<ref refid="class_sd_file" kindref="compound">SdFile</ref>&amp;<sp/>dir,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="class_sd_file_1ad7bbb106aa4c96c795c88b33def677bc" kindref="member">dirName</ref>)<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>NOLINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_sd_file_1a62984bedf614a8de96b48bf9c5e7159f" kindref="member">makeDir</ref>(&amp;dir,<sp/><ref refid="class_sd_file_1ad7bbb106aa4c96c795c88b33def677bc" kindref="member">dirName</ref>);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="379" refid="class_sd_file_1afe1d8ce70ef58ee5967005047064167c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="class_sd_file_1afe1d8ce70ef58ee5967005047064167c" kindref="member">open</ref>(<ref refid="class_sd_file" kindref="compound">SdFile</ref>&amp;<sp/>dirFile,<sp/></highlight><highlight class="comment">//<sp/>NOLINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>fileName,<sp/>uint8_t<sp/>oflag)<sp/>{</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_sd_file_1a9e211ac14784f48aebb213194336f8cc" kindref="member">open</ref>(&amp;dirFile,<sp/>fileName,<sp/>oflag);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="384" refid="class_sd_file_1a71e1c08dc4fb58b95554925a25435721" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="class_sd_file_1a71e1c08dc4fb58b95554925a25435721" kindref="member">open</ref>(<ref refid="class_sd_file" kindref="compound">SdFile</ref>&amp;<sp/>dirFile,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>fileName)<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>NOLINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_sd_file_1a9e211ac14784f48aebb213194336f8cc" kindref="member">open</ref>(dirFile,<sp/>fileName,<sp/><ref refid="_sd_fat_8h_1ad79c5a45cb5e4855b771629fc15d78f6" kindref="member">O_RDWR</ref>);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="390" refid="class_sd_file_1a8bc20433f081a6e9f1546601b7a1d712" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="class_sd_file_1a8bc20433f081a6e9f1546601b7a1d712" kindref="member">open</ref>(<ref refid="class_sd_file" kindref="compound">SdFile</ref>&amp;<sp/>dirFile,<sp/>uint16_t<sp/>index,<sp/>uint8_t<sp/>oflag)<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>NOLINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_sd_file_1a9e211ac14784f48aebb213194336f8cc" kindref="member">open</ref>(&amp;dirFile,<sp/>index,<sp/>oflag);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="394" refid="class_sd_file_1abc60bbbb747c58319cfcfc11deb34d53" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="class_sd_file_1abc60bbbb747c58319cfcfc11deb34d53" kindref="member">openRoot</ref>(<ref refid="class_sd_volume" kindref="compound">SdVolume</ref>&amp;<sp/>vol)<sp/>{</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_sd_file_1ac3612bc27eaf52a23d8cb85c8d96ad38" kindref="member">openRoot</ref>(&amp;vol);<sp/></highlight><highlight class="comment">//<sp/>NOLINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="399" refid="class_sd_file_1ad107b73c6edfa489b76366edfef2eeae" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>int8_t<sp/><ref refid="class_sd_file_1ad107b73c6edfa489b76366edfef2eeae" kindref="member">readDir</ref>(<ref refid="structdirectory_entry" kindref="compound">dir_t</ref>&amp;<sp/>dir)<sp/>{</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_sd_file_1ab240540b099cedcfe8b93b5e853d0628" kindref="member">readDir</ref>(&amp;dir);<sp/></highlight><highlight class="comment">//<sp/>NOLINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="405" refid="class_sd_file_1aaea53aa58f7577dfafd0da3cb084f6d1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint8_t<sp/><ref refid="class_sd_file_1aaea53aa58f7577dfafd0da3cb084f6d1" kindref="member">remove</ref>(<ref refid="class_sd_file" kindref="compound">SdFile</ref>&amp;<sp/>dirFile,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>fileName)<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>NOLINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_sd_file_1a66c5fb5f651a1ac319bab68fda1d3cc2" kindref="member">remove</ref>(&amp;dirFile,<sp/>fileName);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>rest<sp/>are<sp/>private</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>void<sp/>(*oldDateTime_)(uint16_t&amp;<sp/>date,<sp/>uint16_t&amp;<sp/>time);<sp/><sp/></highlight><highlight class="comment">//<sp/>NOLINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>oldToNew(uint16_t*<sp/>date,<sp/>uint16_t*<sp/>time)<sp/>{</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>d;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>t;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>oldDateTime_(d,<sp/>t);</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*date<sp/>=<sp/>d;</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*time<sp/>=<sp/>t;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif<sp/><sp/></highlight><highlight class="comment">//<sp/>ALLOW_DEPRECATED_FUNCTIONS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bits<sp/>defined<sp/>in<sp/>flags_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>should<sp/>be<sp/>0XF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint8_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>F_OFLAG<sp/>=<sp/>(<ref refid="_sd_fat_8h_1a4efda39151f5ef2dc7fbd138be51336a" kindref="member">O_ACCMODE</ref><sp/>|<sp/><ref refid="_sd_fat_8h_1a4242b37e810af3a6485adda0e08a9a2b" kindref="member">O_APPEND</ref><sp/>|<sp/><ref refid="_sd_fat_8h_1a3066c471d52b056dec13fa567f7bbd9d" kindref="member">O_SYNC</ref>);</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>available<sp/>bits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint8_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>F_FILE_NON_BLOCKING_WRITE<sp/>=<sp/>0X10;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>new<sp/>cluster<sp/>was<sp/>added<sp/>to<sp/>the<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint8_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>F_FILE_CLUSTER_ADDED<sp/>=<sp/>0X20;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>use<sp/>unbuffered<sp/>SD<sp/>read</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint8_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>F_FILE_UNBUFFERED_READ<sp/>=<sp/>0X40;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sync<sp/>of<sp/>directory<sp/>entry<sp/>required</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint8_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>F_FILE_DIR_DIRTY<sp/>=<sp/>0X80;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>sure<sp/>F_OFLAG<sp/>is<sp/>ok</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#if<sp/>((F_FILE_NON_BLOCKING_WRITE<sp/>|<sp/>F_FILE_CLUSTER_ADDED<sp/>|<sp/>F_FILE_UNBUFFERED_READ<sp/>|<sp/>F_FILE_DIR_DIRTY)<sp/>&amp;<sp/>F_OFLAG)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight><highlight class="preprocessor">#error<sp/>flags_<sp/>bits<sp/>conflict</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif<sp/><sp/></highlight><highlight class="comment">//<sp/>flags_<sp/>bits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>private<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/>flags_;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>See<sp/>above<sp/>for<sp/>definition<sp/>of<sp/>flags_<sp/>bits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/>type_;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>type<sp/>of<sp/>file<sp/>see<sp/>above<sp/>for<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/>curCluster_;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cluster<sp/>for<sp/>current<sp/>file<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/>curPosition_;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>current<sp/>file<sp/>position<sp/>in<sp/>bytes<sp/>from<sp/>beginning</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/>dirBlock_;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>SD<sp/>block<sp/>that<sp/>contains<sp/>directory<sp/>entry<sp/>for<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/>dirIndex_;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>index<sp/>of<sp/>entry<sp/>in<sp/>dirBlock<sp/>0<sp/>&lt;=<sp/>dirIndex_<sp/>&lt;=<sp/>0XF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/>fileSize_;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>file<sp/>size<sp/>in<sp/>bytes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/>firstCluster_;<sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>cluster<sp/>of<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_sd_volume" kindref="compound">SdVolume</ref>*<sp/>vol_;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>volume<sp/>where<sp/>file<sp/>is<sp/>located</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>private<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>addCluster(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>addDirCluster(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdirectory_entry" kindref="compound">dir_t</ref>*<sp/>cacheDirEntry(uint8_t<sp/>action);</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>void<sp/>(*dateTime_)(uint16_t*<sp/>date,<sp/>uint16_t*<sp/>time);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint8_t<sp/>make83Name(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>str,<sp/>uint8_t*<sp/><ref refid="_fat_structs_8h_1a30308c9b983377042fd2cc8900454fb1" kindref="member">name</ref>);</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>openCachedEntry(uint8_t<sp/>cacheIndex,<sp/>uint8_t<sp/>oflags);</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdirectory_entry" kindref="compound">dir_t</ref>*<sp/>readDirCache(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="457"><highlight class="normal">};</highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight><highlight class="comment">//==============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SdVolume<sp/>class</highlight></codeline>
<codeline lineno="463" refid="unioncache__t" refkind="compound"><highlight class="keyword">union<sp/></highlight><highlight class="normal"><ref refid="unioncache__t" kindref="compound">cache_t</ref><sp/>{</highlight></codeline>
<codeline lineno="465" refid="unioncache__t_1ae675b7a3a87d809070de111d1d1f1d81" refkind="member"><highlight class="normal"><sp/><sp/>uint8_t<sp/><sp/><ref refid="unioncache__t_1ae675b7a3a87d809070de111d1d1f1d81" kindref="member">data</ref>[512];</highlight></codeline>
<codeline lineno="467" refid="unioncache__t_1a8f3a4e9392a7d8ace954fc44c57df887" refkind="member"><highlight class="normal"><sp/><sp/>uint16_t<sp/><ref refid="unioncache__t_1a8f3a4e9392a7d8ace954fc44c57df887" kindref="member">fat16</ref>[256];</highlight></codeline>
<codeline lineno="469" refid="unioncache__t_1a57e16421bf460d1ba6cb9ce9a23a4a83" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><ref refid="unioncache__t_1a57e16421bf460d1ba6cb9ce9a23a4a83" kindref="member">fat32</ref>[128];</highlight></codeline>
<codeline lineno="471" refid="unioncache__t_1a7396fdbdb7c52bd1d72c5329ff32acd1" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structdirectory_entry" kindref="compound">dir_t</ref><sp/><sp/><sp/><sp/><ref refid="unioncache__t_1a7396fdbdb7c52bd1d72c5329ff32acd1" kindref="member">dir</ref>[16];</highlight></codeline>
<codeline lineno="473" refid="unioncache__t_1a6ac10bfb1ebb1139c448456679663bb6" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structmaster_boot_record" kindref="compound">mbr_t</ref><sp/><sp/><sp/><sp/><ref refid="unioncache__t_1a6ac10bfb1ebb1139c448456679663bb6" kindref="member">mbr</ref>;</highlight></codeline>
<codeline lineno="475" refid="unioncache__t_1a0691515e5d969f98c4285bfe0c16a309" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structfat32_boot_sector" kindref="compound">fbs_t</ref><sp/><sp/><sp/><sp/><ref refid="unioncache__t_1a0691515e5d969f98c4285bfe0c16a309" kindref="member">fbs</ref>;</highlight></codeline>
<codeline lineno="476"><highlight class="normal">};</highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="482" refid="class_sd_volume" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_sd_volume" kindref="compound">SdVolume</ref><sp/>{</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="485" refid="class_sd_volume_1a1843d58062920d6d0e122892ffa42923" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_sd_volume_1a1843d58062920d6d0e122892ffa42923" kindref="member">SdVolume</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>:<sp/>allocSearchStart_(2),<sp/>fatType_(0)<sp/>{}</highlight></codeline>
<codeline lineno="489" refid="class_sd_volume_1a67b1f1cb378367f5a14e062fa284b6ed" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint8_t*<sp/><ref refid="class_sd_volume_1a67b1f1cb378367f5a14e062fa284b6ed" kindref="member">cacheClear</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cacheFlush();</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cacheBlockNumber_<sp/>=<sp/>0XFFFFFFFF;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cacheBuffer_.<ref refid="unioncache__t_1ae675b7a3a87d809070de111d1d1f1d81" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="505" refid="class_sd_volume_1adfcf83cba537b831f3a993a058e7ca85" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="class_sd_volume_1adfcf83cba537b831f3a993a058e7ca85" kindref="member">init</ref>(<ref refid="class_sd2_card" kindref="compound">Sd2Card</ref>*<sp/>dev)<sp/>{</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_sd_volume_1adfcf83cba537b831f3a993a058e7ca85" kindref="member">init</ref>(dev,<sp/>1)<sp/>?<sp/>true<sp/>:<sp/><ref refid="class_sd_volume_1adfcf83cba537b831f3a993a058e7ca85" kindref="member">init</ref>(dev,<sp/>0);</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="class_sd_volume_1adfcf83cba537b831f3a993a058e7ca85" kindref="member">init</ref>(<ref refid="class_sd2_card" kindref="compound">Sd2Card</ref>*<sp/>dev,<sp/>uint8_t<sp/><ref refid="_fat_structs_8h_1aa65f87792f271fc6cfa70980af6ac3dd" kindref="member">part</ref>);</highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>inline<sp/>functions<sp/>that<sp/>return<sp/>volume<sp/>info</highlight></codeline>
<codeline lineno="512" refid="class_sd_volume_1ad6cb99a5d4e9e53651297b999eb2256f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="class_sd_volume_1ad6cb99a5d4e9e53651297b999eb2256f" kindref="member">blocksPerCluster</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>blocksPerCluster_;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="516" refid="class_sd_volume_1a783bfc6ced6f6af86c1e94d394ebe76c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="class_sd_volume_1a783bfc6ced6f6af86c1e94d394ebe76c" kindref="member">blocksPerFat</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>blocksPerFat_;</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="520" refid="class_sd_volume_1a9d70b14b7bd7cb07d4c90e854283aed9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="class_sd_volume_1a9d70b14b7bd7cb07d4c90e854283aed9" kindref="member">clusterCount</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>clusterCount_;</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="524" refid="class_sd_volume_1a7cdcb6e4c187c96b1b536f9bc587c659" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="class_sd_volume_1a7cdcb6e4c187c96b1b536f9bc587c659" kindref="member">clusterSizeShift</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>clusterSizeShift_;</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="528" refid="class_sd_volume_1a8e6813781321490fad895ce7b16a8638" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="class_sd_volume_1a8e6813781321490fad895ce7b16a8638" kindref="member">dataStartBlock</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dataStartBlock_;</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="532" refid="class_sd_volume_1ad0985d6a2a136aedacd7678977b0e015" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="class_sd_volume_1ad0985d6a2a136aedacd7678977b0e015" kindref="member">fatCount</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fatCount_;</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="536" refid="class_sd_volume_1a05f8847162b9d9f77b1b8db95cd63cec" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="class_sd_volume_1a05f8847162b9d9f77b1b8db95cd63cec" kindref="member">fatStartBlock</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fatStartBlock_;</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="540" refid="class_sd_volume_1a85adb29d404b08b1b58e9f105b60ea8d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="class_sd_volume_1a85adb29d404b08b1b58e9f105b60ea8d" kindref="member">fatType</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fatType_;</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="544" refid="class_sd_volume_1addfdd68b9d9f728ac29d38f78c3fbead" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="class_sd_volume_1addfdd68b9d9f728ac29d38f78c3fbead" kindref="member">rootDirEntryCount</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rootDirEntryCount_;</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="549" refid="class_sd_volume_1aeb10811341acc97f7ccda2394c777072" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="class_sd_volume_1aeb10811341acc97f7ccda2394c777072" kindref="member">rootDirStart</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rootDirStart_;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="553" refid="class_sd_volume_1ad7433c0f197f28e77db117d1400ed539" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_sd2_card" kindref="compound">Sd2Card</ref>*<sp/><ref refid="class_sd_volume_1ad7433c0f197f28e77db117d1400ed539" kindref="member">sdCard</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sdCard_;</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#if<sp/>ALLOW_DEPRECATED_FUNCTIONS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Deprecated<sp/>functions<sp/><sp/>-<sp/>suppress<sp/>cpplint<sp/>warnings<sp/>with<sp/>NOLINT<sp/>comment</highlight></codeline>
<codeline lineno="560" refid="class_sd_volume_1a037defc7dc23b38ee7ddf7b5273aea5a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="class_sd_volume_1a037defc7dc23b38ee7ddf7b5273aea5a" kindref="member">init</ref>(<ref refid="class_sd2_card" kindref="compound">Sd2Card</ref>&amp;<sp/>dev)<sp/>{</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_sd_volume_1adfcf83cba537b831f3a993a058e7ca85" kindref="member">init</ref>(&amp;dev);<sp/></highlight><highlight class="comment">//<sp/>NOLINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight></codeline>
<codeline lineno="565" refid="class_sd_volume_1a51d8b4c5dd7372eb7dec486472139eb5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="class_sd_volume_1a51d8b4c5dd7372eb7dec486472139eb5" kindref="member">init</ref>(<ref refid="class_sd2_card" kindref="compound">Sd2Card</ref>&amp;<sp/>dev,<sp/>uint8_t<sp/><ref refid="_fat_structs_8h_1aa65f87792f271fc6cfa70980af6ac3dd" kindref="member">part</ref>)<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>NOLINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_sd_volume_1adfcf83cba537b831f3a993a058e7ca85" kindref="member">init</ref>(&amp;dev,<sp/><ref refid="_fat_structs_8h_1aa65f87792f271fc6cfa70980af6ac3dd" kindref="member">part</ref>);</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif<sp/><sp/></highlight><highlight class="comment">//<sp/>ALLOW_DEPRECATED_FUNCTIONS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Allow<sp/>SdFile<sp/>access<sp/>to<sp/>SdVolume<sp/>private<sp/>data.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_sd_file" kindref="compound">SdFile</ref>;</highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>value<sp/>for<sp/>action<sp/>argument<sp/>in<sp/>cacheRawBlock<sp/>to<sp/>indicate<sp/>read<sp/>from<sp/>cache</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint8_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CACHE_FOR_READ<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>value<sp/>for<sp/>action<sp/>argument<sp/>in<sp/>cacheRawBlock<sp/>to<sp/>indicate<sp/>cache<sp/>dirty</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint8_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CACHE_FOR_WRITE<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="unioncache__t" kindref="compound">cache_t</ref><sp/>cacheBuffer_;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>512<sp/>byte<sp/>cache<sp/>for<sp/>device<sp/>blocks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint32_t<sp/>cacheBlockNumber_;<sp/><sp/></highlight><highlight class="comment">//<sp/>Logical<sp/>number<sp/>of<sp/>block<sp/>in<sp/>the<sp/>cache</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_sd2_card" kindref="compound">Sd2Card</ref>*<sp/>sdCard_;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Sd2Card<sp/>object<sp/>for<sp/>cache</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint8_t<sp/>cacheDirty_;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cacheFlush()<sp/>will<sp/>write<sp/>block<sp/>if<sp/>true</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint32_t<sp/>cacheMirrorBlock_;<sp/><sp/></highlight><highlight class="comment">//<sp/>block<sp/>number<sp/>for<sp/>mirror<sp/>FAT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>allocSearchStart_;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>start<sp/>cluster<sp/>for<sp/>alloc<sp/>search</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>blocksPerCluster_;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cluster<sp/>size<sp/>in<sp/>blocks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>blocksPerFat_;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FAT<sp/>size<sp/>in<sp/>blocks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>clusterCount_;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clusters<sp/>in<sp/>one<sp/>FAT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>clusterSizeShift_;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>shift<sp/>to<sp/>convert<sp/>cluster<sp/>count<sp/>to<sp/>block<sp/>count</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>dataStartBlock_;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>data<sp/>block<sp/>number</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>fatCount_;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>FATs<sp/>on<sp/>volume</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>fatStartBlock_;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>start<sp/>block<sp/>for<sp/>first<sp/>FAT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>fatType_;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>volume<sp/>type<sp/>(12,<sp/>16,<sp/>OR<sp/>32)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>rootDirEntryCount_;<sp/><sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>entries<sp/>in<sp/>FAT16<sp/>root<sp/>dir</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>rootDirStart_;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>root<sp/>start<sp/>block<sp/>for<sp/>FAT16,<sp/>cluster<sp/>for<sp/>FAT32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>allocContiguous(uint32_t<sp/>count,<sp/>uint32_t*<sp/>curCluster);</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>blockOfCluster(uint32_t<sp/>position)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(position<sp/>&gt;&gt;<sp/>9)<sp/>&amp;<sp/>(blocksPerCluster_<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>clusterStartBlock(uint32_t<sp/>cluster)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dataStartBlock_<sp/>+<sp/>((cluster<sp/>-<sp/>2)<sp/>&lt;&lt;<sp/>clusterSizeShift_);</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>blockNumber(uint32_t<sp/>cluster,<sp/>uint32_t<sp/>position)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>clusterStartBlock(cluster)<sp/>+<sp/>blockOfCluster(position);</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint8_t<sp/>cacheFlush(uint8_t<sp/>blocking<sp/>=<sp/>1);</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint8_t<sp/>cacheMirrorBlockFlush(uint8_t<sp/>blocking);</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint8_t<sp/>cacheRawBlock(uint32_t<sp/>blockNumber,<sp/>uint8_t<sp/>action);</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cacheSetDirty(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cacheDirty_<sp/>|=<sp/>CACHE_FOR_WRITE;</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint8_t<sp/>cacheZeroBlock(uint32_t<sp/>blockNumber);</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>chainSize(uint32_t<sp/>beginCluster,<sp/>uint32_t*<sp/>size)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>fatGet(uint32_t<sp/>cluster,<sp/>uint32_t*<sp/>value)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>fatPut(uint32_t<sp/>cluster,<sp/>uint32_t<sp/>value);</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>fatPutEOC(uint32_t<sp/>cluster)<sp/>{</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fatPut(cluster,<sp/>0x0FFFFFFF);</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>freeChain(uint32_t<sp/>cluster);</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>isEOC(uint32_t<sp/>cluster)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/>cluster<sp/>&gt;=<sp/>(fatType_<sp/>==<sp/>16<sp/>?<sp/><ref refid="_fat_structs_8h_1a79b2cefbcfdbf3507fe0496804541b0d" kindref="member">FAT16EOC_MIN</ref><sp/>:<sp/><ref refid="_fat_structs_8h_1af5bcc97de8cc4956435d06349d6e714b" kindref="member">FAT32EOC_MIN</ref>);</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>readBlock(uint32_t<sp/>block,<sp/>uint8_t*<sp/>dst)<sp/>{</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sdCard_-&gt;<ref refid="class_sd2_card_1ae26d840449a42d45af464fb81b92e2ab" kindref="member">readBlock</ref>(block,<sp/>dst);</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>readData(uint32_t<sp/>block,<sp/>uint16_t<sp/>offset,</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>count,<sp/>uint8_t*<sp/>dst)<sp/>{</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sdCard_-&gt;<ref refid="class_sd2_card_1ae2d1396ad30081b4201cd372358ef699" kindref="member">readData</ref>(block,<sp/>offset,<sp/>count,<sp/>dst);</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>writeBlock(uint32_t<sp/>block,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t*<sp/>dst,<sp/>uint8_t<sp/>blocking<sp/>=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sdCard_-&gt;<ref refid="class_sd2_card_1ac98353a26aa6485364e33924f3834ac1" kindref="member">writeBlock</ref>(block,<sp/>dst,<sp/>blocking);</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>isBusy(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sdCard_-&gt;<ref refid="class_sd2_card_1a9b0da1097f3a705df420749c60ca1ef9" kindref="member">isBusy</ref>();</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>isCacheMirrorBlockDirty(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(cacheMirrorBlock_<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="640"><highlight class="normal">};</highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">//<sp/>SdFat_h</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="libraries/SD-1.2.4/src/utility/SdFat.h"/>
  </compounddef>
</doxygen>
