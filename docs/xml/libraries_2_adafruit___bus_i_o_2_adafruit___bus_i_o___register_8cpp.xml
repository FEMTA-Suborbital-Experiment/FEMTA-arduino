<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="libraries_2_adafruit___bus_i_o_2_adafruit___bus_i_o___register_8cpp" kind="file" language="C++">
    <compoundname>Adafruit_BusIO_Register.cpp</compoundname>
    <includes refid="libraries_2_adafruit___bus_i_o_2_adafruit___bus_i_o___register_8h" local="no">Adafruit_BusIO_Register.h</includes>
    <incdepgraph>
      <node id="3">
        <label>Arduino.h</label>
      </node>
      <node id="1">
        <label>libraries/Adafruit_BusIO/Adafruit_BusIO_Register.cpp</label>
        <link refid="libraries_2_adafruit___bus_i_o_2_adafruit___bus_i_o___register_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>Adafruit_BusIO_Register.h</label>
        <link refid="libraries_2_adafruit___bus_i_o_2_adafruit___bus_i_o___register_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>Adafruit_I2CDevice.h</label>
        <link refid="libraries_2_adafruit___bus_i_o_2_adafruit___i2_c_device_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>Adafruit_SPIDevice.h</label>
        <link refid="libraries_2_adafruit___bus_i_o_2_adafruit___s_p_i_device_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>SPI.h</label>
      </node>
      <node id="5">
        <label>Wire.h</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;Adafruit_BusIO_Register.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(SPI_INTERFACES_COUNT)<sp/>||<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(defined(SPI_INTERFACES_COUNT)<sp/>&amp;&amp;<sp/>(SPI_INTERFACES_COUNT<sp/>&gt;<sp/>0))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><ref refid="class_adafruit___bus_i_o___register_1a7de4a4cbb3e8cdfebac31344e8ab6c8c" kindref="member">Adafruit_BusIO_Register::Adafruit_BusIO_Register</ref>(<ref refid="class_adafruit___i2_c_device" kindref="compound">Adafruit_I2CDevice</ref><sp/>*i2cdevice,</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>reg_addr,</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>width,</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>byteorder,</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>address_width)<sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/>_i2cdevice<sp/>=<sp/>i2cdevice;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/>_spidevice<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/>_addrwidth<sp/>=<sp/>address_width;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>_address<sp/>=<sp/>reg_addr;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/>_byteorder<sp/>=<sp/>byteorder;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/>_width<sp/>=<sp/><ref refid="class_adafruit___bus_i_o___register_1abf1eaeb0ae836be082a73dae14e7e352" kindref="member">width</ref>;</highlight></codeline>
<codeline lineno="29"><highlight class="normal">}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><ref refid="class_adafruit___bus_i_o___register_1a7de4a4cbb3e8cdfebac31344e8ab6c8c" kindref="member">Adafruit_BusIO_Register::Adafruit_BusIO_Register</ref>(<ref refid="class_adafruit___s_p_i_device" kindref="compound">Adafruit_SPIDevice</ref><sp/>*spidevice,</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>reg_addr,</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Adafruit_BusIO_SPIRegType<sp/><ref refid="_fat_structs_8h_1a1d127017fb298b889f4ba24752d08b8e" kindref="member">type</ref>,</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>width,</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>byteorder,</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>address_width)<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>_spidevice<sp/>=<sp/>spidevice;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>_spiregtype<sp/>=<sp/><ref refid="_fat_structs_8h_1a1d127017fb298b889f4ba24752d08b8e" kindref="member">type</ref>;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>_i2cdevice<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>_addrwidth<sp/>=<sp/>address_width;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>_address<sp/>=<sp/>reg_addr;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>_byteorder<sp/>=<sp/>byteorder;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>_width<sp/>=<sp/><ref refid="class_adafruit___bus_i_o___register_1abf1eaeb0ae836be082a73dae14e7e352" kindref="member">width</ref>;</highlight></codeline>
<codeline lineno="58"><highlight class="normal">}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><ref refid="class_adafruit___bus_i_o___register_1a7de4a4cbb3e8cdfebac31344e8ab6c8c" kindref="member">Adafruit_BusIO_Register::Adafruit_BusIO_Register</ref>(</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_adafruit___i2_c_device" kindref="compound">Adafruit_I2CDevice</ref><sp/>*i2cdevice,<sp/><ref refid="class_adafruit___s_p_i_device" kindref="compound">Adafruit_SPIDevice</ref><sp/>*spidevice,</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>Adafruit_BusIO_SPIRegType<sp/><ref refid="_fat_structs_8h_1a1d127017fb298b889f4ba24752d08b8e" kindref="member">type</ref>,<sp/>uint16_t<sp/>reg_addr,<sp/>uint8_t<sp/>width,</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>byteorder,<sp/>uint8_t<sp/>address_width)<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>_spidevice<sp/>=<sp/>spidevice;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>_i2cdevice<sp/>=<sp/>i2cdevice;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>_spiregtype<sp/>=<sp/><ref refid="_fat_structs_8h_1a1d127017fb298b889f4ba24752d08b8e" kindref="member">type</ref>;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>_addrwidth<sp/>=<sp/>address_width;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>_address<sp/>=<sp/>reg_addr;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>_byteorder<sp/>=<sp/>byteorder;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>_width<sp/>=<sp/><ref refid="class_adafruit___bus_i_o___register_1abf1eaeb0ae836be082a73dae14e7e352" kindref="member">width</ref>;</highlight></codeline>
<codeline lineno="89"><highlight class="normal">}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_adafruit___bus_i_o___register_1aa418dced5301a1d8c1776a1941c8bc64" kindref="member">Adafruit_BusIO_Register::write</ref>(uint8_t<sp/>*buffer,<sp/>uint8_t<sp/>len)<sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>uint8_t<sp/>addrbuffer[2]<sp/>=<sp/>{(uint8_t)(_address<sp/>&amp;<sp/>0xFF),</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(uint8_t)(_address<sp/>&gt;&gt;<sp/>8)};</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_i2cdevice)<sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_i2cdevice-&gt;<ref refid="class_adafruit___i2_c_device_1aa64a3c83aa776a3f383bc1df24ca1998" kindref="member">write</ref>(buffer,<sp/>len,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>addrbuffer,<sp/>_addrwidth);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_spidevice)<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_spiregtype<sp/>==<sp/>ADDRESSED_OPCODE_BIT0_LOW_TO_WRITE)<sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>very<sp/>special<sp/>case!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pass<sp/>the<sp/>special<sp/>opcode<sp/>address<sp/>which<sp/>we<sp/>set<sp/>as<sp/>the<sp/>high<sp/>byte<sp/>of<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>regaddr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>addrbuffer[0]<sp/>=</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(uint8_t)(_address<sp/>&gt;&gt;<sp/>8)<sp/>&amp;<sp/>~0x01;<sp/></highlight><highlight class="comment">//<sp/>set<sp/>bottom<sp/>bit<sp/>low<sp/>to<sp/>write</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>&apos;actual&apos;<sp/>reg<sp/>addr<sp/>is<sp/>the<sp/>second<sp/>byte<sp/>then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>addrbuffer[1]<sp/>=<sp/>(uint8_t)(_address<sp/>&amp;<sp/>0xFF);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>address<sp/>appears<sp/>to<sp/>be<sp/>a<sp/>byte<sp/>longer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_spidevice-&gt;<ref refid="class_adafruit___s_p_i_device_1a1c984896fcc5d009511ce37a659fdb2e" kindref="member">write</ref>(buffer,<sp/>len,<sp/>addrbuffer,<sp/>_addrwidth<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_spiregtype<sp/>==<sp/>ADDRBIT8_HIGH_TOREAD)<sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>addrbuffer[0]<sp/>&amp;=<sp/>~0x80;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_spiregtype<sp/>==<sp/>ADDRBIT8_HIGH_TOWRITE)<sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>addrbuffer[0]<sp/>|=<sp/>0x80;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_spiregtype<sp/>==<sp/>AD8_HIGH_TOREAD_AD7_HIGH_TOINC)<sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>addrbuffer[0]<sp/>&amp;=<sp/>~0x80;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>addrbuffer[0]<sp/>|=<sp/>0x40;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_spidevice-&gt;<ref refid="class_adafruit___s_p_i_device_1a1c984896fcc5d009511ce37a659fdb2e" kindref="member">write</ref>(buffer,<sp/>len,<sp/>addrbuffer,<sp/>_addrwidth);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="133"><highlight class="normal">}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_adafruit___bus_i_o___register_1aa418dced5301a1d8c1776a1941c8bc64" kindref="member">Adafruit_BusIO_Register::write</ref>(uint32_t<sp/>value,<sp/>uint8_t<sp/>numbytes)<sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(numbytes<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>numbytes<sp/>=<sp/>_width;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(numbytes<sp/>&gt;<sp/>4)<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>store<sp/>a<sp/>copy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/>_cached<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>numbytes;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_byteorder<sp/>==<sp/>LSBFIRST)<sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_buffer[i]<sp/>=<sp/>value<sp/>&amp;<sp/>0xFF;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_buffer[numbytes<sp/>-<sp/>i<sp/>-<sp/>1]<sp/>=<sp/>value<sp/>&amp;<sp/>0xFF;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>value<sp/>&gt;&gt;=<sp/>8;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_adafruit___bus_i_o___register_1aa418dced5301a1d8c1776a1941c8bc64" kindref="member">write</ref>(_buffer,<sp/>numbytes);</highlight></codeline>
<codeline lineno="162"><highlight class="normal">}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal">uint32_t<sp/><ref refid="class_adafruit___bus_i_o___register_1a699434b2567ae8fce541b8048d891252" kindref="member">Adafruit_BusIO_Register::read</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_adafruit___bus_i_o___register_1a699434b2567ae8fce541b8048d891252" kindref="member">read</ref>(_buffer,<sp/>_width))<sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/>uint32_t<sp/>value<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>_width;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>value<sp/>&lt;&lt;=<sp/>8;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_byteorder<sp/>==<sp/>LSBFIRST)<sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>|=<sp/>_buffer[_width<sp/>-<sp/>i<sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>|=<sp/>_buffer[i];</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value;</highlight></codeline>
<codeline lineno="186"><highlight class="normal">}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal">uint32_t<sp/><ref refid="class_adafruit___bus_i_o___register_1a9738fbb8c088d5cf6d381f87dc9288bb" kindref="member">Adafruit_BusIO_Register::readCached</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_cached;<sp/>}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_adafruit___bus_i_o___register_1a699434b2567ae8fce541b8048d891252" kindref="member">Adafruit_BusIO_Register::read</ref>(uint8_t<sp/>*buffer,<sp/>uint8_t<sp/>len)<sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/>uint8_t<sp/>addrbuffer[2]<sp/>=<sp/>{(uint8_t)(_address<sp/>&amp;<sp/>0xFF),</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(uint8_t)(_address<sp/>&gt;&gt;<sp/>8)};</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_i2cdevice)<sp/>{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_i2cdevice-&gt;<ref refid="class_adafruit___i2_c_device_1af04af7e2918c873215ce949ce05ebe33" kindref="member">write_then_read</ref>(addrbuffer,<sp/>_addrwidth,<sp/>buffer,<sp/>len);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_spidevice)<sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_spiregtype<sp/>==<sp/>ADDRESSED_OPCODE_BIT0_LOW_TO_WRITE)<sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>very<sp/>special<sp/>case!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pass<sp/>the<sp/>special<sp/>opcode<sp/>address<sp/>which<sp/>we<sp/>set<sp/>as<sp/>the<sp/>high<sp/>byte<sp/>of<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>regaddr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>addrbuffer[0]<sp/>=</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(uint8_t)(_address<sp/>&gt;&gt;<sp/>8)<sp/>|<sp/>0x01;<sp/></highlight><highlight class="comment">//<sp/>set<sp/>bottom<sp/>bit<sp/>high<sp/>to<sp/>read</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>&apos;actual&apos;<sp/>reg<sp/>addr<sp/>is<sp/>the<sp/>second<sp/>byte<sp/>then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>addrbuffer[1]<sp/>=<sp/>(uint8_t)(_address<sp/>&amp;<sp/>0xFF);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>address<sp/>appears<sp/>to<sp/>be<sp/>a<sp/>byte<sp/>longer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_spidevice-&gt;<ref refid="class_adafruit___s_p_i_device_1a9cc3386cab3750aa18bbf3918261fc54" kindref="member">write_then_read</ref>(addrbuffer,<sp/>_addrwidth<sp/>+<sp/>1,<sp/>buffer,</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_spiregtype<sp/>==<sp/>ADDRBIT8_HIGH_TOREAD)<sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>addrbuffer[0]<sp/>|=<sp/>0x80;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_spiregtype<sp/>==<sp/>ADDRBIT8_HIGH_TOWRITE)<sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>addrbuffer[0]<sp/>&amp;=<sp/>~0x80;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_spiregtype<sp/>==<sp/>AD8_HIGH_TOREAD_AD7_HIGH_TOINC)<sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>addrbuffer[0]<sp/>|=<sp/>0x80<sp/>|<sp/>0x40;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_spidevice-&gt;<ref refid="class_adafruit___s_p_i_device_1a9cc3386cab3750aa18bbf3918261fc54" kindref="member">write_then_read</ref>(addrbuffer,<sp/>_addrwidth,<sp/>buffer,<sp/>len);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="234"><highlight class="normal">}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_adafruit___bus_i_o___register_1a699434b2567ae8fce541b8048d891252" kindref="member">Adafruit_BusIO_Register::read</ref>(uint16_t<sp/>*value)<sp/>{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_adafruit___bus_i_o___register_1a699434b2567ae8fce541b8048d891252" kindref="member">read</ref>(_buffer,<sp/>2))<sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_byteorder<sp/>==<sp/>LSBFIRST)<sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>*value<sp/>=<sp/>_buffer[1];</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>*value<sp/>&lt;&lt;=<sp/>8;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>*value<sp/>|=<sp/>_buffer[0];</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>*value<sp/>=<sp/>_buffer[0];</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>*value<sp/>&lt;&lt;=<sp/>8;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>*value<sp/>|=<sp/>_buffer[1];</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="257"><highlight class="normal">}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_adafruit___bus_i_o___register_1a699434b2567ae8fce541b8048d891252" kindref="member">Adafruit_BusIO_Register::read</ref>(uint8_t<sp/>*value)<sp/>{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_adafruit___bus_i_o___register_1a699434b2567ae8fce541b8048d891252" kindref="member">read</ref>(_buffer,<sp/>1))<sp/>{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/>*value<sp/>=<sp/>_buffer[0];</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="272"><highlight class="normal">}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_adafruit___bus_i_o___register_1abc1e92469336a95e6ddf34bd7fd18a67" kindref="member">Adafruit_BusIO_Register::print</ref>(Stream<sp/>*s)<sp/>{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/>uint32_t<sp/>val<sp/>=<sp/><ref refid="class_adafruit___bus_i_o___register_1a699434b2567ae8fce541b8048d891252" kindref="member">read</ref>();</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/>s-&gt;print(</highlight><highlight class="stringliteral">&quot;0x&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/>s-&gt;print(val,<sp/>HEX);</highlight></codeline>
<codeline lineno="282"><highlight class="normal">}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_adafruit___bus_i_o___register_1aebb1d9dd6520ba1a20b3952c434d7a47" kindref="member">Adafruit_BusIO_Register::println</ref>(Stream<sp/>*s)<sp/>{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><ref refid="class_adafruit___bus_i_o___register_1abc1e92469336a95e6ddf34bd7fd18a67" kindref="member">print</ref>(s);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/>s-&gt;println();</highlight></codeline>
<codeline lineno="291"><highlight class="normal">}</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><ref refid="class_adafruit___bus_i_o___register_bits_1a369a5c8d03df7da82f8f46f00bd73855" kindref="member">Adafruit_BusIO_RegisterBits::Adafruit_BusIO_RegisterBits</ref>(</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_adafruit___bus_i_o___register" kindref="compound">Adafruit_BusIO_Register</ref><sp/>*reg,<sp/>uint8_t<sp/>bits,<sp/>uint8_t<sp/>shift)<sp/>{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/>_register<sp/>=<sp/>reg;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/>_bits<sp/>=<sp/>bits;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/>_shift<sp/>=<sp/>shift;</highlight></codeline>
<codeline lineno="305"><highlight class="normal">}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal">uint32_t<sp/><ref refid="class_adafruit___bus_i_o___register_bits_1a868614bb793ae3c4c00b7954896213d0" kindref="member">Adafruit_BusIO_RegisterBits::read</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/>uint32_t<sp/>val<sp/>=<sp/>_register-&gt;<ref refid="class_adafruit___bus_i_o___register_1a2b48e23dacbb7cffc0eb07dcebcfba6f" kindref="member">read</ref>();</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/>val<sp/>&gt;&gt;=<sp/>_shift;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val<sp/>&amp;<sp/>((1<sp/>&lt;&lt;<sp/>(_bits))<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="315"><highlight class="normal">}</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_adafruit___bus_i_o___register_bits_1a9311f94f1a1d93bc575b06c34ddecd80" kindref="member">Adafruit_BusIO_RegisterBits::write</ref>(uint32_t<sp/>data)<sp/>{</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/>uint32_t<sp/>val<sp/>=<sp/>_register-&gt;<ref refid="class_adafruit___bus_i_o___register_1a2b48e23dacbb7cffc0eb07dcebcfba6f" kindref="member">read</ref>();</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>mask<sp/>off<sp/>the<sp/>data<sp/>before<sp/>writing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/>uint32_t<sp/>mask<sp/>=<sp/>(1<sp/>&lt;&lt;<sp/>(_bits))<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/>data<sp/>&amp;=<sp/>mask;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/>mask<sp/>&lt;&lt;=<sp/>_shift;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/>val<sp/>&amp;=<sp/>~mask;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>remove<sp/>the<sp/>current<sp/>data<sp/>at<sp/>that<sp/>spot</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/>val<sp/>|=<sp/>data<sp/>&lt;&lt;<sp/>_shift;<sp/></highlight><highlight class="comment">//<sp/>and<sp/>add<sp/>in<sp/>the<sp/>new<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_register-&gt;<ref refid="class_adafruit___bus_i_o___register_1aa418dced5301a1d8c1776a1941c8bc64" kindref="member">write</ref>(val,<sp/>_register-&gt;<ref refid="class_adafruit___bus_i_o___register_1abf1eaeb0ae836be082a73dae14e7e352" kindref="member">width</ref>());</highlight></codeline>
<codeline lineno="335"><highlight class="normal">}</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal">uint8_t<sp/><ref refid="class_adafruit___bus_i_o___register_1abf1eaeb0ae836be082a73dae14e7e352" kindref="member">Adafruit_BusIO_Register::width</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_width;<sp/>}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_adafruit___bus_i_o___register_1a478ae4ca787304ead47a56994fbdb840" kindref="member">Adafruit_BusIO_Register::setWidth</ref>(uint8_t<sp/>width)<sp/>{<sp/>_width<sp/>=<sp/><ref refid="class_adafruit___bus_i_o___register_1abf1eaeb0ae836be082a73dae14e7e352" kindref="member">width</ref>;<sp/>}</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_adafruit___bus_i_o___register_1a08ddf29ed836c712e2a2f050e1ae3bcd" kindref="member">Adafruit_BusIO_Register::setAddress</ref>(uint16_t<sp/>address)<sp/>{</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/>_address<sp/>=<sp/>address;</highlight></codeline>
<codeline lineno="355"><highlight class="normal">}</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_adafruit___bus_i_o___register_1a421a7c74ab0faafe243060af1883717a" kindref="member">Adafruit_BusIO_Register::setAddressWidth</ref>(uint16_t<sp/>address_width)<sp/>{</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/>_addrwidth<sp/>=<sp/>address_width;</highlight></codeline>
<codeline lineno="363"><highlight class="normal">}</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>SPI<sp/>exists</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="libraries/Adafruit_BusIO/Adafruit_BusIO_Register.cpp"/>
  </compounddef>
</doxygen>
