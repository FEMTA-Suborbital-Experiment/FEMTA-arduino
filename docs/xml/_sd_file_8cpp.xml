<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="_sd_file_8cpp" kind="file" language="C++">
    <compoundname>SdFile.cpp</compoundname>
    <includes refid="_sd_fat_8h" local="yes">SdFat.h</includes>
    <includes local="no">Arduino.h</includes>
    <incdepgraph>
      <node id="7">
        <label>Arduino.h</label>
      </node>
      <node id="8">
        <label>FatStructs.h</label>
        <link refid="_fat_structs_8h"/>
      </node>
      <node id="3">
        <label>Sd2Card.h</label>
        <link refid="_sd2_card_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>Sd2PinMap.h</label>
        <link refid="_sd2_pin_map_8h_source"/>
      </node>
      <node id="2">
        <label>SdFat.h</label>
        <link refid="_sd_fat_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>libraries/SD-1.2.4/src/utility/SdFile.cpp</label>
        <link refid="_sd_file_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>SdInfo.h</label>
        <link refid="_sd_info_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>Print.h</label>
      </node>
      <node id="6">
        <label>stdint.h</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>Arduino<sp/>SdFat<sp/>Library</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/>Copyright<sp/>(C)<sp/>2009<sp/>by<sp/>William<sp/>Greiman</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>Arduino<sp/>SdFat<sp/>Library</highlight></codeline>
<codeline lineno="5"><highlight class="comment"></highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/><sp/>This<sp/>Library<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/><sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/><sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>3<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/><sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="10"><highlight class="comment"></highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/><sp/><sp/>This<sp/>Library<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/><sp/><sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/><sp/><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/><sp/><sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"></highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/><sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/><sp/><sp/>along<sp/>with<sp/>the<sp/>Arduino<sp/>SdFat<sp/>Library.<sp/><sp/>If<sp/>not,<sp/>see</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/><sp/><sp/>&lt;http://www.gnu.org/licenses/&gt;.</highlight></codeline>
<codeline lineno="19"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_sd_fat_8h" kindref="compound">SdFat.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__AVR__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#include<sp/>&lt;avr/pgmspace.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;Arduino.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/>callback<sp/>function<sp/>for<sp/>date/time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal">void<sp/>(*SdFile::dateTime_)(uint16_t*<sp/>date,<sp/>uint16_t*<sp/>time)<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>ALLOW_DEPRECATED_FUNCTIONS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>suppress<sp/>cpplint<sp/>warnings<sp/>with<sp/>NOLINT<sp/>comment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>void<sp/>(*SdFile::oldDateTime_)(uint16_t&amp;<sp/>date,<sp/>uint16_t&amp;<sp/>time)<sp/>=<sp/>NULL;<sp/><sp/></highlight><highlight class="comment">//<sp/>NOLINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">//<sp/>ALLOW_DEPRECATED_FUNCTIONS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//<sp/>add<sp/>a<sp/>cluster<sp/>to<sp/>a<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal">uint8_t<sp/>SdFile::addCluster()<sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!vol_-&gt;allocContiguous(1,<sp/>&amp;curCluster_))<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>first<sp/>cluster<sp/>of<sp/>file<sp/>link<sp/>to<sp/>directory<sp/>entry</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(firstCluster_<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>firstCluster_<sp/>=<sp/>curCluster_;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>flags_<sp/>|=<sp/>F_FILE_DIR_DIRTY;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>flags_<sp/>|=<sp/>F_FILE_CLUSTER_ADDED;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="47"><highlight class="normal">}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Add<sp/>a<sp/>cluster<sp/>to<sp/>a<sp/>directory<sp/>file<sp/>and<sp/>zero<sp/>the<sp/>cluster.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">//<sp/>return<sp/>with<sp/>first<sp/>block<sp/>of<sp/>cluster<sp/>in<sp/>the<sp/>cache</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal">uint8_t<sp/>SdFile::addDirCluster(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!addCluster())<sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>zero<sp/>data<sp/>in<sp/>cluster<sp/>insure<sp/>first<sp/>cluster<sp/>is<sp/>in<sp/>cache</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>uint32_t<sp/>block<sp/>=<sp/>vol_-&gt;clusterStartBlock(curCluster_);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint8_t<sp/>i<sp/>=<sp/>vol_-&gt;blocksPerCluster_;<sp/>i<sp/>!=<sp/>0;<sp/>i--)<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!SdVolume::cacheZeroBlock(block<sp/>+<sp/>i<sp/>-<sp/>1))<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Increase<sp/>directory<sp/>file<sp/>size<sp/>by<sp/>cluster<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>fileSize_<sp/>+=<sp/>512UL<sp/>&lt;&lt;<sp/>vol_-&gt;clusterSizeShift_;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="66"><highlight class="normal">}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="comment">//<sp/>cache<sp/>a<sp/>file&apos;s<sp/>directory<sp/>entry</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="comment">//<sp/>return<sp/>pointer<sp/>to<sp/>cached<sp/>entry<sp/>or<sp/>null<sp/>for<sp/>failure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><ref refid="structdirectory_entry" kindref="compound">dir_t</ref>*<sp/>SdFile::cacheDirEntry(uint8_t<sp/>action)<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!SdVolume::cacheRawBlock(dirBlock_,<sp/>action))<sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SdVolume::cacheBuffer_.<ref refid="unioncache__t_1a7396fdbdb7c52bd1d72c5329ff32acd1" kindref="member">dir</ref><sp/>+<sp/>dirIndex_;</highlight></codeline>
<codeline lineno="75"><highlight class="normal">}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="85"><highlight class="normal">uint8_t<sp/><ref refid="class_sd_file_1a6b24350c89cc41ff644a343231a3983c" kindref="member">SdFile::close</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_sd_file_1a42f006b16e686ee164e6d7df41fc94cd" kindref="member">sync</ref>())<sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>type_<sp/>=<sp/><ref refid="_sd_fat_8h_1a4da8c96e256b06356321e81705494010" kindref="member">FAT_FILE_TYPE_CLOSED</ref>;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="91"><highlight class="normal">}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="104"><highlight class="normal">uint8_t<sp/><ref refid="class_sd_file_1a3b07fc09dbcb28ae7c89c060af6a1810" kindref="member">SdFile::contiguousRange</ref>(uint32_t*<sp/>bgnBlock,<sp/>uint32_t*<sp/>endBlock)<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>error<sp/>if<sp/>no<sp/>blocks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(firstCluster_<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint32_t<sp/>c<sp/>=<sp/>firstCluster_;<sp/>;<sp/>c++)<sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>next;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!vol_-&gt;fatGet(c,<sp/>&amp;next))<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>for<sp/>contiguous</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(next<sp/>!=<sp/>(c<sp/>+<sp/>1))<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>error<sp/>if<sp/>not<sp/>end<sp/>of<sp/>chain</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!vol_-&gt;isEOC(next))<sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*bgnBlock<sp/>=<sp/>vol_-&gt;clusterStartBlock(firstCluster_);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*endBlock<sp/>=<sp/>vol_-&gt;clusterStartBlock(c)</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>vol_-&gt;blocksPerCluster_<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal">}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="148"><highlight class="normal">uint8_t<sp/><ref refid="class_sd_file_1a07fc5c82318f073848e706f95830e5b5" kindref="member">SdFile::createContiguous</ref>(<ref refid="class_sd_file" kindref="compound">SdFile</ref>*<sp/>dirFile,</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>fileName,<sp/>uint32_t<sp/>size)<sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>allow<sp/>zero<sp/>length<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_sd_file_1a9e211ac14784f48aebb213194336f8cc" kindref="member">open</ref>(dirFile,<sp/>fileName,<sp/><ref refid="_sd_fat_8h_1a20d0ef801486dd02de6ee482de731193" kindref="member">O_CREAT</ref><sp/>|<sp/><ref refid="_sd_fat_8h_1ab5635d4288cb294c1ed000fa183e072b" kindref="member">O_EXCL</ref><sp/>|<sp/><ref refid="_sd_fat_8h_1ad79c5a45cb5e4855b771629fc15d78f6" kindref="member">O_RDWR</ref>))<sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>calculate<sp/>number<sp/>of<sp/>clusters<sp/>needed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>uint32_t<sp/>count<sp/>=<sp/>((size<sp/>-<sp/>1)<sp/>&gt;&gt;<sp/>(vol_-&gt;clusterSizeShift_<sp/>+<sp/>9))<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>allocate<sp/>clusters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!vol_-&gt;allocContiguous(count,<sp/>&amp;firstCluster_))<sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_sd_file_1a66c5fb5f651a1ac319bab68fda1d3cc2" kindref="member">remove</ref>();</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>fileSize_<sp/>=<sp/>size;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>insure<sp/>sync()<sp/>will<sp/>update<sp/>dir<sp/>entry</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/>flags_<sp/>|=<sp/>F_FILE_DIR_DIRTY;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_sd_file_1a42f006b16e686ee164e6d7df41fc94cd" kindref="member">sync</ref>();</highlight></codeline>
<codeline lineno="171"><highlight class="normal">}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="181"><highlight class="normal">uint8_t<sp/><ref refid="class_sd_file_1abaf9b1dc12d53cdeb937065edf68927d" kindref="member">SdFile::dirEntry</ref>(<ref refid="structdirectory_entry" kindref="compound">dir_t</ref>*<sp/>dir)<sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>sure<sp/>fields<sp/>on<sp/>SD<sp/>are<sp/>correct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_sd_file_1a42f006b16e686ee164e6d7df41fc94cd" kindref="member">sync</ref>())<sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>read<sp/>entry</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><ref refid="structdirectory_entry" kindref="compound">dir_t</ref>*<sp/>p<sp/>=<sp/>cacheDirEntry(SdVolume::CACHE_FOR_READ);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!p)<sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>copy<sp/>to<sp/>caller&apos;s<sp/>struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/>memcpy(dir,<sp/>p,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structdirectory_entry" kindref="compound">dir_t</ref>));</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="196"><highlight class="normal">}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="205"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_sd_file_1ad7bbb106aa4c96c795c88b33def677bc" kindref="member">SdFile::dirName</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structdirectory_entry" kindref="compound">dir_t</ref>&amp;<sp/>dir,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="_fat_structs_8h_1a30308c9b983377042fd2cc8900454fb1" kindref="member">name</ref>)<sp/>{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/>uint8_t<sp/>j<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint8_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>11;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dir.<ref refid="structdirectory_entry_1a05dc993ea55a1a742de5970541a31ecb" kindref="member">name</ref>[i]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>8)<sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_fat_structs_8h_1a30308c9b983377042fd2cc8900454fb1" kindref="member">name</ref>[j++]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_fat_structs_8h_1a30308c9b983377042fd2cc8900454fb1" kindref="member">name</ref>[j++]<sp/>=<sp/>dir.<ref refid="structdirectory_entry_1a05dc993ea55a1a742de5970541a31ecb" kindref="member">name</ref>[i];</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><ref refid="_fat_structs_8h_1a30308c9b983377042fd2cc8900454fb1" kindref="member">name</ref>[j]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="217"><highlight class="normal">}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="232"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_sd_file_1afd9965ed8dee8bdd4d86dd14032edbc0" kindref="member">SdFile::ls</ref>(uint8_t<sp/>flags,<sp/>uint8_t<sp/>indent)<sp/>{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><ref refid="structdirectory_entry" kindref="compound">dir_t</ref>*<sp/>p;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><ref refid="class_sd_file_1afa8aaa7bdeb97b4e691ea01adf99f654" kindref="member">rewind</ref>();</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((p<sp/>=<sp/>readDirCache()))<sp/>{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>done<sp/>if<sp/>past<sp/>last<sp/>used<sp/>entry</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p-&gt;<ref refid="structdirectory_entry_1a05dc993ea55a1a742de5970541a31ecb" kindref="member">name</ref>[0]<sp/>==<sp/><ref refid="_fat_structs_8h_1a23b2e4d06e245c778f4c52909cf97c76" kindref="member">DIR_NAME_FREE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>skip<sp/>deleted<sp/>entry<sp/>and<sp/>entries<sp/>for<sp/>.<sp/>and<sp/><sp/>..</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p-&gt;<ref refid="structdirectory_entry_1a05dc993ea55a1a742de5970541a31ecb" kindref="member">name</ref>[0]<sp/>==<sp/><ref refid="_fat_structs_8h_1a5de4ada3536d89559f6433e835e311da" kindref="member">DIR_NAME_DELETED</ref><sp/>||<sp/>p-&gt;<ref refid="structdirectory_entry_1a05dc993ea55a1a742de5970541a31ecb" kindref="member">name</ref>[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>only<sp/>list<sp/>subdirectories<sp/>and<sp/>files</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!DIR_IS_FILE_OR_SUBDIR(p))<sp/>{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>print<sp/>any<sp/>indent<sp/>spaces</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(int8_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>indent;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(</highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>print<sp/>file<sp/>name<sp/>with<sp/>possible<sp/>blank<sp/>fill</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_sd_file_1a7267e3def5cba51149ff98baf5d3f2c8" kindref="member">printDirName</ref>(*p,<sp/>flags<sp/>&amp;<sp/>(<ref refid="_sd_fat_8h_1ac78cfe032599ef1f5723c62106017fcd" kindref="member">LS_DATE</ref><sp/>|<sp/><ref refid="_sd_fat_8h_1a8170e56f2df0139f3acd73c35636fa7f" kindref="member">LS_SIZE</ref>)<sp/>?<sp/>14<sp/>:<sp/>0);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>print<sp/>modify<sp/>date/time<sp/>if<sp/>requested</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>&amp;<sp/><ref refid="_sd_fat_8h_1ac78cfe032599ef1f5723c62106017fcd" kindref="member">LS_DATE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sd_file_1a77022a204f3e5148e78e1b7ae7b6865a" kindref="member">printFatDate</ref>(p-&gt;<ref refid="structdirectory_entry_1a12b2e7cf87482a942a0b5d3df6c51468" kindref="member">lastWriteDate</ref>);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(</highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sd_file_1ab981ea789ec76d1a44e4b3c8a84ccd35" kindref="member">printFatTime</ref>(p-&gt;<ref refid="structdirectory_entry_1a7bab435322d1928f66fbce53ee1f402d" kindref="member">lastWriteTime</ref>);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>print<sp/>size<sp/>if<sp/>requested</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!DIR_IS_SUBDIR(p)<sp/>&amp;&amp;<sp/>(flags<sp/>&amp;<sp/><ref refid="_sd_fat_8h_1a8170e56f2df0139f3acd73c35636fa7f" kindref="member">LS_SIZE</ref>))<sp/>{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(</highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(p-&gt;<ref refid="structdirectory_entry_1ac2445d99b50f925f662952e0ccd26a02" kindref="member">fileSize</ref>);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.println();</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>list<sp/>subdirectory<sp/>content<sp/>if<sp/>requested</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((flags<sp/>&amp;<sp/><ref refid="_sd_fat_8h_1af90ecd4124f4c2563b37174be91e76f9" kindref="member">LS_R</ref>)<sp/>&amp;&amp;<sp/>DIR_IS_SUBDIR(p))<sp/>{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>index<sp/>=<sp/><ref refid="class_sd_file_1a6105ae2f1c23e99fdea17bc64571ea8c" kindref="member">curPosition</ref>()<sp/>/<sp/>32<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sd_file" kindref="compound">SdFile</ref><sp/>s;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s.open(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>index,<sp/><ref refid="_sd_fat_8h_1ac5a1c3e543273b0374ba114c496e662e" kindref="member">O_READ</ref>))<sp/>{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s.ls(flags,<sp/>indent<sp/>+<sp/>2);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sd_file_1a5b8ea0ba6a9fec1ee8f1b11e90edb0c6" kindref="member">seekSet</ref>(32<sp/>*<sp/>(index<sp/>+<sp/>1));</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="283"><highlight class="normal">}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight><highlight class="comment">//<sp/>format<sp/>directory<sp/>name<sp/>field<sp/>from<sp/>a<sp/>8.3<sp/>name<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal">uint8_t<sp/>SdFile::make83Name(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>str,<sp/>uint8_t*<sp/><ref refid="_fat_structs_8h_1a30308c9b983377042fd2cc8900454fb1" kindref="member">name</ref>)<sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/>uint8_t<sp/>c;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/>uint8_t<sp/>n<sp/>=<sp/>7;<sp/><sp/></highlight><highlight class="comment">//<sp/>max<sp/>index<sp/>for<sp/>part<sp/>before<sp/>dot</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/>uint8_t<sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>blank<sp/>fill<sp/>name<sp/>and<sp/>extension</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>11)<sp/>{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_fat_structs_8h_1a30308c9b983377042fd2cc8900454fb1" kindref="member">name</ref>[i++]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((c<sp/>=<sp/>*str++)<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>==<sp/>10)<sp/>{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>only<sp/>one<sp/>dot<sp/>allowed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>10;<sp/><sp/></highlight><highlight class="comment">//<sp/>max<sp/>index<sp/>for<sp/>full<sp/>8.3<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>8;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>place<sp/>for<sp/>extension</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>illegal<sp/>FAT<sp/>characters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>b;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>defined(__AVR__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>PGM_P<sp/>p<sp/>=<sp/>PSTR(</highlight><highlight class="stringliteral">&quot;|&lt;&gt;^+=?/[];,*\&quot;\\&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((b<sp/>=<sp/>pgm_read_byte(p++)))<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(b<sp/>==<sp/>c)<sp/>{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#elif<sp/>defined(__arm__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>valid[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;|&lt;&gt;^+=?/[];,*\&quot;\\&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*p<sp/>=<sp/>valid;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((b<sp/>=<sp/>*p++))<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(b<sp/>==<sp/>c)<sp/>{</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>size<sp/>and<sp/>only<sp/>allow<sp/>ASCII<sp/>printable<sp/>characters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&gt;<sp/>n<sp/>||<sp/>c<sp/>&lt;<sp/>0X21<sp/>||<sp/>c<sp/>&gt;<sp/>0X7E)<sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>only<sp/>upper<sp/>case<sp/>allowed<sp/>in<sp/>8.3<sp/>names<sp/>-<sp/>convert<sp/>lower<sp/>to<sp/>upper</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_fat_structs_8h_1a30308c9b983377042fd2cc8900454fb1" kindref="member">name</ref>[i++]<sp/>=<sp/>c<sp/>&lt;<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal"><sp/>||<sp/>c<sp/>&gt;<sp/></highlight><highlight class="charliteral">&apos;z&apos;</highlight><highlight class="normal"><sp/>?<sp/><sp/>c<sp/>:<sp/>c<sp/>+<sp/>(</highlight><highlight class="charliteral">&apos;A&apos;</highlight><highlight class="normal"><sp/>-<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>must<sp/>have<sp/>a<sp/>file<sp/>name,<sp/>extension<sp/>is<sp/>optional</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_fat_structs_8h_1a30308c9b983377042fd2cc8900454fb1" kindref="member">name</ref>[0]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="327"><highlight class="normal">}</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="341"><highlight class="normal">uint8_t<sp/><ref refid="class_sd_file_1a62984bedf614a8de96b48bf9c5e7159f" kindref="member">SdFile::makeDir</ref>(<ref refid="class_sd_file" kindref="compound">SdFile</ref>*<sp/>dir,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>dirName)<sp/>{</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><ref refid="structdirectory_entry" kindref="compound">dir_t</ref><sp/>d;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>a<sp/>normal<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_sd_file_1a9e211ac14784f48aebb213194336f8cc" kindref="member">open</ref>(dir,<sp/><ref refid="class_sd_file_1ad7bbb106aa4c96c795c88b33def677bc" kindref="member">dirName</ref>,<sp/><ref refid="_sd_fat_8h_1a20d0ef801486dd02de6ee482de731193" kindref="member">O_CREAT</ref><sp/>|<sp/><ref refid="_sd_fat_8h_1ab5635d4288cb294c1ed000fa183e072b" kindref="member">O_EXCL</ref><sp/>|<sp/><ref refid="_sd_fat_8h_1ad79c5a45cb5e4855b771629fc15d78f6" kindref="member">O_RDWR</ref>))<sp/>{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>convert<sp/>SdFile<sp/>to<sp/>directory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/>flags_<sp/>=<sp/><ref refid="_sd_fat_8h_1ac5a1c3e543273b0374ba114c496e662e" kindref="member">O_READ</ref>;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/>type_<sp/>=<sp/><ref refid="_sd_fat_8h_1ac301b0465fdd7953c6e110b9896cc9fd" kindref="member">FAT_FILE_TYPE_SUBDIR</ref>;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>allocate<sp/>and<sp/>zero<sp/>first<sp/>cluster</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!addDirCluster())<sp/>{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>force<sp/>entry<sp/>to<sp/>SD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_sd_file_1a42f006b16e686ee164e6d7df41fc94cd" kindref="member">sync</ref>())<sp/>{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>cache<sp/>entry<sp/>-<sp/>should<sp/>already<sp/>be<sp/>in<sp/>cache<sp/>due<sp/>to<sp/>sync()<sp/>call</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><ref refid="structdirectory_entry" kindref="compound">dir_t</ref>*<sp/>p<sp/>=<sp/>cacheDirEntry(SdVolume::CACHE_FOR_WRITE);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!p)<sp/>{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>change<sp/>directory<sp/>entry<sp/><sp/>attribute</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/>p-&gt;<ref refid="structdirectory_entry_1a16c6cde55c8175c90935c386f1cfb21a" kindref="member">attributes</ref><sp/>=<sp/><ref refid="_fat_structs_8h_1a3f9e7ceac3e0a9aebead998e88349139" kindref="member">DIR_ATT_DIRECTORY</ref>;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>entry<sp/>for<sp/>&apos;.&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/>memcpy(&amp;d,<sp/>p,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(d));</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint8_t<sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>11;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>d.name[i]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/>d.name[0]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>cache<sp/>block<sp/>for<sp/>&apos;.&apos;<sp/><sp/>and<sp/>&apos;..&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/>uint32_t<sp/>block<sp/>=<sp/>vol_-&gt;clusterStartBlock(firstCluster_);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!SdVolume::cacheRawBlock(block,<sp/>SdVolume::CACHE_FOR_WRITE))<sp/>{</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>copy<sp/>&apos;.&apos;<sp/>to<sp/>block</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/>memcpy(&amp;SdVolume::cacheBuffer_.dir[0],<sp/>&amp;d,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(d));</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>entry<sp/>for<sp/>&apos;..&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/>d.name[1]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dir-&gt;isRoot())<sp/>{</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>d.firstClusterLow<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/>d.firstClusterHigh<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/>d.firstClusterLow<sp/>=<sp/>dir-&gt;firstCluster_<sp/>&amp;<sp/>0XFFFF;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/>d.firstClusterHigh<sp/>=<sp/>dir-&gt;firstCluster_<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>copy<sp/>&apos;..&apos;<sp/>to<sp/>block</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/>memcpy(&amp;SdVolume::cacheBuffer_.dir[1],<sp/>&amp;d,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(d));</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>position<sp/>after<sp/>&apos;..&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/>curPosition_<sp/>=<sp/>2<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(d);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>write<sp/>first<sp/>block</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SdVolume::cacheFlush();</highlight></codeline>
<codeline lineno="405"><highlight class="normal">}</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="453"><highlight class="normal">uint8_t<sp/><ref refid="class_sd_file_1a9e211ac14784f48aebb213194336f8cc" kindref="member">SdFile::open</ref>(<ref refid="class_sd_file" kindref="compound">SdFile</ref>*<sp/>dirFile,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>fileName,<sp/>uint8_t<sp/>oflag)<sp/>{</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/>uint8_t<sp/>dname[11];</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><ref refid="structdirectory_entry" kindref="compound">dir_t</ref>*<sp/>p;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>error<sp/>if<sp/>already<sp/>open</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_sd_file_1a54e1b9385c43c33dc83eaad6de0d33be" kindref="member">isOpen</ref>())<sp/>{</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!make83Name(fileName,<sp/>dname))<sp/>{</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/>vol_<sp/>=<sp/>dirFile-&gt;vol_;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/>dirFile-&gt;<ref refid="class_sd_file_1afa8aaa7bdeb97b4e691ea01adf99f654" kindref="member">rewind</ref>();</highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>bool<sp/>for<sp/>empty<sp/>entry<sp/>found</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/>uint8_t<sp/>emptyFound<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>search<sp/>for<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(dirFile-&gt;curPosition_<sp/>&lt;<sp/>dirFile-&gt;fileSize_)<sp/>{</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>index<sp/>=<sp/>0XF<sp/>&amp;<sp/>(dirFile-&gt;curPosition_<sp/>&gt;&gt;<sp/>5);</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/>p<sp/>=<sp/>dirFile-&gt;readDirCache();</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p-&gt;<ref refid="structdirectory_entry_1a05dc993ea55a1a742de5970541a31ecb" kindref="member">name</ref>[0]<sp/>==<sp/><ref refid="_fat_structs_8h_1a23b2e4d06e245c778f4c52909cf97c76" kindref="member">DIR_NAME_FREE</ref><sp/>||<sp/>p-&gt;<ref refid="structdirectory_entry_1a05dc993ea55a1a742de5970541a31ecb" kindref="member">name</ref>[0]<sp/>==<sp/><ref refid="_fat_structs_8h_1a5de4ada3536d89559f6433e835e311da" kindref="member">DIR_NAME_DELETED</ref>)<sp/>{</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>remember<sp/>first<sp/>empty<sp/>slot</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!emptyFound)<sp/>{</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>emptyFound<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dirIndex_<sp/>=<sp/>index;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dirBlock_<sp/>=<sp/>SdVolume::cacheBlockNumber_;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>done<sp/>if<sp/>no<sp/>entries<sp/>follow</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p-&gt;<ref refid="structdirectory_entry_1a05dc993ea55a1a742de5970541a31ecb" kindref="member">name</ref>[0]<sp/>==<sp/><ref refid="_fat_structs_8h_1a23b2e4d06e245c778f4c52909cf97c76" kindref="member">DIR_NAME_FREE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!memcmp(dname,<sp/>p-&gt;<ref refid="structdirectory_entry_1a05dc993ea55a1a742de5970541a31ecb" kindref="member">name</ref>,<sp/>11))<sp/>{</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>open<sp/>existing<sp/>file<sp/>if<sp/>O_CREAT<sp/>and<sp/>O_EXCL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((oflag<sp/>&amp;<sp/>(<ref refid="_sd_fat_8h_1a20d0ef801486dd02de6ee482de731193" kindref="member">O_CREAT</ref><sp/>|<sp/><ref refid="_sd_fat_8h_1ab5635d4288cb294c1ed000fa183e072b" kindref="member">O_EXCL</ref>))<sp/>==<sp/>(<ref refid="_sd_fat_8h_1a20d0ef801486dd02de6ee482de731193" kindref="member">O_CREAT</ref><sp/>|<sp/><ref refid="_sd_fat_8h_1ab5635d4288cb294c1ed000fa183e072b" kindref="member">O_EXCL</ref>))<sp/>{</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>open<sp/>found<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>openCachedEntry(0XF<sp/>&amp;<sp/>index,<sp/>oflag);</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>only<sp/>create<sp/>file<sp/>if<sp/>O_CREAT<sp/>and<sp/>O_WRITE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((oflag<sp/>&amp;<sp/>(<ref refid="_sd_fat_8h_1a20d0ef801486dd02de6ee482de731193" kindref="member">O_CREAT</ref><sp/>|<sp/><ref refid="_sd_fat_8h_1a44c1620ada13f6318ab39b9fa38ef55a" kindref="member">O_WRITE</ref>))<sp/>!=<sp/>(<ref refid="_sd_fat_8h_1a20d0ef801486dd02de6ee482de731193" kindref="member">O_CREAT</ref><sp/>|<sp/><ref refid="_sd_fat_8h_1a44c1620ada13f6318ab39b9fa38ef55a" kindref="member">O_WRITE</ref>))<sp/>{</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>cache<sp/>found<sp/>slot<sp/>or<sp/>add<sp/>cluster<sp/>if<sp/>end<sp/>of<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(emptyFound)<sp/>{</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/>p<sp/>=<sp/>cacheDirEntry(SdVolume::CACHE_FOR_WRITE);</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!p)<sp/>{</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dirFile-&gt;type_<sp/>==<sp/><ref refid="_sd_fat_8h_1a4c02ced3c57420e2a1997f51bd87d150" kindref="member">FAT_FILE_TYPE_ROOT16</ref>)<sp/>{</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>and<sp/>zero<sp/>cluster<sp/>for<sp/>dirFile<sp/>-<sp/>first<sp/>cluster<sp/>is<sp/>in<sp/>cache<sp/>for<sp/>write</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!dirFile-&gt;addDirCluster())<sp/>{</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>use<sp/>first<sp/>entry<sp/>in<sp/>cluster</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/>dirIndex_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/>p<sp/>=<sp/>SdVolume::cacheBuffer_.<ref refid="unioncache__t_1a7396fdbdb7c52bd1d72c5329ff32acd1" kindref="member">dir</ref>;</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>initialize<sp/>as<sp/>empty<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/>memset(p,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structdirectory_entry" kindref="compound">dir_t</ref>));</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/>memcpy(p-&gt;<ref refid="structdirectory_entry_1a05dc993ea55a1a742de5970541a31ecb" kindref="member">name</ref>,<sp/>dname,<sp/>11);</highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>timestamps</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dateTime_)<sp/>{</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>call<sp/>user<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/>dateTime_(&amp;p-&gt;<ref refid="structdirectory_entry_1a7b43372794655fe6604d3c17c02302fe" kindref="member">creationDate</ref>,<sp/>&amp;p-&gt;<ref refid="structdirectory_entry_1a622bfa70c2cd9006108d7473d737a953" kindref="member">creationTime</ref>);</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>use<sp/>default<sp/>date/time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structdirectory_entry_1a7b43372794655fe6604d3c17c02302fe" kindref="member">creationDate</ref><sp/>=<sp/><ref refid="_sd_fat_8h_1a441bb1bc5f52d512656de3b86a279948" kindref="member">FAT_DEFAULT_DATE</ref>;</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structdirectory_entry_1a622bfa70c2cd9006108d7473d737a953" kindref="member">creationTime</ref><sp/>=<sp/><ref refid="_sd_fat_8h_1a00451fc2d3563a2255797bd1f40507fb" kindref="member">FAT_DEFAULT_TIME</ref>;</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/>p-&gt;<ref refid="structdirectory_entry_1abca70dc5c5fcbe199fd78df010111331" kindref="member">lastAccessDate</ref><sp/>=<sp/>p-&gt;<ref refid="structdirectory_entry_1a7b43372794655fe6604d3c17c02302fe" kindref="member">creationDate</ref>;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/>p-&gt;<ref refid="structdirectory_entry_1a12b2e7cf87482a942a0b5d3df6c51468" kindref="member">lastWriteDate</ref><sp/>=<sp/>p-&gt;<ref refid="structdirectory_entry_1a7b43372794655fe6604d3c17c02302fe" kindref="member">creationDate</ref>;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/>p-&gt;<ref refid="structdirectory_entry_1a7bab435322d1928f66fbce53ee1f402d" kindref="member">lastWriteTime</ref><sp/>=<sp/>p-&gt;<ref refid="structdirectory_entry_1a622bfa70c2cd9006108d7473d737a953" kindref="member">creationTime</ref>;</highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>force<sp/>write<sp/>of<sp/>entry<sp/>to<sp/>SD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!SdVolume::cacheFlush())<sp/>{</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>open<sp/>entry<sp/>in<sp/>cache</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>openCachedEntry(dirIndex_,<sp/>oflag);</highlight></codeline>
<codeline lineno="549"><highlight class="normal">}</highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="565"><highlight class="normal">uint8_t<sp/><ref refid="class_sd_file_1a9e211ac14784f48aebb213194336f8cc" kindref="member">SdFile::open</ref>(<ref refid="class_sd_file" kindref="compound">SdFile</ref>*<sp/>dirFile,<sp/>uint16_t<sp/>index,<sp/>uint8_t<sp/>oflag)<sp/>{</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>error<sp/>if<sp/>already<sp/>open</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_sd_file_1a54e1b9385c43c33dc83eaad6de0d33be" kindref="member">isOpen</ref>())<sp/>{</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>open<sp/>existing<sp/>file<sp/>if<sp/>O_CREAT<sp/>and<sp/>O_EXCL<sp/>-<sp/>user<sp/>call<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((oflag<sp/>&amp;<sp/>(<ref refid="_sd_fat_8h_1a20d0ef801486dd02de6ee482de731193" kindref="member">O_CREAT</ref><sp/>|<sp/><ref refid="_sd_fat_8h_1ab5635d4288cb294c1ed000fa183e072b" kindref="member">O_EXCL</ref>))<sp/>==<sp/>(<ref refid="_sd_fat_8h_1a20d0ef801486dd02de6ee482de731193" kindref="member">O_CREAT</ref><sp/>|<sp/><ref refid="_sd_fat_8h_1ab5635d4288cb294c1ed000fa183e072b" kindref="member">O_EXCL</ref>))<sp/>{</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/>vol_<sp/>=<sp/>dirFile-&gt;vol_;</highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>seek<sp/>to<sp/>location<sp/>of<sp/>entry</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!dirFile-&gt;<ref refid="class_sd_file_1a5b8ea0ba6a9fec1ee8f1b11e90edb0c6" kindref="member">seekSet</ref>(32<sp/>*<sp/>index))<sp/>{</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>read<sp/>entry<sp/>into<sp/>cache</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><ref refid="structdirectory_entry" kindref="compound">dir_t</ref>*<sp/>p<sp/>=<sp/>dirFile-&gt;readDirCache();</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>error<sp/>if<sp/>empty<sp/>slot<sp/>or<sp/>&apos;.&apos;<sp/>or<sp/>&apos;..&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p-&gt;<ref refid="structdirectory_entry_1a05dc993ea55a1a742de5970541a31ecb" kindref="member">name</ref>[0]<sp/>==<sp/><ref refid="_fat_structs_8h_1a23b2e4d06e245c778f4c52909cf97c76" kindref="member">DIR_NAME_FREE</ref><sp/>||</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="structdirectory_entry_1a05dc993ea55a1a742de5970541a31ecb" kindref="member">name</ref>[0]<sp/>==<sp/><ref refid="_fat_structs_8h_1a5de4ada3536d89559f6433e835e311da" kindref="member">DIR_NAME_DELETED</ref><sp/>||<sp/>p-&gt;<ref refid="structdirectory_entry_1a05dc993ea55a1a742de5970541a31ecb" kindref="member">name</ref>[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>open<sp/>cached<sp/>entry</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>openCachedEntry(index<sp/>&amp;<sp/>0XF,<sp/>oflag);</highlight></codeline>
<codeline lineno="596"><highlight class="normal">}</highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight><highlight class="comment">//<sp/>open<sp/>a<sp/>cached<sp/>directory<sp/>entry.<sp/>Assumes<sp/>vol_<sp/>is<sp/>initializes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal">uint8_t<sp/>SdFile::openCachedEntry(uint8_t<sp/>dirIndex,<sp/>uint8_t<sp/>oflag)<sp/>{</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>location<sp/>of<sp/>entry<sp/>in<sp/>cache</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><ref refid="structdirectory_entry" kindref="compound">dir_t</ref>*<sp/>p<sp/>=<sp/>SdVolume::cacheBuffer_.<ref refid="unioncache__t_1a7396fdbdb7c52bd1d72c5329ff32acd1" kindref="member">dir</ref><sp/>+<sp/><ref refid="class_sd_file_1ad4381e541a53a7e5cf51a866c1c8f79e" kindref="member">dirIndex</ref>;</highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>write<sp/>or<sp/>truncate<sp/>is<sp/>an<sp/>error<sp/>for<sp/>a<sp/>directory<sp/>or<sp/>read-only<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p-&gt;<ref refid="structdirectory_entry_1a16c6cde55c8175c90935c386f1cfb21a" kindref="member">attributes</ref><sp/>&amp;<sp/>(<ref refid="_fat_structs_8h_1abff82a1fd65417a032777e0821821640" kindref="member">DIR_ATT_READ_ONLY</ref><sp/>|<sp/><ref refid="_fat_structs_8h_1a3f9e7ceac3e0a9aebead998e88349139" kindref="member">DIR_ATT_DIRECTORY</ref>))<sp/>{</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(oflag<sp/>&amp;<sp/>(<ref refid="_sd_fat_8h_1a44c1620ada13f6318ab39b9fa38ef55a" kindref="member">O_WRITE</ref><sp/>|<sp/><ref refid="_sd_fat_8h_1a9dc438ff90d0c8af452331c339dbc08e" kindref="member">O_TRUNC</ref>))<sp/>{</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>remember<sp/>location<sp/>of<sp/>directory<sp/>entry<sp/>on<sp/>SD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/>dirIndex_<sp/>=<sp/><ref refid="class_sd_file_1ad4381e541a53a7e5cf51a866c1c8f79e" kindref="member">dirIndex</ref>;</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/>dirBlock_<sp/>=<sp/>SdVolume::cacheBlockNumber_;</highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>copy<sp/>first<sp/>cluster<sp/>number<sp/>for<sp/>directory<sp/>fields</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/>firstCluster_<sp/>=<sp/>(uint32_t)p-&gt;<ref refid="structdirectory_entry_1a3b492598b2b05e8425d2a500443613bd" kindref="member">firstClusterHigh</ref><sp/>&lt;&lt;<sp/>16;</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/>firstCluster_<sp/>|=<sp/>p-&gt;<ref refid="structdirectory_entry_1a74bd660417a9c3501eae353326c14bb9" kindref="member">firstClusterLow</ref>;</highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>sure<sp/>it<sp/>is<sp/>a<sp/>normal<sp/>file<sp/>or<sp/>subdirectory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(DIR_IS_FILE(p))<sp/>{</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/>fileSize_<sp/>=<sp/>p-&gt;<ref refid="structdirectory_entry_1ac2445d99b50f925f662952e0ccd26a02" kindref="member">fileSize</ref>;</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/>type_<sp/>=<sp/><ref refid="_sd_fat_8h_1a666774999b9afd627fdad75471101581" kindref="member">FAT_FILE_TYPE_NORMAL</ref>;</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(DIR_IS_SUBDIR(p))<sp/>{</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!vol_-&gt;chainSize(firstCluster_,<sp/>&amp;fileSize_))<sp/>{</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/>type_<sp/>=<sp/><ref refid="_sd_fat_8h_1ac301b0465fdd7953c6e110b9896cc9fd" kindref="member">FAT_FILE_TYPE_SUBDIR</ref>;</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>save<sp/>open<sp/>flags<sp/>for<sp/>read/write</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/>flags_<sp/>=<sp/>oflag<sp/>&amp;<sp/>(<ref refid="_sd_fat_8h_1a4efda39151f5ef2dc7fbd138be51336a" kindref="member">O_ACCMODE</ref><sp/>|<sp/><ref refid="_sd_fat_8h_1a3066c471d52b056dec13fa567f7bbd9d" kindref="member">O_SYNC</ref><sp/>|<sp/><ref refid="_sd_fat_8h_1a4242b37e810af3a6485adda0e08a9a2b" kindref="member">O_APPEND</ref>);</highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>to<sp/>start<sp/>of<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/>curCluster_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/>curPosition_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>truncate<sp/>file<sp/>to<sp/>zero<sp/>length<sp/>if<sp/>requested</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(oflag<sp/>&amp;<sp/><ref refid="_sd_fat_8h_1a9dc438ff90d0c8af452331c339dbc08e" kindref="member">O_TRUNC</ref>)<sp/>{</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_sd_file_1ade1e2b72f89b24f500502518fd678abd" kindref="member">truncate</ref>(0);</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="641"><highlight class="normal">}</highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="653"><highlight class="normal">uint8_t<sp/><ref refid="class_sd_file_1ac3612bc27eaf52a23d8cb85c8d96ad38" kindref="member">SdFile::openRoot</ref>(<ref refid="class_sd_volume" kindref="compound">SdVolume</ref>*<sp/>vol)<sp/>{</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>error<sp/>if<sp/>file<sp/>is<sp/>already<sp/>open</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_sd_file_1a54e1b9385c43c33dc83eaad6de0d33be" kindref="member">isOpen</ref>())<sp/>{</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vol-&gt;<ref refid="class_sd_volume_1a85adb29d404b08b1b58e9f105b60ea8d" kindref="member">fatType</ref>()<sp/>==<sp/>16)<sp/>{</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/>type_<sp/>=<sp/><ref refid="_sd_fat_8h_1a4c02ced3c57420e2a1997f51bd87d150" kindref="member">FAT_FILE_TYPE_ROOT16</ref>;</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/>firstCluster_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/>fileSize_<sp/>=<sp/>32<sp/>*<sp/>vol-&gt;<ref refid="class_sd_volume_1addfdd68b9d9f728ac29d38f78c3fbead" kindref="member">rootDirEntryCount</ref>();</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vol-&gt;<ref refid="class_sd_volume_1a85adb29d404b08b1b58e9f105b60ea8d" kindref="member">fatType</ref>()<sp/>==<sp/>32)<sp/>{</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/>type_<sp/>=<sp/><ref refid="_sd_fat_8h_1a9a1a07cb1d09cfdb3cc53183c6e5dc57" kindref="member">FAT_FILE_TYPE_ROOT32</ref>;</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/>firstCluster_<sp/>=<sp/>vol-&gt;<ref refid="class_sd_volume_1aeb10811341acc97f7ccda2394c777072" kindref="member">rootDirStart</ref>();</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!vol-&gt;chainSize(firstCluster_,<sp/>&amp;fileSize_))<sp/>{</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>volume<sp/>is<sp/>not<sp/>initialized<sp/>or<sp/>FAT12</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/>vol_<sp/>=<sp/>vol;</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>read<sp/>only</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/>flags_<sp/>=<sp/><ref refid="_sd_fat_8h_1ac5a1c3e543273b0374ba114c496e662e" kindref="member">O_READ</ref>;</highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>to<sp/>start<sp/>of<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/>curCluster_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/>curPosition_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>root<sp/>has<sp/>no<sp/>directory<sp/>entry</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/>dirBlock_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/>dirIndex_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="685"><highlight class="normal">}</highlight></codeline>
<codeline lineno="686"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="692"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_sd_file_1a7267e3def5cba51149ff98baf5d3f2c8" kindref="member">SdFile::printDirName</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structdirectory_entry" kindref="compound">dir_t</ref>&amp;<sp/>dir,<sp/>uint8_t<sp/>width)<sp/>{</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/>uint8_t<sp/>w<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint8_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>11;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dir.<ref refid="structdirectory_entry_1a05dc993ea55a1a742de5970541a31ecb" kindref="member">name</ref>[i]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>8)<sp/>{</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(</highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>w++;</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.write(dir.<ref refid="structdirectory_entry_1a05dc993ea55a1a742de5970541a31ecb" kindref="member">name</ref>[i]);</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/>w++;</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(DIR_IS_SUBDIR(&amp;dir))<sp/>{</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.print(</highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/>w++;</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(w<sp/>&lt;<sp/>width)<sp/>{</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.print(</highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/>w++;</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="713"><highlight class="normal">}</highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="721"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_sd_file_1a77022a204f3e5148e78e1b7ae7b6865a" kindref="member">SdFile::printFatDate</ref>(uint16_t<sp/>fatDate)<sp/>{</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/>Serial.print(FAT_YEAR(fatDate));</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/>Serial.print(</highlight><highlight class="charliteral">&apos;-&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><ref refid="class_sd_file_1a0af47048953a2d1526db9336c39a8919" kindref="member">printTwoDigits</ref>(FAT_MONTH(fatDate));</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/>Serial.print(</highlight><highlight class="charliteral">&apos;-&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><ref refid="class_sd_file_1a0af47048953a2d1526db9336c39a8919" kindref="member">printTwoDigits</ref>(FAT_DAY(fatDate));</highlight></codeline>
<codeline lineno="727"><highlight class="normal">}</highlight></codeline>
<codeline lineno="728"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="735"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_sd_file_1ab981ea789ec76d1a44e4b3c8a84ccd35" kindref="member">SdFile::printFatTime</ref>(uint16_t<sp/>fatTime)<sp/>{</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><ref refid="class_sd_file_1a0af47048953a2d1526db9336c39a8919" kindref="member">printTwoDigits</ref>(FAT_HOUR(fatTime));</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/>Serial.print(</highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><ref refid="class_sd_file_1a0af47048953a2d1526db9336c39a8919" kindref="member">printTwoDigits</ref>(FAT_MINUTE(fatTime));</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/>Serial.print(</highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><ref refid="class_sd_file_1a0af47048953a2d1526db9336c39a8919" kindref="member">printTwoDigits</ref>(FAT_SECOND(fatTime));</highlight></codeline>
<codeline lineno="741"><highlight class="normal">}</highlight></codeline>
<codeline lineno="742"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="747"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_sd_file_1a0af47048953a2d1526db9336c39a8919" kindref="member">SdFile::printTwoDigits</ref>(uint8_t<sp/>v)<sp/>{</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>str[3];</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/>str[0]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal"><sp/>+<sp/>v<sp/>/<sp/>10;</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/>str[1]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal"><sp/>+<sp/>v<sp/>%<sp/>10;</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/>str[2]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/>Serial.print(str);</highlight></codeline>
<codeline lineno="753"><highlight class="normal">}</highlight></codeline>
<codeline lineno="754"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="769"><highlight class="normal">int16_t<sp/><ref refid="class_sd_file_1a6c389f0180b4a86fb6d7464f50d3b0dd" kindref="member">SdFile::read</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>buf,<sp/>uint16_t<sp/>nbyte)<sp/>{</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/>uint8_t*<sp/>dst<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">uint8_t*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(buf);</highlight></codeline>
<codeline lineno="771"><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>error<sp/>if<sp/>not<sp/>open<sp/>or<sp/>write<sp/>only</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_sd_file_1a54e1b9385c43c33dc83eaad6de0d33be" kindref="member">isOpen</ref>()<sp/>||<sp/>!(flags_<sp/>&amp;<sp/><ref refid="_sd_fat_8h_1ac5a1c3e543273b0374ba114c496e662e" kindref="member">O_READ</ref>))<sp/>{</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="776"><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>max<sp/>bytes<sp/>left<sp/>in<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nbyte<sp/>&gt;<sp/>(fileSize_<sp/>-<sp/>curPosition_))<sp/>{</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/>nbyte<sp/>=<sp/>fileSize_<sp/>-<sp/>curPosition_;</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="781"><highlight class="normal"></highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>amount<sp/>left<sp/>to<sp/>read</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/>uint16_t<sp/>toRead<sp/>=<sp/>nbyte;</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(toRead<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>block;<sp/><sp/></highlight><highlight class="comment">//<sp/>raw<sp/>device<sp/>block<sp/>number</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>offset<sp/>=<sp/>curPosition_<sp/>&amp;<sp/>0X1FF;<sp/><sp/></highlight><highlight class="comment">//<sp/>offset<sp/>in<sp/>block</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type_<sp/>==<sp/><ref refid="_sd_fat_8h_1a4c02ced3c57420e2a1997f51bd87d150" kindref="member">FAT_FILE_TYPE_ROOT16</ref>)<sp/>{</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>block<sp/>=<sp/>vol_-&gt;<ref refid="class_sd_volume_1aeb10811341acc97f7ccda2394c777072" kindref="member">rootDirStart</ref>()<sp/>+<sp/>(curPosition_<sp/>&gt;&gt;<sp/>9);</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>blockOfCluster<sp/>=<sp/>vol_-&gt;blockOfCluster(curPosition_);</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(offset<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>blockOfCluster<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>start<sp/>of<sp/>new<sp/>cluster</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(curPosition_<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>use<sp/>first<sp/>cluster<sp/>in<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>curCluster_<sp/>=<sp/>firstCluster_;</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>next<sp/>cluster<sp/>from<sp/>FAT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!vol_-&gt;fatGet(curCluster_,<sp/>&amp;curCluster_))<sp/>{</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>block<sp/>=<sp/>vol_-&gt;clusterStartBlock(curCluster_)<sp/>+<sp/>blockOfCluster;</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>n<sp/>=<sp/>toRead;</highlight></codeline>
<codeline lineno="806"><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>amount<sp/>to<sp/>be<sp/>read<sp/>from<sp/>current<sp/>block</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&gt;<sp/>(512<sp/>-<sp/>offset))<sp/>{</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>512<sp/>-<sp/>offset;</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="811"><highlight class="normal"></highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>buffering<sp/>needed<sp/>if<sp/>n<sp/>==<sp/>512<sp/>or<sp/>user<sp/>requests<sp/>no<sp/>buffering</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="class_sd_file_1a151bbc9fa7787b67f3d4a3574f9bc9e3" kindref="member">unbufferedRead</ref>()<sp/>||<sp/>n<sp/>==<sp/>512)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block<sp/>!=<sp/>SdVolume::cacheBlockNumber_)<sp/>{</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!vol_-&gt;readData(block,<sp/>offset,<sp/>n,<sp/>dst))<sp/>{</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dst<sp/>+=<sp/>n;</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>read<sp/>block<sp/>to<sp/>cache<sp/>and<sp/>copy<sp/>data<sp/>to<sp/>caller</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!SdVolume::cacheRawBlock(block,<sp/>SdVolume::CACHE_FOR_READ))<sp/>{</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t*<sp/>src<sp/>=<sp/>SdVolume::cacheBuffer_.<ref refid="unioncache__t_1ae675b7a3a87d809070de111d1d1f1d81" kindref="member">data</ref><sp/>+<sp/>offset;</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t*<sp/>end<sp/>=<sp/>src<sp/>+<sp/>n;</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(src<sp/>!=<sp/>end)<sp/>{</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*dst++<sp/>=<sp/>*src++;</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/>curPosition_<sp/>+=<sp/>n;</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/>toRead<sp/>-=<sp/>n;</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nbyte;</highlight></codeline>
<codeline lineno="834"><highlight class="normal">}</highlight></codeline>
<codeline lineno="835"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="847"><highlight class="normal">int8_t<sp/><ref refid="class_sd_file_1ab240540b099cedcfe8b93b5e853d0628" kindref="member">SdFile::readDir</ref>(<ref refid="structdirectory_entry" kindref="compound">dir_t</ref>*<sp/>dir)<sp/>{</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/>int8_t<sp/>n;</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>not<sp/>a<sp/>directory<sp/>file<sp/>or<sp/>miss-positioned<sp/>return<sp/>an<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_sd_file_1a564e69a08c11f20e66eb18c38e24b748" kindref="member">isDir</ref>()<sp/>||<sp/>(0X1F<sp/>&amp;<sp/>curPosition_))<sp/>{</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="853"><highlight class="normal"></highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((n<sp/>=<sp/><ref refid="class_sd_file_1a6c389f0180b4a86fb6d7464f50d3b0dd" kindref="member">read</ref>(dir,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structdirectory_entry" kindref="compound">dir_t</ref>)))<sp/>==<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structdirectory_entry" kindref="compound">dir_t</ref>))<sp/>{</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>last<sp/>entry<sp/>if<sp/>DIR_NAME_FREE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dir-&gt;<ref refid="structdirectory_entry_1a05dc993ea55a1a742de5970541a31ecb" kindref="member">name</ref>[0]<sp/>==<sp/><ref refid="_fat_structs_8h_1a23b2e4d06e245c778f4c52909cf97c76" kindref="member">DIR_NAME_FREE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>skip<sp/>empty<sp/>entries<sp/>and<sp/>entry<sp/>for<sp/>.<sp/><sp/>and<sp/>..</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dir-&gt;<ref refid="structdirectory_entry_1a05dc993ea55a1a742de5970541a31ecb" kindref="member">name</ref>[0]<sp/>==<sp/><ref refid="_fat_structs_8h_1a5de4ada3536d89559f6433e835e311da" kindref="member">DIR_NAME_DELETED</ref><sp/>||<sp/>dir-&gt;<ref refid="structdirectory_entry_1a05dc993ea55a1a742de5970541a31ecb" kindref="member">name</ref>[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>if<sp/>normal<sp/>file<sp/>or<sp/>subdirectory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(DIR_IS_FILE_OR_SUBDIR(dir))<sp/>{</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>error,<sp/>end<sp/>of<sp/>file,<sp/>or<sp/>past<sp/>last<sp/>entry</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>n<sp/>&lt;<sp/>0<sp/>?<sp/>-1<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="870"><highlight class="normal">}</highlight></codeline>
<codeline lineno="871"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="872"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Read<sp/>next<sp/>directory<sp/>entry<sp/>into<sp/>the<sp/>cache</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="873"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Assumes<sp/>file<sp/>is<sp/>correctly<sp/>positioned</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="874"><highlight class="normal"><ref refid="structdirectory_entry" kindref="compound">dir_t</ref>*<sp/>SdFile::readDirCache(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>error<sp/>if<sp/>not<sp/>directory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_sd_file_1a564e69a08c11f20e66eb18c38e24b748" kindref="member">isDir</ref>())<sp/>{</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="879"><highlight class="normal"></highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>index<sp/>of<sp/>entry<sp/>in<sp/>cache</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/>uint8_t<sp/>i<sp/>=<sp/>(curPosition_<sp/>&gt;&gt;<sp/>5)<sp/>&amp;<sp/>0XF;</highlight></codeline>
<codeline lineno="882"><highlight class="normal"></highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>use<sp/>read<sp/>to<sp/>locate<sp/>and<sp/>cache<sp/>block</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_sd_file_1a6c389f0180b4a86fb6d7464f50d3b0dd" kindref="member">read</ref>()<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="887"><highlight class="normal"></highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>advance<sp/>to<sp/>next<sp/>entry</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/>curPosition_<sp/>+=<sp/>31;</highlight></codeline>
<codeline lineno="890"><highlight class="normal"></highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>pointer<sp/>to<sp/>entry</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(SdVolume::cacheBuffer_.dir<sp/>+<sp/>i);</highlight></codeline>
<codeline lineno="893"><highlight class="normal">}</highlight></codeline>
<codeline lineno="894"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="909"><highlight class="normal">uint8_t<sp/><ref refid="class_sd_file_1a66c5fb5f651a1ac319bab68fda1d3cc2" kindref="member">SdFile::remove</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>free<sp/>any<sp/>clusters<sp/>-<sp/>will<sp/>fail<sp/>if<sp/>read-only<sp/>or<sp/>directory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_sd_file_1ade1e2b72f89b24f500502518fd678abd" kindref="member">truncate</ref>(0))<sp/>{</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="914"><highlight class="normal"></highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>cache<sp/>directory<sp/>entry</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><ref refid="structdirectory_entry" kindref="compound">dir_t</ref>*<sp/>d<sp/>=<sp/>cacheDirEntry(SdVolume::CACHE_FOR_WRITE);</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!d)<sp/>{</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="920"><highlight class="normal"></highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>mark<sp/>entry<sp/>deleted</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/>d-&gt;name[0]<sp/>=<sp/><ref refid="_fat_structs_8h_1a5de4ada3536d89559f6433e835e311da" kindref="member">DIR_NAME_DELETED</ref>;</highlight></codeline>
<codeline lineno="923"><highlight class="normal"></highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>this<sp/>SdFile<sp/>closed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/>type_<sp/>=<sp/><ref refid="_sd_fat_8h_1a4da8c96e256b06356321e81705494010" kindref="member">FAT_FILE_TYPE_CLOSED</ref>;</highlight></codeline>
<codeline lineno="926"><highlight class="normal"></highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>write<sp/>entry<sp/>to<sp/>SD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SdVolume::cacheFlush();</highlight></codeline>
<codeline lineno="929"><highlight class="normal">}</highlight></codeline>
<codeline lineno="930"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="949"><highlight class="normal">uint8_t<sp/><ref refid="class_sd_file_1a66c5fb5f651a1ac319bab68fda1d3cc2" kindref="member">SdFile::remove</ref>(<ref refid="class_sd_file" kindref="compound">SdFile</ref>*<sp/>dirFile,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>fileName)<sp/>{</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><ref refid="class_sd_file" kindref="compound">SdFile</ref><sp/>file;</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!file.<ref refid="class_sd_file_1a9e211ac14784f48aebb213194336f8cc" kindref="member">open</ref>(dirFile,<sp/>fileName,<sp/><ref refid="_sd_fat_8h_1a44c1620ada13f6318ab39b9fa38ef55a" kindref="member">O_WRITE</ref>))<sp/>{</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>file.<ref refid="class_sd_file_1ab932b7896dce90a29031f3a9039807a2" kindref="member">remove</ref>();</highlight></codeline>
<codeline lineno="955"><highlight class="normal">}</highlight></codeline>
<codeline lineno="956"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="972"><highlight class="normal">uint8_t<sp/><ref refid="class_sd_file_1a0d9e0c280b3469bb15e7258f6339746b" kindref="member">SdFile::rmDir</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>must<sp/>be<sp/>open<sp/>subdirectory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_sd_file_1a22fb79f645f5a92baf699d547395667b" kindref="member">isSubDir</ref>())<sp/>{</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="977"><highlight class="normal"></highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><ref refid="class_sd_file_1afa8aaa7bdeb97b4e691ea01adf99f654" kindref="member">rewind</ref>();</highlight></codeline>
<codeline lineno="979"><highlight class="normal"></highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>sure<sp/>directory<sp/>is<sp/>empty</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(curPosition_<sp/>&lt;<sp/>fileSize_)<sp/>{</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdirectory_entry" kindref="compound">dir_t</ref>*<sp/>p<sp/>=<sp/>readDirCache();</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>done<sp/>if<sp/>past<sp/>last<sp/>used<sp/>entry</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p-&gt;<ref refid="structdirectory_entry_1a05dc993ea55a1a742de5970541a31ecb" kindref="member">name</ref>[0]<sp/>==<sp/><ref refid="_fat_structs_8h_1a23b2e4d06e245c778f4c52909cf97c76" kindref="member">DIR_NAME_FREE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>skip<sp/>empty<sp/>slot<sp/>or<sp/>&apos;.&apos;<sp/>or<sp/>&apos;..&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p-&gt;<ref refid="structdirectory_entry_1a05dc993ea55a1a742de5970541a31ecb" kindref="member">name</ref>[0]<sp/>==<sp/><ref refid="_fat_structs_8h_1a5de4ada3536d89559f6433e835e311da" kindref="member">DIR_NAME_DELETED</ref><sp/>||<sp/>p-&gt;<ref refid="structdirectory_entry_1a05dc993ea55a1a742de5970541a31ecb" kindref="member">name</ref>[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>error<sp/>not<sp/>empty</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(DIR_IS_FILE_OR_SUBDIR(p))<sp/>{</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>convert<sp/>empty<sp/>directory<sp/>to<sp/>normal<sp/>file<sp/>for<sp/>remove</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/>type_<sp/>=<sp/><ref refid="_sd_fat_8h_1a666774999b9afd627fdad75471101581" kindref="member">FAT_FILE_TYPE_NORMAL</ref>;</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/>flags_<sp/>|=<sp/><ref refid="_sd_fat_8h_1a44c1620ada13f6318ab39b9fa38ef55a" kindref="member">O_WRITE</ref>;</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_sd_file_1a66c5fb5f651a1ac319bab68fda1d3cc2" kindref="member">remove</ref>();</highlight></codeline>
<codeline lineno="1003"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="1020"><highlight class="normal">uint8_t<sp/><ref refid="class_sd_file_1a44c26fddfe2b42e7db3bc80290c77503" kindref="member">SdFile::rmRfStar</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><ref refid="class_sd_file_1afa8aaa7bdeb97b4e691ea01adf99f654" kindref="member">rewind</ref>();</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(curPosition_<sp/>&lt;<sp/>fileSize_)<sp/>{</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_sd_file" kindref="compound">SdFile</ref><sp/>f;</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"></highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>remember<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>index<sp/>=<sp/>curPosition_<sp/>/<sp/>32;</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"></highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdirectory_entry" kindref="compound">dir_t</ref>*<sp/>p<sp/>=<sp/>readDirCache();</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!p)<sp/>{</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"></highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>done<sp/>if<sp/>past<sp/>last<sp/>entry</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p-&gt;<ref refid="structdirectory_entry_1a05dc993ea55a1a742de5970541a31ecb" kindref="member">name</ref>[0]<sp/>==<sp/><ref refid="_fat_structs_8h_1a23b2e4d06e245c778f4c52909cf97c76" kindref="member">DIR_NAME_FREE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"></highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>skip<sp/>empty<sp/>slot<sp/>or<sp/>&apos;.&apos;<sp/>or<sp/>&apos;..&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p-&gt;<ref refid="structdirectory_entry_1a05dc993ea55a1a742de5970541a31ecb" kindref="member">name</ref>[0]<sp/>==<sp/><ref refid="_fat_structs_8h_1a5de4ada3536d89559f6433e835e311da" kindref="member">DIR_NAME_DELETED</ref><sp/>||<sp/>p-&gt;<ref refid="structdirectory_entry_1a05dc993ea55a1a742de5970541a31ecb" kindref="member">name</ref>[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"></highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>skip<sp/>if<sp/>part<sp/>of<sp/>long<sp/>file<sp/>name<sp/>or<sp/>volume<sp/>label<sp/>in<sp/>root</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!DIR_IS_FILE_OR_SUBDIR(p))<sp/>{</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"></highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!f.<ref refid="class_sd_file_1a9e211ac14784f48aebb213194336f8cc" kindref="member">open</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>index,<sp/><ref refid="_sd_fat_8h_1ac5a1c3e543273b0374ba114c496e662e" kindref="member">O_READ</ref>))<sp/>{</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(f.<ref refid="class_sd_file_1a22fb79f645f5a92baf699d547395667b" kindref="member">isSubDir</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>recursively<sp/>delete</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!f.<ref refid="class_sd_file_1a44c26fddfe2b42e7db3bc80290c77503" kindref="member">rmRfStar</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ignore<sp/>read-only</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>f.flags_<sp/>|=<sp/><ref refid="_sd_fat_8h_1a44c1620ada13f6318ab39b9fa38ef55a" kindref="member">O_WRITE</ref>;</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!f.<ref refid="class_sd_file_1ab932b7896dce90a29031f3a9039807a2" kindref="member">remove</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>position<sp/>to<sp/>next<sp/>entry<sp/>if<sp/>required</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(curPosition_<sp/>!=<sp/>(32u<sp/>*<sp/>(index<sp/>+<sp/>1)))<sp/>{</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_sd_file_1a5b8ea0ba6a9fec1ee8f1b11e90edb0c6" kindref="member">seekSet</ref>(32u<sp/>*<sp/>(index<sp/>+<sp/>1)))<sp/>{</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>try<sp/>to<sp/>delete<sp/>root</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_sd_file_1a29fd6e80e6cbd3c67724988f9fe02290" kindref="member">isRoot</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_sd_file_1a0d9e0c280b3469bb15e7258f6339746b" kindref="member">rmDir</ref>();</highlight></codeline>
<codeline lineno="1075"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="1085"><highlight class="normal">uint8_t<sp/><ref refid="class_sd_file_1a5b8ea0ba6a9fec1ee8f1b11e90edb0c6" kindref="member">SdFile::seekSet</ref>(uint32_t<sp/>pos)<sp/>{</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>error<sp/>if<sp/>file<sp/>not<sp/>open<sp/>or<sp/>seek<sp/>past<sp/>end<sp/>of<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_sd_file_1a54e1b9385c43c33dc83eaad6de0d33be" kindref="member">isOpen</ref>()<sp/>||<sp/>pos<sp/>&gt;<sp/>fileSize_)<sp/>{</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"></highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type_<sp/>==<sp/><ref refid="_sd_fat_8h_1a4c02ced3c57420e2a1997f51bd87d150" kindref="member">FAT_FILE_TYPE_ROOT16</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/>curPosition_<sp/>=<sp/>pos;</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pos<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>position<sp/>to<sp/>start<sp/>of<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/>curCluster_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/>curPosition_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>calculate<sp/>cluster<sp/>index<sp/>for<sp/>cur<sp/>and<sp/>new<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/>uint32_t<sp/>nCur<sp/>=<sp/>(curPosition_<sp/>-<sp/>1)<sp/>&gt;&gt;<sp/>(vol_-&gt;clusterSizeShift_<sp/>+<sp/>9);</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/>uint32_t<sp/>nNew<sp/>=<sp/>(pos<sp/>-<sp/>1)<sp/>&gt;&gt;<sp/>(vol_-&gt;clusterSizeShift_<sp/>+<sp/>9);</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"></highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nNew<sp/>&lt;<sp/>nCur<sp/>||<sp/>curPosition_<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>must<sp/>follow<sp/>chain<sp/>from<sp/>first<sp/>cluster</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/>curCluster_<sp/>=<sp/>firstCluster_;</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>advance<sp/>from<sp/>curPosition</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/>nNew<sp/>-=<sp/>nCur;</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(nNew--)<sp/>{</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!vol_-&gt;fatGet(curCluster_,<sp/>&amp;curCluster_))<sp/>{</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/>curPosition_<sp/>=<sp/>pos;</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1119"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="1132"><highlight class="normal">uint8_t<sp/><ref refid="class_sd_file_1a42f006b16e686ee164e6d7df41fc94cd" kindref="member">SdFile::sync</ref>(uint8_t<sp/>blocking)<sp/>{</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>only<sp/>allow<sp/>open<sp/>files<sp/>and<sp/>directories</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_sd_file_1a54e1b9385c43c33dc83eaad6de0d33be" kindref="member">isOpen</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"></highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags_<sp/>&amp;<sp/>F_FILE_DIR_DIRTY)<sp/>{</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdirectory_entry" kindref="compound">dir_t</ref>*<sp/>d<sp/>=<sp/>cacheDirEntry(SdVolume::CACHE_FOR_WRITE);</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!d)<sp/>{</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"></highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>do<sp/>not<sp/>set<sp/>filesize<sp/>for<sp/>dir<sp/>files</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_sd_file_1a564e69a08c11f20e66eb18c38e24b748" kindref="member">isDir</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;fileSize<sp/>=<sp/>fileSize_;</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"></highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>first<sp/>cluster<sp/>fields</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;firstClusterLow<sp/>=<sp/>firstCluster_<sp/>&amp;<sp/>0XFFFF;</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;firstClusterHigh<sp/>=<sp/>firstCluster_<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"></highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>modify<sp/>time<sp/>if<sp/>user<sp/>supplied<sp/>a<sp/>callback<sp/>date/time<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dateTime_)<sp/>{</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dateTime_(&amp;d-&gt;lastWriteDate,<sp/>&amp;d-&gt;lastWriteTime);</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;lastAccessDate<sp/>=<sp/>d-&gt;lastWriteDate;</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clear<sp/>directory<sp/>dirty</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/>flags_<sp/>&amp;=<sp/>~F_FILE_DIR_DIRTY;</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"></highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!blocking)<sp/>{</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/>flags_<sp/>&amp;=<sp/>~F_FILE_NON_BLOCKING_WRITE;</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"></highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SdVolume::cacheFlush(blocking);</highlight></codeline>
<codeline lineno="1167"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="1203"><highlight class="normal">uint8_t<sp/><ref refid="class_sd_file_1a249632ba9580c556c0b041d6b2aaf224" kindref="member">SdFile::timestamp</ref>(uint8_t<sp/>flags,<sp/>uint16_t<sp/>year,<sp/>uint8_t<sp/>month,</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>day,<sp/>uint8_t<sp/>hour,<sp/>uint8_t<sp/>minute,<sp/>uint8_t<sp/>second)<sp/>{</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_sd_file_1a54e1b9385c43c33dc83eaad6de0d33be" kindref="member">isOpen</ref>()</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>year<sp/>&lt;<sp/>1980</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>year<sp/>&gt;<sp/>2107</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>month<sp/>&lt;<sp/>1</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>month<sp/>&gt;<sp/>12</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>day<sp/>&lt;<sp/>1</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>day<sp/>&gt;<sp/>31</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>hour<sp/>&gt;<sp/>23</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>minute<sp/>&gt;<sp/>59</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>second<sp/>&gt;<sp/>59)<sp/>{</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><ref refid="structdirectory_entry" kindref="compound">dir_t</ref>*<sp/>d<sp/>=<sp/>cacheDirEntry(SdVolume::CACHE_FOR_WRITE);</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!d)<sp/>{</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"></highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/>uint16_t<sp/>dirDate<sp/>=<sp/>FAT_DATE(year,<sp/>month,<sp/>day);</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/>uint16_t<sp/>dirTime<sp/>=<sp/>FAT_TIME(hour,<sp/>minute,<sp/>second);</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>&amp;<sp/><ref refid="_sd_fat_8h_1a5f34ce6e95713d872ca6a640c8783462" kindref="member">T_ACCESS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;lastAccessDate<sp/>=<sp/>dirDate;</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>&amp;<sp/><ref refid="_sd_fat_8h_1a533dc316f5a59209ac5e9c630d2df4c4" kindref="member">T_CREATE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;creationDate<sp/>=<sp/>dirDate;</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;creationTime<sp/>=<sp/>dirTime;</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>seems<sp/>to<sp/>be<sp/>units<sp/>of<sp/>1/100<sp/>second<sp/>not<sp/>1/10<sp/>as<sp/>Microsoft<sp/>states</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;creationTimeTenths<sp/>=<sp/>second<sp/>&amp;<sp/>1<sp/>?<sp/>100<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>&amp;<sp/><ref refid="_sd_fat_8h_1a2a6192fd0f5847783868deed6de53d1e" kindref="member">T_WRITE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;lastWriteDate<sp/>=<sp/>dirDate;</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;lastWriteTime<sp/>=<sp/>dirTime;</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/>SdVolume::cacheSetDirty();</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_sd_file_1a42f006b16e686ee164e6d7df41fc94cd" kindref="member">sync</ref>();</highlight></codeline>
<codeline lineno="1239"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="1253"><highlight class="normal">uint8_t<sp/><ref refid="class_sd_file_1ade1e2b72f89b24f500502518fd678abd" kindref="member">SdFile::truncate</ref>(uint32_t<sp/>length)<sp/>{</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>error<sp/>if<sp/>not<sp/>a<sp/>normal<sp/>file<sp/>or<sp/>read-only</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_sd_file_1ad9ca9b2b519a933c25e8f893ee0201b6" kindref="member">isFile</ref>()<sp/>||<sp/>!(flags_<sp/>&amp;<sp/><ref refid="_sd_fat_8h_1a44c1620ada13f6318ab39b9fa38ef55a" kindref="member">O_WRITE</ref>))<sp/>{</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"></highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>error<sp/>if<sp/>length<sp/>is<sp/>greater<sp/>than<sp/>current<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(length<sp/>&gt;<sp/>fileSize_)<sp/>{</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"></highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>fileSize<sp/>and<sp/>length<sp/>are<sp/>zero<sp/>-<sp/>nothing<sp/>to<sp/>do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fileSize_<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"></highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>remember<sp/>position<sp/>for<sp/>seek<sp/>after<sp/>truncation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/>uint32_t<sp/>newPos<sp/>=<sp/>curPosition_<sp/>&gt;<sp/>length<sp/>?<sp/>length<sp/>:<sp/>curPosition_;</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"></highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>position<sp/>to<sp/>last<sp/>cluster<sp/>in<sp/>truncated<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_sd_file_1a5b8ea0ba6a9fec1ee8f1b11e90edb0c6" kindref="member">seekSet</ref>(length))<sp/>{</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"></highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(length<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>free<sp/>all<sp/>clusters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!vol_-&gt;freeChain(firstCluster_))<sp/>{</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/><sp/>firstCluster_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>toFree;</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!vol_-&gt;fatGet(curCluster_,<sp/>&amp;toFree))<sp/>{</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"></highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!vol_-&gt;isEOC(toFree))<sp/>{</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>free<sp/>extra<sp/>clusters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!vol_-&gt;freeChain(toFree))<sp/>{</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"></highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>current<sp/>cluster<sp/>is<sp/>end<sp/>of<sp/>chain</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!vol_-&gt;fatPutEOC(curCluster_))<sp/>{</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/>fileSize_<sp/>=<sp/>length;</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"></highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>need<sp/>to<sp/>update<sp/>directory<sp/>entry</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/>flags_<sp/>|=<sp/>F_FILE_DIR_DIRTY;</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"></highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_sd_file_1a42f006b16e686ee164e6d7df41fc94cd" kindref="member">sync</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"></highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>file<sp/>to<sp/>correct<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_sd_file_1a5b8ea0ba6a9fec1ee8f1b11e90edb0c6" kindref="member">seekSet</ref>(newPos);</highlight></codeline>
<codeline lineno="1312"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="1330"><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_sd_file_1a67267a4b63d03a16e099195935613006" kindref="member">SdFile::write</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>buf,<sp/>uint16_t<sp/>nbyte)<sp/>{</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>convert<sp/>void*<sp/>to<sp/>uint8_t*<sp/><sp/>-<sp/><sp/>must<sp/>be<sp/>before<sp/>goto<sp/>statements</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t*<sp/>src<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">uint8_t*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(buf);</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"></highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>bytes<sp/>left<sp/>to<sp/>write<sp/><sp/>-<sp/><sp/>must<sp/>be<sp/>before<sp/>goto<sp/>statements</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/>uint16_t<sp/>nToWrite<sp/>=<sp/>nbyte;</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>blocking<sp/>writes<sp/>should<sp/>be<sp/>used</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/>uint8_t<sp/>blocking<sp/>=<sp/>(flags_<sp/>&amp;<sp/>F_FILE_NON_BLOCKING_WRITE)<sp/>==<sp/>0x00;</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"></highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>error<sp/>if<sp/>not<sp/>a<sp/>normal<sp/>file<sp/>or<sp/>is<sp/>read-only</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_sd_file_1ad9ca9b2b519a933c25e8f893ee0201b6" kindref="member">isFile</ref>()<sp/>||<sp/>!(flags_<sp/>&amp;<sp/><ref refid="_sd_fat_8h_1a44c1620ada13f6318ab39b9fa38ef55a" kindref="member">O_WRITE</ref>))<sp/>{</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>writeErrorReturn;</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"></highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>seek<sp/>to<sp/>end<sp/>of<sp/>file<sp/>if<sp/>append<sp/>flag</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((flags_<sp/>&amp;<sp/><ref refid="_sd_fat_8h_1a4242b37e810af3a6485adda0e08a9a2b" kindref="member">O_APPEND</ref>)<sp/>&amp;&amp;<sp/>curPosition_<sp/>!=<sp/>fileSize_)<sp/>{</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_sd_file_1afa70bc7ba5eb789aee1b62fc5fafaa5b" kindref="member">seekEnd</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>writeErrorReturn;</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"></highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(nToWrite<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>blockOfCluster<sp/>=<sp/>vol_-&gt;blockOfCluster(curPosition_);</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>blockOffset<sp/>=<sp/>curPosition_<sp/>&amp;<sp/>0X1FF;</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockOfCluster<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>blockOffset<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>start<sp/>of<sp/>new<sp/>cluster</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(curCluster_<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(firstCluster_<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>allocate<sp/>first<sp/>cluster<sp/>of<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!addCluster())<sp/>{</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>writeErrorReturn;</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>curCluster_<sp/>=<sp/>firstCluster_;</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>next;</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!vol_-&gt;fatGet(curCluster_,<sp/>&amp;next))<sp/>{</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vol_-&gt;isEOC(next))<sp/>{</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>cluster<sp/>if<sp/>at<sp/>end<sp/>of<sp/>chain</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!addCluster())<sp/>{</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>writeErrorReturn;</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>curCluster_<sp/>=<sp/>next;</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>max<sp/>space<sp/>in<sp/>block</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>n<sp/>=<sp/>512<sp/>-<sp/>blockOffset;</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"></highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>lesser<sp/>of<sp/>space<sp/>and<sp/>amount<sp/>to<sp/>write</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&gt;<sp/>nToWrite)<sp/>{</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>nToWrite;</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"></highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>block<sp/>for<sp/>data<sp/>write</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>block<sp/>=<sp/>vol_-&gt;clusterStartBlock(curCluster_)<sp/>+<sp/>blockOfCluster;</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>==<sp/>512)<sp/>{</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>full<sp/>block<sp/>-<sp/>don&apos;t<sp/>need<sp/>to<sp/>use<sp/>cache</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>invalidate<sp/>cache<sp/>if<sp/>block<sp/>is<sp/>in<sp/>cache</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(SdVolume::cacheBlockNumber_<sp/>==<sp/>block)<sp/>{</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SdVolume::cacheBlockNumber_<sp/>=<sp/>0XFFFFFFFF;</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!vol_-&gt;writeBlock(block,<sp/>src,<sp/>blocking))<sp/>{</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>writeErrorReturn;</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>src<sp/>+=<sp/>512;</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockOffset<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>curPosition_<sp/>&gt;=<sp/>fileSize_)<sp/>{</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>start<sp/>of<sp/>new<sp/>block<sp/>don&apos;t<sp/>need<sp/>to<sp/>read<sp/>into<sp/>cache</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!SdVolume::cacheFlush())<sp/>{</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>writeErrorReturn;</highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SdVolume::cacheBlockNumber_<sp/>=<sp/>block;</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SdVolume::cacheSetDirty();</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>rewrite<sp/>part<sp/>of<sp/>block</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!SdVolume::cacheRawBlock(block,<sp/>SdVolume::CACHE_FOR_WRITE))<sp/>{</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>writeErrorReturn;</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t*<sp/>dst<sp/>=<sp/>SdVolume::cacheBuffer_.<ref refid="unioncache__t_1ae675b7a3a87d809070de111d1d1f1d81" kindref="member">data</ref><sp/>+<sp/>blockOffset;</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t*<sp/>end<sp/>=<sp/>dst<sp/>+<sp/>n;</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(dst<sp/>!=<sp/>end)<sp/>{</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*dst++<sp/>=<sp/>*src++;</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/><sp/><sp/>nToWrite<sp/>-=<sp/>n;</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/><sp/><sp/>curPosition_<sp/>+=<sp/>n;</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(curPosition_<sp/>&gt;<sp/>fileSize_)<sp/>{</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>fileSize<sp/>and<sp/>insure<sp/>sync<sp/>will<sp/>update<sp/>dir<sp/>entry</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/><sp/><sp/>fileSize_<sp/>=<sp/>curPosition_;</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/><sp/><sp/>flags_<sp/>|=<sp/>F_FILE_DIR_DIRTY;</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dateTime_<sp/>&amp;&amp;<sp/>nbyte)<sp/>{</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>insure<sp/>sync<sp/>will<sp/>update<sp/>modified<sp/>date<sp/>and<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><sp/><sp/>flags_<sp/>|=<sp/>F_FILE_DIR_DIRTY;</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"></highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags_<sp/>&amp;<sp/><ref refid="_sd_fat_8h_1a3066c471d52b056dec13fa567f7bbd9d" kindref="member">O_SYNC</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_sd_file_1a42f006b16e686ee164e6d7df41fc94cd" kindref="member">sync</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>writeErrorReturn;</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nbyte;</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"></highlight></codeline>
<codeline lineno="1439"><highlight class="normal">writeErrorReturn:</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>for<sp/>write<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//writeError<sp/>=<sp/>true;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/>setWriteError();</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1444"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="1451"><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_sd_file_1a67267a4b63d03a16e099195935613006" kindref="member">SdFile::write</ref>(uint8_t<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_sd_file_1a67267a4b63d03a16e099195935613006" kindref="member">write</ref>(&amp;b,<sp/>1);</highlight></codeline>
<codeline lineno="1453"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="1460"><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_sd_file_1a67267a4b63d03a16e099195935613006" kindref="member">SdFile::write</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>str)<sp/>{</highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_sd_file_1a67267a4b63d03a16e099195935613006" kindref="member">write</ref>(str,<sp/>strlen(str));</highlight></codeline>
<codeline lineno="1462"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__AVR__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1464"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="1470"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SdFile::write_P(PGM_P<sp/>str)<sp/>{</highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint8_t<sp/>c;<sp/>(c<sp/>=<sp/>pgm_read_byte(str));<sp/>str++)<sp/>{</highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_sd_file_1a67267a4b63d03a16e099195935613006" kindref="member">write</ref>(c);</highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1474"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="1481"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SdFile::writeln_P(PGM_P<sp/>str)<sp/>{</highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/>write_P(str);</highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/>println();</highlight></codeline>
<codeline lineno="1484"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1486"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="1492"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_sd_file_1a477e29153291a129529274eb9d74cdf6" kindref="member">SdFile::availableForWrite</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_sd_file_1ad9ca9b2b519a933c25e8f893ee0201b6" kindref="member">isFile</ref>()<sp/>||<sp/>!(flags_<sp/>&amp;<sp/><ref refid="_sd_fat_8h_1a44c1620ada13f6318ab39b9fa38ef55a" kindref="member">O_WRITE</ref>))<sp/>{</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"></highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>seek<sp/>to<sp/>end<sp/>of<sp/>file<sp/>if<sp/>append<sp/>flag</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((flags_<sp/>&amp;<sp/><ref refid="_sd_fat_8h_1a4242b37e810af3a6485adda0e08a9a2b" kindref="member">O_APPEND</ref>)<sp/>&amp;&amp;<sp/>curPosition_<sp/>!=<sp/>fileSize_)<sp/>{</highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_sd_file_1afa70bc7ba5eb789aee1b62fc5fafaa5b" kindref="member">seekEnd</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1503"><highlight class="normal"></highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vol_-&gt;isBusy())<sp/>{</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"></highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags_<sp/>&amp;<sp/>F_FILE_CLUSTER_ADDED)<sp/>{</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>new<sp/>cluster<sp/>added,<sp/>trigger<sp/>a<sp/>non-blocking<sp/>sync</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_sd_file_1a42f006b16e686ee164e6d7df41fc94cd" kindref="member">sync</ref>(0);</highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/><sp/><sp/>flags_<sp/>&amp;=<sp/>~F_FILE_CLUSTER_ADDED;</highlight></codeline>
<codeline lineno="1512"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1514"><highlight class="normal"></highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vol_-&gt;isCacheMirrorBlockDirty())<sp/>{</highlight></codeline>
<codeline lineno="1516"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cache<sp/>mirror<sp/>block<sp/>is<sp/>dirty,<sp/>trigger<sp/>a<sp/>non-blocking<sp/>sync</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/><sp/><sp/>vol_-&gt;cacheMirrorBlockFlush(0);</highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1520"><highlight class="normal"></highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/>flags_<sp/>|=<sp/>F_FILE_NON_BLOCKING_WRITE;</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"></highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/>uint16_t<sp/>blockOffset<sp/>=<sp/>curPosition_<sp/>&amp;<sp/>0X1FF;</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"><sp/><sp/>uint16_t<sp/>n<sp/>=<sp/>512<sp/>-<sp/>blockOffset;</highlight></codeline>
<codeline lineno="1525"><highlight class="normal"></highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="1527"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="libraries/SD-1.2.4/src/utility/SdFile.cpp"/>
  </compounddef>
</doxygen>
