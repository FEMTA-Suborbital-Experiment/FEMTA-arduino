<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="class_pin_ctrl" kind="class" language="C++" prot="public">
    <compoundname>PinCtrl</compoundname>
    <basecompoundref prot="public" virt="non-virtual">Protothread</basecompoundref>
    <includes refid="_pin_ctrl_8h" local="no">PinCtrl.h</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_pin_ctrl_1abe39a3ac84558a46dea0bc5ba39a5d55" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int PinCtrl::closeSV1</definition>
        <argsstring></argsstring>
        <name>closeSV1</name>
        <qualifiedname>PinCtrl::closeSV1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/pme/src/PinCtrl.h" line="58" column="9" bodyfile="main/pme/src/PinCtrl.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_pin_ctrl_1aa39597f74b4649bad9d4f3329bacd63d" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int PinCtrl::openSV1</definition>
        <argsstring></argsstring>
        <name>openSV1</name>
        <qualifiedname>PinCtrl::openSV1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/pme/src/PinCtrl.h" line="59" column="9" bodyfile="main/pme/src/PinCtrl.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_pin_ctrl_1ae1d1af73a55ec807240d05f286cec63c" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int PinCtrl::closeSV2</definition>
        <argsstring></argsstring>
        <name>closeSV2</name>
        <qualifiedname>PinCtrl::closeSV2</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/pme/src/PinCtrl.h" line="60" column="9" bodyfile="main/pme/src/PinCtrl.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_pin_ctrl_1ab5af45204e25ead56ce109870ef506f5" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int PinCtrl::openSV2</definition>
        <argsstring></argsstring>
        <name>openSV2</name>
        <qualifiedname>PinCtrl::openSV2</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/pme/src/PinCtrl.h" line="61" column="9" bodyfile="main/pme/src/PinCtrl.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_pin_ctrl_1aca5b3b6417ecad685b3897963fbf3673" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int PinCtrl::closeLV1</definition>
        <argsstring></argsstring>
        <name>closeLV1</name>
        <qualifiedname>PinCtrl::closeLV1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/pme/src/PinCtrl.h" line="62" column="9" bodyfile="main/pme/src/PinCtrl.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_pin_ctrl_1a0a3ad4622a307d0bfb3066a5f0620725" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int PinCtrl::openLV1</definition>
        <argsstring></argsstring>
        <name>openLV1</name>
        <qualifiedname>PinCtrl::openLV1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/pme/src/PinCtrl.h" line="63" column="9" bodyfile="main/pme/src/PinCtrl.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_pin_ctrl_1a23dd544aa7ed1e19bc54a7ddd88917fc" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int PinCtrl::signalPin</definition>
        <argsstring></argsstring>
        <name>signalPin</name>
        <qualifiedname>PinCtrl::signalPin</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/pme/src/PinCtrl.h" line="64" column="9" bodyfile="main/pme/src/PinCtrl.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_pin_ctrl_1aace9d6def6122250a23c9f217557430a" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool PinCtrl::closeSV1_bool</definition>
        <argsstring></argsstring>
        <name>closeSV1_bool</name>
        <qualifiedname>PinCtrl::closeSV1_bool</qualifiedname>
        <initializer>{0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/pme/src/PinCtrl.h" line="66" column="10" bodyfile="main/pme/src/PinCtrl.h" bodystart="66" bodyend="66"/>
      </memberdef>
      <memberdef kind="variable" id="class_pin_ctrl_1ad95d962187db9561a9d42d7b286b27c2" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool PinCtrl::openSV1_bool</definition>
        <argsstring></argsstring>
        <name>openSV1_bool</name>
        <qualifiedname>PinCtrl::openSV1_bool</qualifiedname>
        <initializer>{0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/pme/src/PinCtrl.h" line="67" column="10" bodyfile="main/pme/src/PinCtrl.h" bodystart="67" bodyend="67"/>
      </memberdef>
      <memberdef kind="variable" id="class_pin_ctrl_1aaa2cd126bbfe0837ec3718643cbf93b2" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool PinCtrl::closeSV2_bool</definition>
        <argsstring></argsstring>
        <name>closeSV2_bool</name>
        <qualifiedname>PinCtrl::closeSV2_bool</qualifiedname>
        <initializer>{0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/pme/src/PinCtrl.h" line="68" column="10" bodyfile="main/pme/src/PinCtrl.h" bodystart="68" bodyend="68"/>
      </memberdef>
      <memberdef kind="variable" id="class_pin_ctrl_1acfd5ca74c003e931ffe6758ff24ccedb" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool PinCtrl::openSV2_bool</definition>
        <argsstring></argsstring>
        <name>openSV2_bool</name>
        <qualifiedname>PinCtrl::openSV2_bool</qualifiedname>
        <initializer>{0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/pme/src/PinCtrl.h" line="69" column="10" bodyfile="main/pme/src/PinCtrl.h" bodystart="69" bodyend="69"/>
      </memberdef>
      <memberdef kind="variable" id="class_pin_ctrl_1ac6bafc0eb9bc6f5031048a249ee8b40a" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool PinCtrl::closeLV1_bool</definition>
        <argsstring></argsstring>
        <name>closeLV1_bool</name>
        <qualifiedname>PinCtrl::closeLV1_bool</qualifiedname>
        <initializer>{0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/pme/src/PinCtrl.h" line="70" column="10" bodyfile="main/pme/src/PinCtrl.h" bodystart="70" bodyend="70"/>
      </memberdef>
      <memberdef kind="variable" id="class_pin_ctrl_1a15ba7706aba2ceceb4e1f3bd792f0ff7" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool PinCtrl::openLV1_bool</definition>
        <argsstring></argsstring>
        <name>openLV1_bool</name>
        <qualifiedname>PinCtrl::openLV1_bool</qualifiedname>
        <initializer>{0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/pme/src/PinCtrl.h" line="71" column="10" bodyfile="main/pme/src/PinCtrl.h" bodystart="71" bodyend="71"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_pin_ctrl_1aa4cfc2d94200389c25ee1eeb2726a214" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PinCtrl::PinCtrl</definition>
        <argsstring>(int flowClose1, int flowOpen1, int flowClose2, int flowOpen2, int ventOpen, int ventClose, int signal)</argsstring>
        <name>PinCtrl</name>
        <qualifiedname>PinCtrl::PinCtrl</qualifiedname>
        <param>
          <type>int</type>
          <declname>flowClose1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flowOpen1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flowClose2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flowOpen2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ventOpen</declname>
          <defname>ventClose</defname>
        </param>
        <param>
          <type>int</type>
          <declname>ventClose</declname>
          <defname>ventOpen</defname>
        </param>
        <param>
          <type>int</type>
          <declname>signal</declname>
        </param>
        <briefdescription>
<para>Construct a PinController class with the pins corresponding to a valve or signal on the FEMTA Suborbital Experiment. </para>
        </briefdescription>
        <detaileddescription>
<para>The flow and vent pins correspond to valves on the Propellant Management Experiment, while the signal pin is an output which is measured by the FEMTA Thruster Experiment and determines whether the Thruster Experiment should begin at the right time.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>flowClose1</parametername>
</parameternamelist>
<parameterdescription>
<para>closeSV1 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flowOpen1</parametername>
</parameternamelist>
<parameterdescription>
<para>openSV1 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flowClose2</parametername>
</parameternamelist>
<parameterdescription>
<para>closeSV2 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flowOpen2</parametername>
</parameternamelist>
<parameterdescription>
<para>openSV2 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ventClose</parametername>
</parameternamelist>
<parameterdescription>
<para>closeLV1 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ventOpen</parametername>
</parameternamelist>
<parameterdescription>
<para>openLV1 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>signal</parametername>
</parameternamelist>
<parameterdescription>
<para>signal </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/pme/src/PinCtrl.h" line="34" column="5" bodyfile="main/pme/src/PinCtrl.cpp" bodystart="33" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="class_pin_ctrl_1a38719c52dcbe99f6230a51bf17f28f77" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PinCtrl::openFlowValve1</definition>
        <argsstring>()</argsstring>
        <name>openFlowValve1</name>
        <qualifiedname>PinCtrl::openFlowValve1</qualifiedname>
        <briefdescription>
<para>Open flow valve 1. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/pme/src/PinCtrl.h" line="44" column="10" bodyfile="main/pme/src/PinCtrl.cpp" bodystart="143" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="class_pin_ctrl_1a58db08121a93246bd87410709b36a692" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PinCtrl::closeFlowValve1</definition>
        <argsstring>()</argsstring>
        <name>closeFlowValve1</name>
        <qualifiedname>PinCtrl::closeFlowValve1</qualifiedname>
        <briefdescription>
<para>Close flow valve 1. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/pme/src/PinCtrl.h" line="45" column="10" bodyfile="main/pme/src/PinCtrl.cpp" bodystart="152" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="class_pin_ctrl_1a5e386cb600e543d75e8caf00355a3941" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PinCtrl::openFlowValve2</definition>
        <argsstring>()</argsstring>
        <name>openFlowValve2</name>
        <qualifiedname>PinCtrl::openFlowValve2</qualifiedname>
        <briefdescription>
<para>Open flow valve 2. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/pme/src/PinCtrl.h" line="46" column="10" bodyfile="main/pme/src/PinCtrl.cpp" bodystart="161" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="class_pin_ctrl_1ad0ce7969311375d091aa06ce7621179a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PinCtrl::closeFlowValve2</definition>
        <argsstring>()</argsstring>
        <name>closeFlowValve2</name>
        <qualifiedname>PinCtrl::closeFlowValve2</qualifiedname>
        <briefdescription>
<para>Close flow valve 2. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/pme/src/PinCtrl.h" line="47" column="10" bodyfile="main/pme/src/PinCtrl.cpp" bodystart="170" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="class_pin_ctrl_1a6ef0214620aed42aa885e659be665d87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PinCtrl::openVentValve</definition>
        <argsstring>()</argsstring>
        <name>openVentValve</name>
        <qualifiedname>PinCtrl::openVentValve</qualifiedname>
        <briefdescription>
<para>Open vent valve 1. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/pme/src/PinCtrl.h" line="48" column="10" bodyfile="main/pme/src/PinCtrl.cpp" bodystart="179" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="class_pin_ctrl_1a147c686c6879b7e574569bbfea69dd70" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PinCtrl::closeVentValve</definition>
        <argsstring>()</argsstring>
        <name>closeVentValve</name>
        <qualifiedname>PinCtrl::closeVentValve</qualifiedname>
        <briefdescription>
<para>Close vent valve 1. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/pme/src/PinCtrl.h" line="49" column="10" bodyfile="main/pme/src/PinCtrl.cpp" bodystart="188" bodyend="191"/>
      </memberdef>
      <memberdef kind="function" id="class_pin_ctrl_1aa658b5b491087b47e0c83ec4ceccc6e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PinCtrl::signalStart</definition>
        <argsstring>()</argsstring>
        <name>signalStart</name>
        <qualifiedname>PinCtrl::signalStart</qualifiedname>
        <briefdescription>
<para>Signal the start of an experiment. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/pme/src/PinCtrl.h" line="50" column="10" bodyfile="main/pme/src/PinCtrl.cpp" bodystart="197" bodyend="199"/>
      </memberdef>
      <memberdef kind="function" id="class_pin_ctrl_1a2ac6386b567543305a3f82e14054c58d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PinCtrl::signalStop</definition>
        <argsstring>()</argsstring>
        <name>signalStop</name>
        <qualifiedname>PinCtrl::signalStop</qualifiedname>
        <briefdescription>
<para>Signal to stop the experiment. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/pme/src/PinCtrl.h" line="51" column="10" bodyfile="main/pme/src/PinCtrl.cpp" bodystart="205" bodyend="207"/>
      </memberdef>
      <memberdef kind="function" id="class_pin_ctrl_1acb4a92935a1e3d525f4e29e8a6e607d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int PinCtrl::init</definition>
        <argsstring>(bool willInitializeValves=0)</argsstring>
        <name>init</name>
        <qualifiedname>PinCtrl::init</qualifiedname>
        <param>
          <type>bool</type>
          <declname>willInitializeValves</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Initialize the pin modes and set the initial state of the valves at pre-flight. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>int </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/pme/src/PinCtrl.h" line="53" column="9" bodyfile="main/pme/src/PinCtrl.cpp" bodystart="58" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="class_pin_ctrl_1a0959fe33d8bba4514287ed0d5c64a870" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool PinCtrl::Run</definition>
        <argsstring>()</argsstring>
        <name>Run</name>
        <qualifiedname>PinCtrl::Run</qualifiedname>
        <briefdescription>
<para>An overridden Protothread method which acts as a state machine. </para>
        </briefdescription>
        <detaileddescription>
<para>This checks if a certain pin is turned on and sets the pin to HIGH. After a certain time delay t_delay, set the pin to LOW.</para>
<para><simplesect kind="return"><para>true </para>
</simplesect>
<simplesect kind="return"><para>false </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/pme/src/PinCtrl.h" line="55" column="10" bodyfile="main/pme/src/PinCtrl.cpp" bodystart="84" bodyend="137"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_pin_ctrl_1ac539efce25d65e17de3b479248632cd5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PinCtrl::togglePin</definition>
        <argsstring>(int pin)</argsstring>
        <name>togglePin</name>
        <qualifiedname>PinCtrl::togglePin</qualifiedname>
        <param>
          <type>int</type>
          <declname>pin</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main/pme/src/PinCtrl.h" line="73" column="10"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Pin Controller class. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>PinCtrl</label>
        <link refid="class_pin_ctrl"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Protothread</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>PinCtrl</label>
        <link refid="class_pin_ctrl"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Protothread</label>
      </node>
    </collaborationgraph>
    <location file="main/pme/src/PinCtrl.h" line="32" column="1" bodyfile="main/pme/src/PinCtrl.h" bodystart="32" bodyend="75"/>
    <listofallmembers>
      <member refid="class_pin_ctrl_1a58db08121a93246bd87410709b36a692" prot="public" virt="non-virtual"><scope>PinCtrl</scope><name>closeFlowValve1</name></member>
      <member refid="class_pin_ctrl_1ad0ce7969311375d091aa06ce7621179a" prot="public" virt="non-virtual"><scope>PinCtrl</scope><name>closeFlowValve2</name></member>
      <member refid="class_pin_ctrl_1aca5b3b6417ecad685b3897963fbf3673" prot="private" virt="non-virtual"><scope>PinCtrl</scope><name>closeLV1</name></member>
      <member refid="class_pin_ctrl_1ac6bafc0eb9bc6f5031048a249ee8b40a" prot="private" virt="non-virtual"><scope>PinCtrl</scope><name>closeLV1_bool</name></member>
      <member refid="class_pin_ctrl_1abe39a3ac84558a46dea0bc5ba39a5d55" prot="private" virt="non-virtual"><scope>PinCtrl</scope><name>closeSV1</name></member>
      <member refid="class_pin_ctrl_1aace9d6def6122250a23c9f217557430a" prot="private" virt="non-virtual"><scope>PinCtrl</scope><name>closeSV1_bool</name></member>
      <member refid="class_pin_ctrl_1ae1d1af73a55ec807240d05f286cec63c" prot="private" virt="non-virtual"><scope>PinCtrl</scope><name>closeSV2</name></member>
      <member refid="class_pin_ctrl_1aaa2cd126bbfe0837ec3718643cbf93b2" prot="private" virt="non-virtual"><scope>PinCtrl</scope><name>closeSV2_bool</name></member>
      <member refid="class_pin_ctrl_1a147c686c6879b7e574569bbfea69dd70" prot="public" virt="non-virtual"><scope>PinCtrl</scope><name>closeVentValve</name></member>
      <member refid="class_pin_ctrl_1acb4a92935a1e3d525f4e29e8a6e607d7" prot="public" virt="non-virtual"><scope>PinCtrl</scope><name>init</name></member>
      <member refid="class_pin_ctrl_1a38719c52dcbe99f6230a51bf17f28f77" prot="public" virt="non-virtual"><scope>PinCtrl</scope><name>openFlowValve1</name></member>
      <member refid="class_pin_ctrl_1a5e386cb600e543d75e8caf00355a3941" prot="public" virt="non-virtual"><scope>PinCtrl</scope><name>openFlowValve2</name></member>
      <member refid="class_pin_ctrl_1a0a3ad4622a307d0bfb3066a5f0620725" prot="private" virt="non-virtual"><scope>PinCtrl</scope><name>openLV1</name></member>
      <member refid="class_pin_ctrl_1a15ba7706aba2ceceb4e1f3bd792f0ff7" prot="private" virt="non-virtual"><scope>PinCtrl</scope><name>openLV1_bool</name></member>
      <member refid="class_pin_ctrl_1aa39597f74b4649bad9d4f3329bacd63d" prot="private" virt="non-virtual"><scope>PinCtrl</scope><name>openSV1</name></member>
      <member refid="class_pin_ctrl_1ad95d962187db9561a9d42d7b286b27c2" prot="private" virt="non-virtual"><scope>PinCtrl</scope><name>openSV1_bool</name></member>
      <member refid="class_pin_ctrl_1ab5af45204e25ead56ce109870ef506f5" prot="private" virt="non-virtual"><scope>PinCtrl</scope><name>openSV2</name></member>
      <member refid="class_pin_ctrl_1acfd5ca74c003e931ffe6758ff24ccedb" prot="private" virt="non-virtual"><scope>PinCtrl</scope><name>openSV2_bool</name></member>
      <member refid="class_pin_ctrl_1a6ef0214620aed42aa885e659be665d87" prot="public" virt="non-virtual"><scope>PinCtrl</scope><name>openVentValve</name></member>
      <member refid="class_pin_ctrl_1aa4cfc2d94200389c25ee1eeb2726a214" prot="public" virt="non-virtual"><scope>PinCtrl</scope><name>PinCtrl</name></member>
      <member refid="class_pin_ctrl_1a0959fe33d8bba4514287ed0d5c64a870" prot="public" virt="non-virtual"><scope>PinCtrl</scope><name>Run</name></member>
      <member refid="class_pin_ctrl_1a23dd544aa7ed1e19bc54a7ddd88917fc" prot="private" virt="non-virtual"><scope>PinCtrl</scope><name>signalPin</name></member>
      <member refid="class_pin_ctrl_1aa658b5b491087b47e0c83ec4ceccc6e7" prot="public" virt="non-virtual"><scope>PinCtrl</scope><name>signalStart</name></member>
      <member refid="class_pin_ctrl_1a2ac6386b567543305a3f82e14054c58d" prot="public" virt="non-virtual"><scope>PinCtrl</scope><name>signalStop</name></member>
      <member refid="class_pin_ctrl_1ac539efce25d65e17de3b479248632cd5" prot="private" virt="non-virtual"><scope>PinCtrl</scope><name>togglePin</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
