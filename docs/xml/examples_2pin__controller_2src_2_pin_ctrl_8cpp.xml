<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="examples_2pin__controller_2src_2_pin_ctrl_8cpp" kind="file" language="C++">
    <compoundname>PinCtrl.cpp</compoundname>
    <includes refid="examples_2pin__controller_2src_2_pin_ctrl_8h" local="yes">PinCtrl.h</includes>
    <incdepgraph>
      <node id="4">
        <label>Arduino.h</label>
      </node>
      <node id="1">
        <label>examples/pin_controller/src/PinCtrl.cpp</label>
        <link refid="examples_2pin__controller_2src_2_pin_ctrl_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>PinCtrl.h</label>
        <link refid="examples_2pin__controller_2src_2_pin_ctrl_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>Protothread.h</label>
        <link refid="_protothread_8h_source"/>
      </node>
    </incdepgraph>
    <sectiondef kind="var">
      <memberdef kind="variable" id="examples_2pin__controller_2src_2_pin_ctrl_8cpp_1a2e6c18ab1e3d7a6fd1aae599d80c61cc" prot="public" static="no" mutable="no">
        <type>const float</type>
        <definition>const float t_delay</definition>
        <argsstring></argsstring>
        <name>t_delay</name>
        <initializer>{50}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="examples/pin_controller/src/PinCtrl.cpp" line="20" column="13" bodyfile="examples/pin_controller/src/PinCtrl.cpp" bodystart="20" bodyend="20"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="main_2pme_2src_2_pin_ctrl_8h" kindref="compound">PinCtrl.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>t_delay{50};</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><ref refid="class_pin_ctrl_1aa4cfc2d94200389c25ee1eeb2726a214" kindref="member">PinCtrl::PinCtrl</ref>(</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flowClose1,</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flowOpen1,<sp/><sp/></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flowClose2,</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flowOpen2,<sp/><sp/></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ventClose,<sp/></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ventOpen,<sp/></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>signal</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>)<sp/></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>:<sp/>closeSV1{flowClose1},<sp/></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>openSV1{flowOpen1},<sp/></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>closeSV2{flowClose2},<sp/></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>openSV2{flowOpen2},<sp/></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>closeLV1{ventClose},<sp/></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>openLV1{ventOpen},<sp/></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>signalPin{signal}</highlight></codeline>
<codeline lineno="53"><highlight class="normal">{}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_pin_ctrl_1acb4a92935a1e3d525f4e29e8a6e607d7" kindref="member">PinCtrl::init</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>willInitializeValves)<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>pinMode(closeSV1,<sp/>OUTPUT);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>pinMode(closeSV2,<sp/>OUTPUT);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>pinMode(openSV1,<sp/>OUTPUT);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>pinMode(openSV2,<sp/>OUTPUT);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>pinMode(closeLV1,<sp/>OUTPUT);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>pinMode(openLV1,<sp/>OUTPUT);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(willInitializeValves)<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_pin_ctrl_1a58db08121a93246bd87410709b36a692" kindref="member">closeFlowValve1</ref>();</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_pin_ctrl_1ad0ce7969311375d091aa06ce7621179a" kindref="member">closeFlowValve2</ref>();</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_pin_ctrl_1a6ef0214620aed42aa885e659be665d87" kindref="member">openVentValve</ref>();</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="77"><highlight class="normal">}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_pin_ctrl_1a0959fe33d8bba4514287ed0d5c64a870" kindref="member">PinCtrl::Run</ref>()<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>lastTime<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>PT_BEGIN();</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(1)<sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>lastTime<sp/>=<sp/>millis();</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Serial.println(&quot;In<sp/>loop&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>PT_YIELD();</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(closeSV1_bool)<sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>digitalWrite(closeSV1,<sp/>HIGH);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>PT_WAIT_UNTIL(millis()<sp/>-<sp/>lastTime<sp/>&gt;<sp/>t_delay);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lastTime<sp/>=<sp/>millis();</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>closeSV1_bool<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>digitalWrite(closeSV1,<sp/>LOW);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(closeSV2_bool)<sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>digitalWrite(closeSV2,<sp/>HIGH);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>PT_WAIT_UNTIL(millis()<sp/>-<sp/>lastTime<sp/>&gt;<sp/>t_delay);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lastTime<sp/>=<sp/>millis();</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>closeSV2_bool<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>digitalWrite(closeSV2,<sp/>LOW);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(openSV1_bool)<sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>digitalWrite(openSV1,<sp/>HIGH);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>PT_WAIT_UNTIL(millis()<sp/>-<sp/>lastTime<sp/>&gt;<sp/>t_delay);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lastTime<sp/>=<sp/>millis();</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>openSV1_bool<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>digitalWrite(openSV1,<sp/>LOW);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(openSV2_bool)<sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>digitalWrite(openSV2,<sp/>HIGH);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>PT_WAIT_UNTIL(millis()<sp/>-<sp/>lastTime<sp/>&gt;<sp/>t_delay);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lastTime<sp/>=<sp/>millis();</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>openSV2_bool<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>digitalWrite(openSV2,<sp/>LOW);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(closeLV1_bool)<sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>digitalWrite(closeLV1,<sp/>HIGH);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>PT_WAIT_UNTIL(millis()<sp/>-<sp/>lastTime<sp/>&gt;<sp/>t_delay);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lastTime<sp/>=<sp/>millis();</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>closeLV1_bool<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>digitalWrite(closeLV1,<sp/>LOW);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(openLV1_bool)<sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>digitalWrite(openLV1,<sp/>HIGH);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>PT_WAIT_UNTIL(millis()<sp/>-<sp/>lastTime<sp/>&gt;<sp/>t_delay);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lastTime<sp/>=<sp/>millis();</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>openLV1_bool<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>digitalWrite(openLV1,<sp/>LOW);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/>PT_END();</highlight></codeline>
<codeline lineno="140"><highlight class="normal">}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_pin_ctrl_1a38719c52dcbe99f6230a51bf17f28f77" kindref="member">PinCtrl::openFlowValve1</ref>()<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!openSV1_bool<sp/>&amp;&amp;<sp/>!closeSV1_bool)</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>openSV1_bool<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="149"><highlight class="normal">}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_pin_ctrl_1a58db08121a93246bd87410709b36a692" kindref="member">PinCtrl::closeFlowValve1</ref>()<sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!closeSV1_bool<sp/>&amp;&amp;<sp/>!openSV1_bool)</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>closeSV1_bool<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="158"><highlight class="normal">}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_pin_ctrl_1a5e386cb600e543d75e8caf00355a3941" kindref="member">PinCtrl::openFlowValve2</ref>()<sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!openSV2_bool<sp/>&amp;&amp;<sp/>!closeSV2_bool)</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>openSV2_bool<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="167"><highlight class="normal">}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_pin_ctrl_1ad0ce7969311375d091aa06ce7621179a" kindref="member">PinCtrl::closeFlowValve2</ref>(){</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!closeSV2_bool<sp/>&amp;&amp;<sp/>!openSV2_bool)</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>closeSV2_bool<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="176"><highlight class="normal">}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_pin_ctrl_1a6ef0214620aed42aa885e659be665d87" kindref="member">PinCtrl::openVentValve</ref>(){</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!openLV1_bool<sp/>&amp;&amp;<sp/>!openLV1_bool)</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>openLV1_bool<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="185"><highlight class="normal">}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_pin_ctrl_1a147c686c6879b7e574569bbfea69dd70" kindref="member">PinCtrl::closeVentValve</ref>()<sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!closeLV1_bool<sp/>&amp;&amp;<sp/>!openLV1_bool)</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>closeLV1_bool<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="194"><highlight class="normal">}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_pin_ctrl_1aa658b5b491087b47e0c83ec4ceccc6e7" kindref="member">PinCtrl::signalStart</ref>(){</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/>digitalWrite(signalPin,<sp/>HIGH);</highlight></codeline>
<codeline lineno="202"><highlight class="normal">}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_pin_ctrl_1a2ac6386b567543305a3f82e14054c58d" kindref="member">PinCtrl::signalStop</ref>(){</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/>digitalWrite(signalPin,<sp/>LOW);</highlight></codeline>
<codeline lineno="210"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="examples/pin_controller/src/PinCtrl.cpp"/>
  </compounddef>
</doxygen>
