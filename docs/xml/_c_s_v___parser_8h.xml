<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="_c_s_v___parser_8h" kind="file" language="C++">
    <compoundname>CSV_Parser.h</compoundname>
    <includes local="no">Arduino.h</includes>
    <includedby refid="_c_s_v___parser_8cpp" local="yes">libraries/CSV_Parser/CSV_Parser.cpp</includedby>
    <incdepgraph>
      <node id="2">
        <label>Arduino.h</label>
      </node>
      <node id="1">
        <label>libraries/CSV_Parser/CSV_Parser.h</label>
        <link refid="_c_s_v___parser_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="class_c_s_v___parser" prot="public">CSV_Parser</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/><sp/>https://github.com/michalmonday/CSV-Parser-for-Arduino<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>CSV_PARSER_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CSV_PARSER_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;Arduino.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="class_c_s_v___parser" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_c_s_v___parser" kindref="compound">CSV_Parser</ref><sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>keys;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**<sp/>values;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>fmt;<sp/></highlight><highlight class="comment">//<sp/>Example<sp/>type:<sp/><sp/>s<sp/>=<sp/>char*,<sp/>f<sp/>=<sp/>float,<sp/>L<sp/>=<sp/>uint32_t,<sp/>d<sp/>=<sp/>uint16_t<sp/>etc.<sp/>(see<sp/>github<sp/>page<sp/>for<sp/>full<sp/>list<sp/>of<sp/>types)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>https://github.com/michalmonday/CSV-Parser-for-Arduino#specifying-value-types</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>is_fmt_unsigned;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>What<sp/>is<sp/>stored<sp/>at<sp/>fmt<sp/>and<sp/>is_fmt_unsigned?</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>When<sp/>supplied<sp/>format<sp/>is<sp/>&quot;dd&quot;,<sp/>then:</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fmt<sp/>=<sp/>&quot;dd&quot;</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_fmt_unsigned<sp/>=<sp/>{false,<sp/>false}</highlight></codeline>
<codeline lineno="40"><highlight class="comment"></highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>When<sp/>supplied<sp/>format<sp/>is<sp/>&quot;udud&quot;,<sp/>then:</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fmt<sp/>=<sp/>&quot;dd&quot;</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_fmt_unsigned<sp/>=<sp/>{true,<sp/>true}</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rows_count,<sp/>cols_count;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>has_header;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>delimiter;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>quote_char;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>delim_chars[4];<sp/></highlight><highlight class="comment">//<sp/>useful<sp/>for<sp/>parsing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Stream<sp/>*<sp/>debug_serial;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>whole_csv_supplied;<sp/></highlight><highlight class="comment">//<sp/>if<sp/>the<sp/>whole<sp/>csv<sp/>was<sp/>supplied<sp/>at<sp/>once,<sp/>then<sp/>the<sp/>last<sp/>value<sp/>does<sp/>not<sp/>have<sp/>to<sp/>end<sp/>with<sp/>&quot;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>csv<sp/>was<sp/>supplied<sp/>by<sp/>chunks<sp/>then<sp/>the<sp/>last<sp/>value<sp/>must<sp/>end<sp/>with<sp/>&quot;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>member<sp/>will<sp/>allow<sp/>to<sp/>check<sp/>it<sp/>throughout<sp/>the<sp/>class</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>Members<sp/>responsible<sp/>for<sp/>keeping<sp/>track<sp/>of<sp/>chunked<sp/>supply<sp/>of<sp/>csv<sp/>string.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>leftover;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>string<sp/>that<sp/>wasn&apos;t<sp/>parsed<sp/>yet<sp/>because<sp/>it<sp/>doesn&apos;t<sp/>end<sp/>with<sp/>delimiter<sp/>or<sp/>new<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>uint16_t<sp/>current_col;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>header_parsed;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>Private<sp/>methods<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>parseStringValue(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<sp/>chars_occupied);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>saveNewValue(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>val,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>type_specifier,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>row,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_unsigned);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>int8_t<sp/>getTypeSize(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>type_specifier);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>getTypeName(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>type_specifier,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_unsigned);<sp/></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>AssignIsFmtUnsignedArray(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>fmt_);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>Helper<sp/>functions<sp/>useful<sp/>for<sp/>handling<sp/>unsigned<sp/>format<sp/>specifiers.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>strdup_ignoring_u(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>strlen_ignoring_u(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>strdup_trimmed(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>s);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>Passes<sp/>part<sp/>of<sp/>csv<sp/>string<sp/>to<sp/>be<sp/>parsed.<sp/><sp/></highlight></codeline>
<codeline lineno="79"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>Passing<sp/>the<sp/>string<sp/>by<sp/>chunks<sp/>will<sp/>allow<sp/>the<sp/>program<sp/>using<sp/>CSV_Parser<sp/>to<sp/>occupy<sp/>much<sp/>less<sp/>memory<sp/>(because<sp/>it<sp/>won&apos;t<sp/>have<sp/>to<sp/>store<sp/>the<sp/>whole<sp/>string).<sp/></highlight></codeline>
<codeline lineno="80"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>function<sp/>should<sp/>be<sp/>called<sp/>repetitively<sp/>until<sp/>the<sp/>whole<sp/>csv<sp/>string<sp/>is<sp/>supplied.<sp/><sp/></highlight></codeline>
<codeline lineno="81"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="82"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>chunk<sp/>-<sp/>part<sp/>of<sp/>the<sp/>csv<sp/>string<sp/>(it<sp/>can<sp/>be<sp/>incomplete<sp/>value,<sp/>does<sp/>not<sp/>have<sp/>to<sp/>end<sp/>with<sp/>delimiter,<sp/>could<sp/>be<sp/>a<sp/>single<sp/>char<sp/>string)<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>supplyChunk(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><ref refid="class_c_s_v___parser" kindref="compound">CSV_Parser</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>s,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>fmt,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>has_header=</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>delimiter=</highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>quote_char=</highlight><highlight class="charliteral">&apos;&quot;&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="105" refid="class_c_s_v___parser_1a0a229060a79e48d510a3ab698adfa402" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_c_s_v___parser_1a0a229060a79e48d510a3ab698adfa402" kindref="member">CSV_Parser</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>s,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>fmt,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hh,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>d,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>qc)<sp/>:<sp/><ref refid="class_c_s_v___parser" kindref="compound">CSV_Parser</ref>(s,<sp/>fmt,<sp/>hh,<sp/>d,<sp/>qc[0])<sp/>{}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="108" refid="class_c_s_v___parser_1ab48c97e7d7b09990e7550f5eafbeb33e" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_c_s_v___parser_1ab48c97e7d7b09990e7550f5eafbeb33e" kindref="member">CSV_Parser</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>fmt_,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hh=</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>d=</highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>qc=</highlight><highlight class="charliteral">&apos;&quot;&apos;</highlight><highlight class="normal">)<sp/>:<sp/><ref refid="class_c_s_v___parser" kindref="compound">CSV_Parser</ref>(0,<sp/>fmt_,<sp/>hh,<sp/>d,<sp/>qc)<sp/>{}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><ref refid="class_c_s_v___parser" kindref="compound">CSV_Parser</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>fmt_,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hh,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>d,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>qc)<sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="class_c_s_v___parser" kindref="compound">CSV_Parser</ref>(0,<sp/>fmt_,<sp/>hh,<sp/>d,<sp/>qc[0])<sp/>{}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><ref refid="class_c_s_v___parser_1a1e4436ea4baef41584667d55ccf31983" kindref="member">~CSV_Parser</ref>();</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>CSV_PARSER_DONT_IMPORT_SD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_s_v___parser_1ac127ae6fb3f70b1a7fe841385675d2a7" kindref="member">readSDfile</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*f_name);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getColumnsCount();</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_c_s_v___parser_1a41ff94800b60aa976d10db7071957560" kindref="member">getRowsCount</ref>();</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="132" refid="class_c_s_v___parser_1ae18a3b9fcebec1305ba23cfe50c56575" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><ref refid="class_c_s_v___parser_1ae18a3b9fcebec1305ba23cfe50c56575" kindref="member">getValues</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>key);<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="137" refid="class_c_s_v___parser_1a6b07702c6dc7233d8e7297fcf0ba99ae" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><ref refid="class_c_s_v___parser_1a6b07702c6dc7233d8e7297fcf0ba99ae" kindref="member">getValues</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col_index);<sp/><sp/></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><ref refid="class_c_s_v___parser_1abfcc311c0f24c5a816651c0366a22979" kindref="member">operator [] </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*key);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><ref refid="class_c_s_v___parser_1abfcc311c0f24c5a816651c0366a22979" kindref="member">operator [] </ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col_index);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>printKeys(Stream<sp/>&amp;ser<sp/>=<sp/>Serial);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_s_v___parser_1a8945f77049c64f6a59b08c146caa04d3" kindref="member">print</ref>(Stream<sp/>&amp;ser<sp/>=<sp/>Serial);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><ref refid="class_c_s_v___parser" kindref="compound">CSV_Parser</ref><sp/>&amp;<sp/><ref refid="class_c_s_v___parser_1aed45a6caaac8e820d7818a77a9abdf7c" kindref="member">operator &lt;&lt; </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><ref refid="class_c_s_v___parser" kindref="compound">CSV_Parser</ref><sp/>&amp;<sp/><ref refid="class_c_s_v___parser_1aed45a6caaac8e820d7818a77a9abdf7c" kindref="member">operator &lt;&lt; </ref>(String<sp/>s);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><ref refid="class_c_s_v___parser" kindref="compound">CSV_Parser</ref><sp/>&amp;<sp/><ref refid="class_c_s_v___parser_1aed45a6caaac8e820d7818a77a9abdf7c" kindref="member">operator &lt;&lt; </ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="179" refid="class_c_s_v___parser_1a352503aba3daf2e9db306c22f2c25692" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_c_s_v___parser" kindref="compound">CSV_Parser</ref><sp/>&amp;<sp/><ref refid="class_c_s_v___parser_1aed45a6caaac8e820d7818a77a9abdf7c" kindref="member">operator &lt;&lt; </ref>(T<sp/>t){</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>supplyChunk(String(t).c_str());</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_s_v___parser_1aafbdf5883363d81d2f494025a247a0f7" kindref="member">parseLeftover</ref>();</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//static<sp/>void<sp/>setDebugSerial(Stream<sp/>&amp;ser)<sp/>{<sp/>debug_serial<sp/>=<sp/>&amp;ser;<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal">};</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="libraries/CSV_Parser/CSV_Parser.h"/>
  </compounddef>
</doxygen>
